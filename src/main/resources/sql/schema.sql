--------------------------------------------------------
--  File created - Monday-May-26-2025
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type T_ARRAY_OPCION_PREGUNTA_TYPE
--------------------------------------------------------

CREATE OR REPLACE EDITIONABLE TYPE "MIGUEL"."T_ARRAY_OPCION_PREGUNTA_TYPE" AS TABLE OF T_REGISTRO_OPCION_PREGUNTA;

/
--------------------------------------------------------
--  DDL for Type T_ARRAY_PREGUNTA_EXAMEN_TYPE
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "MIGUEL"."T_ARRAY_PREGUNTA_EXAMEN_TYPE" AS TABLE OF T_REGISTRO_PREGUNTA_EXAMEN;

/
--------------------------------------------------------
--  DDL for Type T_REGISTRO_OPCION_PREGUNTA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "MIGUEL"."T_REGISTRO_OPCION_PREGUNTA" AS OBJECT (
    texto_opcion        VARCHAR2(255), -- Coincide con OPCIONPREGUNTA.RESPUESTA
    es_correcta         CHAR(1)        -- Coincide con OPCIONPREGUNTA.ES_CORRECTA ('S' o 'N')
);

/
--------------------------------------------------------
--  DDL for Type T_REGISTRO_PREGUNTA_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "MIGUEL"."T_REGISTRO_PREGUNTA_EXAMEN" AS OBJECT (
    id_pregunta         NUMBER,
    porcentaje          NUMBER(5,2) -- Coincide con DETALLEPREGUNTAEXAMEN.PORCENTAJE
);

/
--------------------------------------------------------
--  DDL for Sequence SEQ_CURSO
--------------------------------------------------------

CREATE SEQUENCE  "MIGUEL"."SEQ_CURSO"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 100 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_EXAMEN_ID
--------------------------------------------------------

CREATE SEQUENCE  "MIGUEL"."SEQ_EXAMEN_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 146 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_OPCIONPREGUNTA_ID
--------------------------------------------------------

CREATE SEQUENCE  "MIGUEL"."SEQ_OPCIONPREGUNTA_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 100 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PREGEXAEST_ID
--------------------------------------------------------

CREATE SEQUENCE  "MIGUEL"."SEQ_PREGEXAEST_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 279 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PREGUNTA_ID
--------------------------------------------------------

CREATE SEQUENCE  "MIGUEL"."SEQ_PREGUNTA_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 100 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_PRESENTACION_EXAMEN_ID
--------------------------------------------------------

CREATE SEQUENCE  "MIGUEL"."SEQ_PRESENTACION_EXAMEN_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 137 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence SEQ_RESPUESTA_PREGUNTA_ID
--------------------------------------------------------

CREATE SEQUENCE  "MIGUEL"."SEQ_RESPUESTA_PREGUNTA_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 250 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table CATEGORIA
--------------------------------------------------------

CREATE TABLE "MIGUEL"."CATEGORIA"
(	"ID" NUMBER(*,0),
     "NOMBRE" VARCHAR2(20 BYTE),
     "DESCRIPCION" VARCHAR2(100 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table CONTENIDO
--------------------------------------------------------

CREATE TABLE "MIGUEL"."CONTENIDO"
(	"ID_CONTENIDO" NUMBER(*,0),
     "NOMBRE" VARCHAR2(20 BYTE),
     "ID_UNIDAD" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_ACADEMICO" ;
--------------------------------------------------------
--  DDL for Table CREACION
--------------------------------------------------------

CREATE TABLE "MIGUEL"."CREACION"
(	"ID" NUMBER(*,0),
     "NOMBRE" VARCHAR2(20 BYTE),
     "DESCRIPCION" VARCHAR2(100 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table CURSO
--------------------------------------------------------

CREATE TABLE "MIGUEL"."CURSO"
(	"ID_CURSO" NUMBER(*,0),
     "NOMBRE" VARCHAR2(20 BYTE),
     "DESCRIPCION" VARCHAR2(100 BYTE),
     "PROFESOR_CEDULA" NUMBER(10,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_ACADEMICO" ;
--------------------------------------------------------
--  DDL for Table DETALLECURSOHORARIO
--------------------------------------------------------

CREATE TABLE "MIGUEL"."DETALLECURSOHORARIO"
(	"CURSO_ID" NUMBER(*,0),
     "HORARIO_CLASE_ID" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_ACADEMICO" ;
--------------------------------------------------------
--  DDL for Table DETALLEESTUDIANTECURSO
--------------------------------------------------------

CREATE TABLE "MIGUEL"."DETALLEESTUDIANTECURSO"
(	"ESTUDIANTE_CEDULA" NUMBER(10,0),
     "CURSO_ID" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_ACADEMICO" ;
--------------------------------------------------------
--  DDL for Table DETALLEPREGUNTAEXAMEN
--------------------------------------------------------

CREATE TABLE "MIGUEL"."DETALLEPREGUNTAEXAMEN"
(	"EXAMEN_ID" NUMBER(*,0),
     "PREGUNTA_ID" NUMBER(*,0),
     "PORCENTAJE" NUMBER(5,2)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table DIA_SEMANA
--------------------------------------------------------

CREATE TABLE "MIGUEL"."DIA_SEMANA"
(	"ID" NUMBER(*,0),
     "NOMBRE" VARCHAR2(20 BYTE),
     "DESCRIPCION" VARCHAR2(100 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_ACADEMICO" ;
--------------------------------------------------------
--  DDL for Table ESTUDIANTE
--------------------------------------------------------

CREATE TABLE "MIGUEL"."ESTUDIANTE"
(	"CEDULA" NUMBER(10,0),
     "NOMBRE" VARCHAR2(30 BYTE),
     "CORREO" VARCHAR2(30 BYTE),
     "CONTRASENA" VARCHAR2(20 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_USUARIOS" ;
--------------------------------------------------------
--  DDL for Table EXAMEN
--------------------------------------------------------

CREATE TABLE "MIGUEL"."EXAMEN"
(	"ID" NUMBER(*,0),
     "NOMBRE" VARCHAR2(50 BYTE),
     "TIEMPO" NUMBER,
     "NUMERO_PREGUNTAS" NUMBER(10,0),
     "FECHA" DATE,
     "HORA" DATE,
     "CALIFICACION_MIN_APROBATORIA" NUMBER(5,2),
     "PESO_CURSO" NUMBER(5,2),
     "DESCRIPCION" VARCHAR2(100 BYTE),
     "CREACION_ID" NUMBER(*,0),
     "CATEGORIA_ID" NUMBER(*,0),
     "CURSO_ID" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table HORARIO_CLASE
--------------------------------------------------------

CREATE TABLE "MIGUEL"."HORARIO_CLASE"
(	"ID_HORARIO" NUMBER(*,0),
     "HORA_INICIO" DATE,
     "HORA_FIN" DATE,
     "DIA_SEMANA_ID" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_ACADEMICO" ;
--------------------------------------------------------
--  DDL for Table NIVEL
--------------------------------------------------------

CREATE TABLE "MIGUEL"."NIVEL"
(	"ID" NUMBER(*,0),
     "NOMBRE" VARCHAR2(30 BYTE),
     "DESCRIPCION" VARCHAR2(100 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table OPCIONPREGUNTA
--------------------------------------------------------

CREATE TABLE "MIGUEL"."OPCIONPREGUNTA"
(	"ID" NUMBER(*,0),
     "RESPUESTA" VARCHAR2(255 BYTE),
     "ES_CORRECTA" CHAR(1 BYTE),
	"PREGUNTA_ID" NUMBER(*,0),
	"SECUENCIA" NUMBER
   ) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table PREGUNTA
--------------------------------------------------------

CREATE TABLE "MIGUEL"."PREGUNTA"
(	"ID_PREGUNTA" NUMBER(*,0),
     "TEXTO" VARCHAR2(300 BYTE),
     "TIEMPO_ESTIMADO" NUMBER,
     "PORCENTAJE" NUMBER(5,2),
     "TIPO_PREGUNTA_ID" NUMBER(*,0),
     "VISIBILIDAD_ID" NUMBER(*,0),
     "NIVEL_ID" NUMBER(*,0),
     "PREGUNTA_PADRE" NUMBER(*,0),
     "CONTENIDO_ID" NUMBER(*,0),
     "CREADOR_CEDULA_PROFESOR" NUMBER(10,0),
     "FECHA_CREACION" DATE DEFAULT SYSDATE,
     "FECHA_MODIFICACION" DATE,
     "USUARIO_MODIFICACION" VARCHAR2(30 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table PREGUNTAEXAMENESTUDIANTE
--------------------------------------------------------

CREATE TABLE "MIGUEL"."PREGUNTAEXAMENESTUDIANTE"
(	"ID" NUMBER(*,0),
     "TIEMPO" NUMBER,
     "PRESENTACION_EXAMEN_ID" NUMBER(*,0),
     "DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID" NUMBER(*,0),
     "DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID" NUMBER(*,0),
     "PORCENTAJE_EN_PRESENTACION" NUMBER(5,2)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_HISTORICO" ;

COMMENT ON COLUMN "MIGUEL"."PREGUNTAEXAMENESTUDIANTE"."PORCENTAJE_EN_PRESENTACION" IS 'Porcentaje normalizado que esta pregunta (si es principal) tiene en esta presentación específica del examen. Para subpreguntas, es su peso relativo al padre.';
--------------------------------------------------------
--  DDL for Table PRESENTACIONEXAMEN
--------------------------------------------------------

CREATE TABLE "MIGUEL"."PRESENTACIONEXAMEN"
(	"ID" NUMBER(*,0),
     "CALIFICACION" NUMBER(5,2),
     "RESPUESTAS_CORRECTAS" NUMBER(10,0),
     "RESPUESTAS_INCORRECTAS" NUMBER(10,0),
     "TIEMPO" NUMBER,
     "HORA_INICIO" DATE,
     "HORA_FIN" DATE,
     "DIRECCION_IP" VARCHAR2(45 BYTE),
     "EXAMEN_ID" NUMBER(*,0),
     "ESTUDIANTE_CEDULA" NUMBER(10,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_HISTORICO" ;
--------------------------------------------------------
--  DDL for Table PROFESOR
--------------------------------------------------------

CREATE TABLE "MIGUEL"."PROFESOR"
(	"CEDULA" NUMBER(10,0),
     "NOMBRE" VARCHAR2(30 BYTE),
     "CORREO" VARCHAR2(30 BYTE),
     "CONTRASENA" VARCHAR2(20 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_USUARIOS" ;
--------------------------------------------------------
--  DDL for Table RESPUESTAPREGUNTA
--------------------------------------------------------

CREATE TABLE "MIGUEL"."RESPUESTAPREGUNTA"
(	"ID" NUMBER,
     "RESPUESTA_DADA" VARCHAR2(100 BYTE),
     "OPCION_PREGUNTA_ID" NUMBER(*,0),
     "PREGUNTAEXAMENESTUDIANTE_ID" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_HISTORICO" ;
--------------------------------------------------------
--  DDL for Table TIPOPREGUNTA
--------------------------------------------------------

CREATE TABLE "MIGUEL"."TIPOPREGUNTA"
(	"ID" NUMBER(*,0),
     "NOMBRE" VARCHAR2(30 BYTE),
     "DESCRIPCION" VARCHAR2(100 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
--------------------------------------------------------
--  DDL for Table UNIDAD
--------------------------------------------------------

CREATE TABLE "MIGUEL"."UNIDAD"
(	"ID_UNIDAD" NUMBER(*,0),
     "NOMBRE" VARCHAR2(20 BYTE),
     "ID_CURSO" NUMBER(*,0)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_ACADEMICO" ;
--------------------------------------------------------
--  DDL for Table VISIBILIDAD
--------------------------------------------------------

CREATE TABLE "MIGUEL"."VISIBILIDAD"
(	"ID" NUMBER(*,0),
     "NOMBRE" VARCHAR2(30 BYTE),
     "DESCRIPCION" VARCHAR2(100 BYTE)
) SEGMENT CREATION IMMEDIATE
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_EVALUACIONES" ;
REM INSERTING into MIGUEL.CATEGORIA
SET DEFINE OFF;
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (1,'Parcial','Evaluación parcial');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (2,'Final','Examen final');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (3,'Quiz','Evaluación rápida');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (4,'Taller','Actividad práctica');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (5,'Laboratorio','Práctica experimental');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (6,'Proyecto','Trabajo aplicado');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (7,'Diagnóstico','Evaluación inicial');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (8,'Simulacro','Preparación examen');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (9,'Seguimiento','Evaluación continua');
Insert into MIGUEL.CATEGORIA (ID,NOMBRE,DESCRIPCION) values (10,'Competencia','Desafío entre estudiantes');
REM INSERTING into MIGUEL.CONTENIDO
SET DEFINE OFF;
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (1,'Op. Números Reales',1);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (2,'Resol. Ecuac. Lin.',1);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (3,'Conceptos/Pseudocod.',2);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (4,'Variables/Tipos Dato',2);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (5,'Leyes de Newton',3);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (6,'Cinematica/Dinamica',3);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (7,'Modelo Entidad-Rel.',4);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (8,'Normalizacion Tablas',4);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (9,'Redaccion Academica',15);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (10,'Técnicas Expr. Oral',5);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (11,'Concepto de límite',6);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (12,'Funciones continuas',6);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (13,'Método Gauss-Jordan',7);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (14,'Matrices/Determinant',7);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (15,'Pilas y colas',8);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (16,'Listas enlazadas',8);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (17,'Clases y objetos',9);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (18,'Herencia/Polimorf.',9);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (19,'Componentes de un SO',10);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (20,'Llamadas al sistema',10);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (21,'Distancia Puntos',11);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (22,'Ecuación Recta',11);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (23,'Ciclos For y While',12);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (24,'Sentencias If-Else',12);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (25,'Calor y Temperatura',13);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (26,'Leyes Termodinámica',13);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (27,'Consultas SELECT',14);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (28,'JOINs',14);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (29,'Ensayo argumentativo',15);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (30,'Normas APA',15);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (31,'Reglas Derivación',16);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (32,'Optimización',16);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (33,'Bases y dimensión',17);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (34,'Transf. Lineales',17);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (35,'Árboles binarios',18);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (36,'Grafos',18);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (37,'Singleton y Factory',19);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (38,'Observer y Strategy',19);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (39,'Estados Proceso',20);
Insert into MIGUEL.CONTENIDO (ID_CONTENIDO,NOMBRE,ID_UNIDAD) values (40,'Planificación CPU',20);
REM INSERTING into MIGUEL.CREACION
SET DEFINE OFF;
Insert into MIGUEL.CREACION (ID,NOMBRE,DESCRIPCION) values (1,'Manual','Creado por profesor');
Insert into MIGUEL.CREACION (ID,NOMBRE,DESCRIPCION) values (2,'Automático','Generado por sistema');
REM INSERTING into MIGUEL.CURSO
SET DEFINE OFF;
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (1,'Matematicas Basicas','Fundamentos de matemáticas',1000000001);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (2,'Programación I','Introducción a la programación',1000000002);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (3,'Física General','Conceptos básicos de física',1000000003);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (4,'Bases de Datos','Diseño y manejo de bases de datos',1000000004);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (5,'Comunicación','Habilidades de comunicación',1000000005);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (6,'Cálculo Diferencial','Cálculo de una variable',1000000006);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (7,'Álgebra Lineal','Vectores y matrices',1000000007);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (8,'Estructuras de Datos','Organización de datos en memoria',1000000008);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (9,'Prog. Avanzada','Técnicas avanzadas de desarrollo',1000000009);
Insert into MIGUEL.CURSO (ID_CURSO,NOMBRE,DESCRIPCION,PROFESOR_CEDULA) values (10,'Sistemas Operativos','Gestión de recursos computacionales',1000000010);
REM INSERTING into MIGUEL.DETALLECURSOHORARIO
SET DEFINE OFF;
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (1,1);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (1,3);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (1,11);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (2,2);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (2,4);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (2,12);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (3,3);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (3,5);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (3,13);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (4,4);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (4,6);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (4,14);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (5,5);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (5,7);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (5,15);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (6,1);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (6,6);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (6,8);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (7,2);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (7,7);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (7,9);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (8,3);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (8,8);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (8,10);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (9,4);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (9,9);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (9,11);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (10,5);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (10,10);
Insert into MIGUEL.DETALLECURSOHORARIO (CURSO_ID,HORARIO_CLASE_ID) values (10,12);
REM INSERTING into MIGUEL.DETALLEESTUDIANTECURSO
SET DEFINE OFF;
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000001,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000001,2);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000002,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000002,3);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000003,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000003,4);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000004,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000004,5);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000005,4);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000005,6);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000006,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000006,7);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000007,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000007,8);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000008,7);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000008,9);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000009,8);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000009,10);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000010,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000010,9);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000011,1);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000011,4);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000012,2);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000012,8);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000013,3);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000013,6);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000014,5);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000014,10);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000015,7);
Insert into MIGUEL.DETALLEESTUDIANTECURSO (ESTUDIANTE_CEDULA,CURSO_ID) values (2000000015,9);
REM INSERTING into MIGUEL.DETALLEPREGUNTAEXAMEN
SET DEFINE OFF;
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (1,1,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (1,11,0.2);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (1,19,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (1,7,0.2);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (2,2,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (2,12,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (2,8,0.2);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (2,20,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (2,16,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (3,3,0.5);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (3,13,0.5);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (4,4,0.4);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (4,14,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (4,7,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (5,5,0.6);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (5,9,0.4);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (6,6,0.4);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (6,15,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (6,11,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (7,7,0.4);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (7,19,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (7,13,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (8,8,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (8,16,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (8,20,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (8,2,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (9,9,0.4);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (9,17,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (9,12,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (10,10,0.4);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (10,18,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (10,3,0.3);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (11,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (11,11,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (11,19,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (11,7,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (12,2,0.5);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (12,12,0.5);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (118,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (134,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (135,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (135,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (135,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (135,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (135,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (135,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (135,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,40,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (145,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (106,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (110,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (137,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (137,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (137,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (137,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (138,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (138,32,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (138,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (139,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (139,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (139,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (140,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (140,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (140,32,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (140,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (141,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (142,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (109,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (114,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (115,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (116,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (117,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (119,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (120,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (121,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (122,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (123,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (124,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (125,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (126,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,28,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,32,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (127,34,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (128,32,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (128,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (128,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (129,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (129,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (129,32,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (131,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (131,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (131,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (131,29,29.75);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (132,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (132,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (132,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (132,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (132,32,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (132,28,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (133,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (133,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (133,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (133,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (133,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,32,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (136,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (143,11,0.15);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,33,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,26,100);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,31,20);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,27,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,38,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,30,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,37,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,29,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,35,70);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,36,10);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,1,0.25);
Insert into MIGUEL.DETALLEPREGUNTAEXAMEN (EXAMEN_ID,PREGUNTA_ID,PORCENTAJE) values (144,11,0.15);
REM INSERTING into MIGUEL.DIA_SEMANA
SET DEFINE OFF;
Insert into MIGUEL.DIA_SEMANA (ID,NOMBRE,DESCRIPCION) values (1,'Lunes','Primer día laboral');
Insert into MIGUEL.DIA_SEMANA (ID,NOMBRE,DESCRIPCION) values (2,'Martes','Segundo día');
Insert into MIGUEL.DIA_SEMANA (ID,NOMBRE,DESCRIPCION) values (3,'Miércoles','Mitad de semana');
Insert into MIGUEL.DIA_SEMANA (ID,NOMBRE,DESCRIPCION) values (4,'Jueves','Preparación fin de semana');
Insert into MIGUEL.DIA_SEMANA (ID,NOMBRE,DESCRIPCION) values (5,'Viernes','Último día hábil');
Insert into MIGUEL.DIA_SEMANA (ID,NOMBRE,DESCRIPCION) values (6,'Sábado','Clases especiales');
Insert into MIGUEL.DIA_SEMANA (ID,NOMBRE,DESCRIPCION) values (7,'Domingo','Descanso');
REM INSERTING into MIGUEL.ESTUDIANTE
SET DEFINE OFF;
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000001,'Juan Gómez Pérez','j.gom1@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000002,'María Rodríguez López','m.rod2@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000003,'Carlos Martínez García','c.mar3@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000004,'Ana Hernández Sánchez','a.her4@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000005,'Luis López Ramírez','l.lop5@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000006,'Laura Pérez Torres','l.per6@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000007,'Pedro Sánchez Vargas','p.san7@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000008,'Sofía Gómez Morales','s.gom8@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000009,'Diego Rodríguez Ortiz','d.rod9@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000010,'Valentina Martínez Castro','v.mar10@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000011,'Andrés Jiménez Ruiz','a.jim11@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000012,'Camila Vargas Moreno','c.var12@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000013,'Ricardo Castro Silva','r.cas13@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000014,'Isabella Mora Ortiz','i.mor14@edutec.edu','12345678');
Insert into MIGUEL.ESTUDIANTE (CEDULA,NOMBRE,CORREO,CONTRASENA) values (2000000015,'Mateo Rojas Peña','m.roj15@edutec.edu','12345678');
REM INSERTING into MIGUEL.EXAMEN
SET DEFINE OFF;
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (1,'Parcial 1 Matematicas',90,4,to_date('28-FEB-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.2,'Parcial 1 - Matemáticas Básicas',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (2,'Final Programacion I',120,5,to_date('30-MAR-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.25,'Final - Programación I',1,2,2);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (3,'Quiz Fisica General',30,2,to_date('14-APR-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),3,0.1,'Quiz - Física General',2,3,3);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (4,'Parcial 1 BD',90,3,to_date('19-APR-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.2,'Parcial 1 - Bases de Datos',1,1,4);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (5,'Final Comunicacion',120,2,to_date('24-APR-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.25,'Final - Comunicación',1,2,5);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (6,'Quiz Calculo Dif',60,3,to_date('10-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),4,0.15,'Quiz - Cálculo Diferencial',2,3,6);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (7,'Parcial 1 Algebra',90,3,to_date('15-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.2,'Parcial 1 - Álgebra Lineal',1,1,7);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (8,'Final Estructuras',120,4,to_date('20-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.25,'Final - Estructuras de Datos',1,2,8);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (9,'Quiz Prog Avanzada',45,3,to_date('25-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),3,0.1,'Quiz - Prog. Avanzada',2,3,9);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (10,'Parcial 1 Sist Op',90,3,to_date('30-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.2,'Parcial 1 - Sistemas Operativos',1,1,10);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (11,'Final Matematicas',120,4,to_date('05-JUN-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.25,'Final - Matemáticas Básicas',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (12,'Quiz Programacion I',30,2,to_date('10-JUN-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),3,0.1,'Quiz - Programación I',2,3,2);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (13,'Parcial 1 Fisica',90,3,to_date('15-JUN-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.2,'Parcial 1 - Física General',1,1,3);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (14,'Final Bases de Datos',120,4,to_date('20-JUN-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5,0.25,'Final - Bases de Datos',1,2,4);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (15,'Quiz Comunicacion',60,3,to_date('25-JUN-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),4,0.15,'Quiz - Comunicación',2,3,5);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (138,'SAsasa',240,3,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'asdasdas',1,4,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (118,'12312312',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'qweqweqwe',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (134,'Excelente',240,8,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'asjdkasjd',2,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (135,'Parcial sorpresa',240,5,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'adasdasd',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (145,'Parcial 2',60,10,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),3,20,'Aaaaaaaaaaa',2,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (106,'Parcial 1',60,10,to_date('29-APR-25','DD-MON-RR'),to_date('29-APR-25','DD-MON-RR'),60,20,'Examen',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (109,'Parcial de prueba',60,10,to_date('03-JUN-26','DD-MON-RR'),to_date('03-JUN-26','DD-MON-RR'),3,20,'Parcial registrado',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (110,'Examen de test',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'Descripcion',1,4,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (137,'aaaaaaaaaaaaaaa',240,3,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'aaaaaaaaaaaaaaaaaaaaaaa',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (139,'Parcial 3ee',60,3,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),3,20,'Descripcion23werwe',2,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (140,'Examen a',60,3,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),3,20,'asdasdasd',1,3,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (141,'Paricial 2',60,10,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),3,20,'Prueba',2,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (142,'Parcial 3',60,10,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),3,20,'qweqweqeqwe',2,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (114,'qweqweqwe',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'qweqweqwe',1,3,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (115,'weqweqwe',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'qweqweqwe',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (116,'weadfcsdf',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'qweQWEQWE',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (117,'bbndgzfzgd',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'zsdgfsfdgdfg',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (119,'Examen est',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'qweqweqweqwe',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (120,'Esttttttt',60,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'qweqweqeqeqweqw',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (121,'qweqweqweqwe',60,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'123123123',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (122,'123123123',60,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'Examen 1',1,3,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (123,'aaaaaaaaaaaaa',120,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'aaaaaaaaaaaaaaaa',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (124,'bbbbbbbbbbbbbbbbbb',60,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'bbbbbbbbbbbbbbbbbbbb',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (125,'cccccccccccccc',60,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'ccccccccccccccccc',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (126,'ddddddddddddd',120,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'dddddddddddd',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (127,'Parcial 3123',120,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'Parcial de prueba',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (128,'Preguntas Arreglo',60,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'aaaaaaaaaaaa',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (129,'Preguntas especiales',240,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'ffffffffffffffffffff',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (131,'Nombre test',240,3,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'Pregunta',2,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (132,'Especial',60,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'qweqweqwe',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (133,'Este es especial',60,10,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),3,20,'Essssssss',1,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (136,'Esssssssssssss',240,10,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),3,20,'adasdasdasd',1,1,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (143,'Parcial',60,10,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),3,20,'Examen',2,2,1);
Insert into MIGUEL.EXAMEN (ID,NOMBRE,TIEMPO,NUMERO_PREGUNTAS,FECHA,HORA,CALIFICACION_MIN_APROBATORIA,PESO_CURSO,DESCRIPCION,CREACION_ID,CATEGORIA_ID,CURSO_ID) values (144,'Parcial de prueba',60,10,to_date('27-MAY-25','DD-MON-RR'),to_date('27-MAY-25','DD-MON-RR'),3,20,'Examen',2,2,1);
REM INSERTING into MIGUEL.HORARIO_CLASE
SET DEFINE OFF;
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (1,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),1);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (2,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),1);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (3,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),2);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (4,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),3);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (5,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),4);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (6,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),5);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (7,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),6);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (8,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),7);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (9,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),1);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (10,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),6);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (11,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),6);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (12,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),7);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (13,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),7);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (14,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),6);
Insert into MIGUEL.HORARIO_CLASE (ID_HORARIO,HORA_INICIO,HORA_FIN,DIA_SEMANA_ID) values (15,to_date('01-MAY-25','DD-MON-RR'),to_date('01-MAY-25','DD-MON-RR'),7);
REM INSERTING into MIGUEL.NIVEL
SET DEFINE OFF;
Insert into MIGUEL.NIVEL (ID,NOMBRE,DESCRIPCION) values (1,'Básico','Fundamentos');
Insert into MIGUEL.NIVEL (ID,NOMBRE,DESCRIPCION) values (2,'Intermedio','Aplicación práctica');
Insert into MIGUEL.NIVEL (ID,NOMBRE,DESCRIPCION) values (3,'Avanzado','Análisis complejo');
REM INSERTING into MIGUEL.OPCIONPREGUNTA
SET DEFINE OFF;
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (1,'x = 5','S',1,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (2,'x = 10','N',1,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (3,'x = 7.5','N',1,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (4,'x = 15','N',1,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (5,'Verdadero','S',3,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (6,'Falso','N',3,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (7,'4','S',6,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (8,'0','N',6,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (9,'No existe','N',6,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (10,'2','N',6,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (11,'Verdadero','N',12,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (12,'Falso','S',12,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (13,'Primera Ley','S',13,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (14,'Segunda Ley','N',13,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (15,'Tercera Ley','N',13,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (16,'Ley Cero','N',13,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (17,'3x^2','S',15,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (18,'x^2','N',15,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (19,'3x','N',15,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (20,'Verdadero','N',16,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (21,'Falso','S',16,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (22,'Singleton','S',17,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (23,'Factory','N',17,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (24,'Observer','N',17,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (25,'Strategy','N',17,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (26,'x=3, y=2','S',19,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (27,'x=2, y=3','N',19,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (28,'x=4, y=1','N',19,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (68,'Concepto A:::Concepto A1','S',39,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (62,'respuesta','S',36,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (63,'no respuesta','N',36,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (69,'Casa:::Techo','S',40,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (35,'Verdadero','S',24,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (36,'Falso','N',24,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (37,'Verdadero','S',25,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (38,'Falso','N',25,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (39,'Verdadero','S',26,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (40,'Falso','N',26,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (41,'Opcion A','S',27,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (42,'Opcion B','N',27,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (43,'Opcion A','S',28,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (44,'Opcion B','N',28,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (45,'Opcion','S',29,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (46,'Ion 2','N',29,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (66,'A:::A1','S',38,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (67,'B:::B1','S',38,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (29,'op 1','S',21,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (30,'op 2','S',21,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (31,'op 1','S',22,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (32,'op 2','S',22,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (33,'Verdadero','S',23,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (34,'Falso','N',23,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (47,'Esta no es','N',30,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (48,'Esta si es','S',30,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (49,'Esta si es','S',30,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (50,'Cosa','S',31,1);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (51,'con','S',31,2);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (52,'techo','S',31,3);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (53,'Peso:::No peso','S',32,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (54,'Casa:::No casa','S',32,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (55,'Perro:::No perro','S',32,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (56,'Verdadero','S',33,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (57,'Falso','N',33,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (58,'Respuesta correcta','S',34,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (59,'No correcta','N',34,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (60,'Verdadero','S',35,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (61,'Falso','N',35,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (64,'Verdadero','S',37,null);
Insert into MIGUEL.OPCIONPREGUNTA (ID,RESPUESTA,ES_CORRECTA,PREGUNTA_ID,SECUENCIA) values (65,'Falso','N',37,null);
REM INSERTING into MIGUEL.PREGUNTA
SET DEFINE OFF;
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (1,'¿Cuál es la solución de la ecuación 2x + 5 = 15?',5,0.25,1,1,1,null,2,1000000001,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (2,'Explica la diferencia entre un ciclo for y un ciclo while',10,0.25,3,1,2,null,23,1000000002,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (3,'¿La primera ley de Newton se aplica en un vacío?',2,0.25,2,1,1,null,5,1000000003,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (4,'¿Qué es la normalización en bases de datos?',8,0.25,3,1,2,null,8,1000000004,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (5,'Menciona tres técnicas para mejorar la comunicación oral',6,0.25,3,1,1,null,10,1000000005,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (6,'Calcula el límite cuando x tiende a 2 de (x²-4)/(x-2)',5,0.25,5,1,2,null,11,1000000006,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (7,'¿Qué es una matriz invertible?',3,0.25,3,1,2,null,14,1000000007,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (8,'¿Cuál es la diferencia entre pila y cola?',4,0.25,3,1,2,null,15,1000000008,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (9,'¿Qué es el polimorfismo en POO?',5,0.25,3,1,3,null,18,1000000009,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (10,'¿Qué son las llamadas al sistema?',4,0.25,3,1,2,null,20,1000000010,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (11,'¿Cuál es la fórmula de la distancia entre dos puntos (x1, y1) y (x2, y2)?',3,0.15,3,1,1,null,21,1000000001,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (12,'La sentencia IF-ELSE se usa para definir bucles. ¿Verdadero o Falso?',2,0.1,2,1,1,null,24,1000000002,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (13,'¿Qué ley de la termodinámica establece que la energía no se crea ni se destruye?',5,0.2,1,1,2,null,26,1000000003,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (14,'Escribe una consulta SQL para seleccionar todos los campos de una tabla llamada "Clientes".',7,0.25,3,1,1,null,27,1000000004,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (15,'¿Cuál es la derivada de f(x) = x^3?',3,0.15,5,1,1,null,31,1000000006,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (16,'Un árbol binario siempre está balanceado. ¿Verdadero o Falso?',2,0.1,2,1,2,null,35,1000000008,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (17,'¿Qué patrón de diseño garantiza que una clase tenga una sola instancia?',5,0.2,1,1,3,null,37,1000000009,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (18,'Enumera los 3 estados básicos de un proceso.',6,0.25,3,1,2,null,39,1000000010,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (19,'Resolver el sistema: x+y=5, x-y=1',5,0.2,5,1,1,null,13,1000000007,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (20,'¿Qué significa FIFO?',2,0.1,3,1,1,null,15,1000000008,to_date('22-MAY-25','DD-MON-RR'),null,null);
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (39,'Pregunta',5,10,4,1,1,19,21,1000000001,to_date('26-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (36,'Subpregunta',5,10,5,1,1,35,21,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (24,'Pregunta Priv',5,10,2,2,3,null,25,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (25,'Pregunta',5,100,2,2,2,null,33,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (26,'Pregunta de prueba',5,100,2,1,1,null,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (27,'Pregunta',5,10,5,1,1,null,21,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (28,'Preguntas asas',5,10,5,2,2,null,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (29,'Pregunta ttest',5,10,5,1,2,null,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (38,'Pregunta de relacion',5,10,4,1,2,null,21,1000000001,to_date('25-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (21,'Pregunta test',5,10,1,1,2,null,25,1000000001,to_date('23-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (22,'Pregunta a',5,10,1,1,2,18,13,1000000001,to_date('23-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (23,'SFSDFSD',5,10,2,1,2,20,6,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (30,'Pregunta 1',5,10,1,1,1,null,21,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (31,'Pregunta 2',5,20,3,1,1,null,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (32,'Pregunta 3',5,10,4,2,2,null,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (33,'Esta es verdadera',5,20,2,1,1,null,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (34,'Subpregunta',5,10,5,1,2,5,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (35,'Es verdad',5,70,2,1,2,null,21,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (37,'Subpregunta',5,10,2,1,1,30,22,1000000001,to_date('24-MAY-25','DD-MON-RR'),null,'Ana García');
Insert into MIGUEL.PREGUNTA (ID_PREGUNTA,TEXTO,TIEMPO_ESTIMADO,PORCENTAJE,TIPO_PREGUNTA_ID,VISIBILIDAD_ID,NIVEL_ID,PREGUNTA_PADRE,CONTENIDO_ID,CREADOR_CEDULA_PROFESOR,FECHA_CREACION,FECHA_MODIFICACION,USUARIO_MODIFICACION) values (40,'PreguntaMod',5,10,4,1,1,null,21,1000000001,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'Ana García');
REM INSERTING into MIGUEL.PREGUNTAEXAMENESTUDIANTE
SET DEFINE OFF;
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (1,120,1,1,1,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (2,150,1,1,11,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (3,130,1,1,19,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (4,120,1,1,7,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (5,180,2,2,2,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (6,100,2,2,12,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (7,140,2,2,8,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (8,90,2,2,20,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (9,170,2,2,16,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (10,80,3,3,3,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (11,100,3,3,13,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (12,110,16,1,1,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (13,160,16,1,11,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (14,140,16,1,19,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (15,130,16,1,7,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (16,190,17,2,2,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (17,110,17,2,12,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (18,150,17,2,8,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (19,80,17,2,20,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (20,160,17,2,16,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (21,100,21,6,6,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (22,120,21,6,15,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (23,110,21,6,11,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (24,150,25,10,10,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (25,130,25,10,18,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (26,100,25,10,3,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (27,70,27,12,2,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (28,90,27,12,12,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (191,null,124,134,33,11.74);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (192,null,124,134,31,11.74);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (193,null,124,134,29,5.87);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (194,null,124,134,26,58.69);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (195,null,124,134,30,5.87);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (196,null,124,134,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (197,null,124,134,27,5.87);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (198,null,124,134,11,0.09);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (199,null,124,134,1,0.13);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (163,null,121,134,1,0.15);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (164,null,121,134,31,11.74);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (165,null,121,134,26,58.69);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (166,null,121,134,11,0.09);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (167,null,121,134,33,11.74);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (168,null,121,134,27,5.87);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (169,null,121,134,30,5.87);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (170,null,121,134,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (171,null,121,134,29,5.85);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (172,null,122,135,35,63.49);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (173,null,122,135,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (174,null,122,135,1,0.23);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (175,null,122,135,33,18.14);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (176,null,122,135,29,9.07);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (177,null,122,135,30,9.07);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (178,null,122,135,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (268,null,136,145,31,10.5);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (269,null,136,145,40,5.25);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (270,null,136,145,30,5.25);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (271,null,136,145,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (272,null,136,145,33,10.5);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (273,null,136,145,29,5.25);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (274,null,136,145,38,5.25);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (275,null,136,145,27,5.25);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (276,null,136,145,1,0.13);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (277,null,136,145,26,52.52);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (278,null,136,145,11,0.1);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (200,null,125,137,26,55.56);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (201,null,125,137,35,38.89);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (202,null,125,137,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (203,null,125,137,38,5.55);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (204,null,126,138,32,49.63);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (205,null,126,138,11,0.74);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (206,null,126,138,38,49.63);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (207,null,127,135,29,9.07);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (208,null,127,135,1,0.23);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (209,null,127,135,35,63.49);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (210,null,127,135,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (211,null,127,135,33,18.14);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (212,null,127,135,30,9.07);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (213,null,127,135,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (214,null,128,136,27,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (215,null,128,136,1,0.1);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (216,null,128,136,26,39.94);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (217,null,128,136,33,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (218,null,128,136,35,27.96);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (219,null,128,136,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (220,null,128,136,29,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (221,null,128,136,31,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (222,null,128,136,30,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (223,null,128,136,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (224,null,128,136,11,0.06);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (225,null,128,136,32,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (226,null,129,137,26,55.56);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (227,null,129,137,35,38.89);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (228,null,129,137,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (229,null,129,137,38,5.56);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (230,null,130,139,1,0.83);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (231,null,130,139,31,66.12);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (232,null,130,139,27,33.06);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (233,null,131,140,35,77.78);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (234,null,131,140,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (235,null,131,140,29,11.11);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (236,null,131,140,32,11.11);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (237,null,132,139,1,0.83);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (238,null,132,139,27,33.06);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (239,null,132,139,31,66.12);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (240,null,133,140,35,77.78);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (241,null,133,140,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (242,null,133,140,32,11.11);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (243,null,133,140,29,11.11);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (244,null,134,142,33,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (245,null,134,142,30,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (246,null,134,142,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (247,null,134,142,35,27.96);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (248,null,134,142,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (249,null,134,142,29,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (250,null,134,142,31,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (251,null,134,142,1,0.1);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (252,null,134,142,38,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (253,null,134,142,11,0.06);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (254,null,134,142,26,39.94);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (255,null,134,142,27,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (100,null,100,121,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (101,null,101,122,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (102,null,102,121,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (103,null,103,122,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (104,null,104,121,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (105,null,105,124,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (106,null,106,121,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (107,null,107,122,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (108,null,108,122,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (109,null,109,124,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (110,null,110,125,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (111,null,111,127,27,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (112,null,111,127,33,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (113,null,111,127,29,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (114,null,111,127,28,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (115,null,111,127,30,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (116,null,111,127,34,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (117,null,111,127,32,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (118,null,111,127,31,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (119,null,112,126,26,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (120,null,113,127,28,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (121,null,113,127,30,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (122,null,113,127,33,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (123,null,113,127,31,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (124,null,113,127,34,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (125,null,113,127,27,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (126,null,113,127,29,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (127,null,113,127,32,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (128,null,114,127,28,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (129,null,114,127,31,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (130,null,114,127,32,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (131,null,114,127,30,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (132,null,114,127,27,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (133,null,114,127,29,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (134,null,114,127,33,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (135,null,114,127,34,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (136,null,115,127,28,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (137,null,115,127,33,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (138,null,115,127,30,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (139,null,115,127,29,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (140,null,115,127,32,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (141,null,115,127,27,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (142,null,115,127,31,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (143,null,115,127,34,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (144,null,116,128,35,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (145,null,116,128,31,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (146,null,116,128,32,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (147,null,117,131,1,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (148,null,117,131,29,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (149,null,117,131,35,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (150,null,117,131,36,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (151,null,118,133,30,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (152,null,118,133,31,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (153,null,118,133,35,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (154,null,118,133,36,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (155,null,118,133,37,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (156,null,119,131,1,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (157,null,119,131,29,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (158,null,119,131,35,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (159,null,119,131,36,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (160,null,120,129,31,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (161,null,120,129,32,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (162,null,120,129,35,null);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (179,null,123,136,26,39.94);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (180,null,123,136,27,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (181,null,123,136,11,0.06);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (182,null,123,136,29,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (183,null,123,136,32,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (184,null,123,136,30,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (185,null,123,136,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (186,null,123,136,35,27.96);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (187,null,123,136,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (188,null,123,136,1,0.1);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (189,null,123,136,31,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (190,null,123,136,33,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (256,null,135,143,38,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (257,null,135,143,11,0.06);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (258,null,135,143,29,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (259,null,135,143,26,39.94);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (260,null,135,143,35,27.96);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (261,null,135,143,36,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (262,null,135,143,31,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (263,null,135,143,33,7.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (264,null,135,143,30,3.99);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (265,null,135,143,37,10);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (266,null,135,143,1,0.1);
Insert into MIGUEL.PREGUNTAEXAMENESTUDIANTE (ID,TIEMPO,PRESENTACION_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID,DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,PORCENTAJE_EN_PRESENTACION) values (267,null,135,143,27,3.99);
REM INSERTING into MIGUEL.PRESENTACIONEXAMEN
SET DEFINE OFF;
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (1,7.5,3,1,5200,to_date('28-FEB-25','DD-MON-RR'),to_date('28-FEB-25','DD-MON-RR'),'192.168.1.10',1,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (2,8,4,1,6800,to_date('30-MAR-25','DD-MON-RR'),to_date('30-MAR-25','DD-MON-RR'),'10.0.0.5',2,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (3,6,1,1,1750,to_date('14-APR-25','DD-MON-RR'),to_date('14-APR-25','DD-MON-RR'),'172.16.5.20',3,2000000003);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (4,9,3,0,5000,to_date('19-APR-25','DD-MON-RR'),to_date('19-APR-25','DD-MON-RR'),'192.168.1.11',4,2000000004);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (5,7,1,1,6500,to_date('24-APR-25','DD-MON-RR'),to_date('24-APR-25','DD-MON-RR'),'10.0.1.8',5,2000000005);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (6,8.5,3,0,3500,to_date('10-MAY-25','DD-MON-RR'),to_date('10-MAY-25','DD-MON-RR'),'172.16.10.3',6,2000000006);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (7,6.5,2,1,5100,to_date('15-MAY-25','DD-MON-RR'),to_date('15-MAY-25','DD-MON-RR'),'192.168.1.12',7,2000000007);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (8,9.5,4,0,7000,to_date('20-MAY-25','DD-MON-RR'),to_date('20-MAY-25','DD-MON-RR'),'10.0.2.15',8,2000000008);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (9,5,1,2,2600,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'172.16.15.4',9,2000000009);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (10,7,2,1,5300,to_date('30-MAY-25','DD-MON-RR'),to_date('30-MAY-25','DD-MON-RR'),'192.168.1.13',10,2000000010);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (11,8,3,1,6900,to_date('05-JUN-25','DD-MON-RR'),to_date('05-JUN-25','DD-MON-RR'),'10.0.3.1',11,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (12,9,2,0,1700,to_date('10-JUN-25','DD-MON-RR'),to_date('10-JUN-25','DD-MON-RR'),'172.16.20.5',12,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (13,6,2,1,5200,to_date('15-JUN-25','DD-MON-RR'),to_date('15-JUN-25','DD-MON-RR'),'192.168.1.14',13,2000000003);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (14,7.5,3,1,7100,to_date('20-JUN-25','DD-MON-RR'),to_date('20-JUN-25','DD-MON-RR'),'10.0.4.9',14,2000000004);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (15,8.5,3,0,3400,to_date('25-JUN-25','DD-MON-RR'),to_date('25-JUN-25','DD-MON-RR'),'172.16.25.6',15,2000000005);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (16,4,1,2,5400,to_date('28-FEB-25','DD-MON-RR'),to_date('28-FEB-25','DD-MON-RR'),'192.168.1.15',1,2000000011);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (17,9.5,5,0,6700,to_date('30-MAR-25','DD-MON-RR'),to_date('30-MAR-25','DD-MON-RR'),'10.0.5.11',2,2000000012);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (18,7,1,1,1650,to_date('14-APR-25','DD-MON-RR'),to_date('14-APR-25','DD-MON-RR'),'172.16.30.7',3,2000000013);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (19,8,2,1,5150,to_date('19-APR-25','DD-MON-RR'),to_date('19-APR-25','DD-MON-RR'),'192.168.1.16',4,2000000014);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (20,6,1,1,6600,to_date('24-APR-25','DD-MON-RR'),to_date('24-APR-25','DD-MON-RR'),'10.0.6.13',5,2000000015);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (21,9,3,0,3550,to_date('10-MAY-25','DD-MON-RR'),to_date('10-MAY-25','DD-MON-RR'),'172.16.35.8',6,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (22,5.5,1,2,5250,to_date('15-MAY-25','DD-MON-RR'),to_date('15-MAY-25','DD-MON-RR'),'192.168.1.17',7,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (23,8.5,3,1,7050,to_date('20-MAY-25','DD-MON-RR'),to_date('20-MAY-25','DD-MON-RR'),'10.0.7.14',8,2000000003);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (24,7,2,1,2650,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'172.16.40.9',9,2000000004);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (25,9.5,3,0,5350,to_date('30-MAY-25','DD-MON-RR'),to_date('30-MAY-25','DD-MON-RR'),'192.168.1.18',10,2000000005);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (26,6,2,2,6850,to_date('05-JUN-25','DD-MON-RR'),to_date('05-JUN-25','DD-MON-RR'),'10.0.8.16',11,2000000006);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (27,8,2,0,1750,to_date('10-JUN-25','DD-MON-RR'),to_date('10-JUN-25','DD-MON-RR'),'172.16.45.10',12,2000000007);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (124,4.44,7,1,29,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',134,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (121,7.56,7,1,56,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',134,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (122,1.91,7,0,21,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',135,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (136,5,10,0,31,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'192.168.197.55',145,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (125,3.25,4,0,17,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',137,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (126,2.48,1,1,30,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',138,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (127,1.73,7,0,21,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',135,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (128,3.56,11,0,40,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',136,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (129,3.25,4,0,13,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',137,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (130,8.33,3,0,13,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'192.168.1.103',139,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (131,1.57,3,1,18,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'192.168.1.103',140,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (132,5,3,0,12,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'192.168.1.103',139,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (133,5,4,0,22,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'192.168.1.103',140,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (134,5,11,0,48,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'192.168.1.103',142,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (100,0,0,0,73,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',121,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (101,null,null,null,null,to_date('24-MAY-25','DD-MON-RR'),null,'192.168.1.103',122,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (102,null,null,null,null,to_date('24-MAY-25','DD-MON-RR'),null,'192.168.1.103',121,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (103,0,0,0,26,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',122,2000000010);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (104,0,0,0,5,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',121,2000000010);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (105,null,null,null,null,to_date('24-MAY-25','DD-MON-RR'),null,'192.168.1.103',124,2000000010);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (106,0,0,0,24,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',121,2000000011);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (107,null,null,null,null,to_date('24-MAY-25','DD-MON-RR'),null,'192.168.1.103',122,2000000011);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (108,0,0,0,179,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',122,2000000006);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (109,5,1,0,20,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',124,2000000006);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (110,5,1,0,22,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',125,2000000006);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (111,2.5,5,3,90,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',127,2000000006);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (112,0,0,0,9,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',126,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (113,2.5,4,4,64,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',127,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (114,3.5,6,1,91,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',127,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (115,2.5,5,2,117,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',127,2000000010);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (116,5,3,0,22,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',128,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (117,0.35,2,2,41,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',131,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (118,0.05,3,2,34,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',133,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (119,0.36,3,1,43,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',131,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (120,1.5,3,0,21,to_date('24-MAY-25','DD-MON-RR'),to_date('24-MAY-25','DD-MON-RR'),'192.168.1.103',129,2000000002);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (123,2.2,2,0,47,to_date('25-MAY-25','DD-MON-RR'),to_date('25-MAY-25','DD-MON-RR'),'192.168.1.103',136,2000000001);
Insert into MIGUEL.PRESENTACIONEXAMEN (ID,CALIFICACION,RESPUESTAS_CORRECTAS,RESPUESTAS_INCORRECTAS,TIEMPO,HORA_INICIO,HORA_FIN,DIRECCION_IP,EXAMEN_ID,ESTUDIANTE_CEDULA) values (135,4.8,10,1,29,to_date('26-MAY-25','DD-MON-RR'),to_date('26-MAY-25','DD-MON-RR'),'192.168.197.55',143,2000000001);
REM INSERTING into MIGUEL.PROFESOR
SET DEFINE OFF;
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000001,'Ana García','a.garcia@edutec.edu','12345678');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000002,'Carlos Rodríguez','c.rodriguez@edutec.edu','Prof24#DEF456');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000003,'Elena Martínez','e.martinez@edutec.edu','Prof24#GHI789');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000004,'David López','d.lopez@edutec.edu','Prof24#JKL012');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000005,'Lucía Pérez','l.perez@edutec.edu','Prof24#MNO345');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000006,'Miguel Gómez','m.gomez@edutec.edu','Prof24#PQR678');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000007,'Laura Sánchez','l.sanchez@edutec.edu','Prof24#STU901');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000008,'Javier Fernández','j.fernandez@edutec.edu','Prof24#VWX234');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000009,'María Torres','m.torres@edutec.edu','Prof24#YZA567');
Insert into MIGUEL.PROFESOR (CEDULA,NOMBRE,CORREO,CONTRASENA) values (1000000010,'José Ramírez','j.ramirez@edutec.edu','Prof24#BCD890');
REM INSERTING into MIGUEL.RESPUESTAPREGUNTA
SET DEFINE OFF;
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (1,'x = 5',1,1);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (2,'sqrt((x2-x1)^2 + (y2-y1)^2)',null,2);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (3,'x=3, y=2',26,3);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (4,'Una matriz con determinante diferente de cero',null,4);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (5,'For itera N veces, While hasta condición',null,5);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (6,'Falso',12,6);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (7,'Pila es LIFO, Cola es FIFO',null,7);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (8,'First In First Out',null,8);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (9,'Falso',21,9);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (10,'Verdadero',5,10);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (11,'Primera Ley',13,11);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (12,'x = 5',1,12);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (13,'Formula...',null,13);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (14,'x=3, y=2',26,14);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (15,'...',null,15);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (16,'...',null,16);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (17,'Falso',12,17);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (18,'...',null,18);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (19,'...',null,19);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (20,'Falso',21,20);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (21,'4',7,21);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (22,'3x^2',17,22);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (23,'...',null,23);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (24,'Interfaz entre app y kernel',null,24);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (25,'Listo, Ejecutando, Bloqueado',null,25);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (26,'Verdadero',5,26);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (27,'For y While',null,27);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (28,'Falso',12,28);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (168,null,56,191);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (169,'Cosa:::con:::techo',null,192);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (170,null,46,193);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (171,null,39,194);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (172,'49,48',null,195);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (173,null,41,197);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (175,null,64,196);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (118,null,44,128);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (119,'Cosa:::con:::techo',null,129);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (146,null,60,158);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (147,null,62,159);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (151,'1',null,163);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (152,'Cosa:::con:::techo',null,164);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (153,null,39,165);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (154,null,56,167);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (155,null,41,168);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (156,'49,48',null,169);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (157,null,46,171);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (158,null,64,170);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (159,null,60,172);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (160,'1',null,174);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (161,null,56,175);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (162,null,45,176);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (163,'48,49',null,177);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (164,null,64,178);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (165,null,62,173);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (240,'Cosa:::con:::techo',null,268);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (241,'Casa:::Techo',null,269);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (242,'49,48',null,270);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (243,null,56,272);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (244,null,45,273);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (245,'A:::A1;;;B:::B1',null,274);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (246,null,41,275);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (247,'1',null,276);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (248,null,39,277);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (249,null,64,271);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (176,null,39,200);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (177,null,60,201);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (178,'A:::A1;;;B:::B1',null,203);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (179,null,62,202);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (180,'Casa:::No casa;;;Perro:::No perro;;;Peso:::No peso',null,204);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (181,'A:::B1;;;B:::A1',null,206);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (182,null,45,207);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (183,'1',null,208);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (184,null,60,209);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (185,null,56,211);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (186,'49,48',null,212);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (187,null,64,213);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (188,null,62,210);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (189,null,41,214);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (190,'1',null,215);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (191,null,39,216);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (192,null,56,217);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (193,null,60,218);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (194,null,45,220);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (195,'Cosa:::con:::techo',null,221);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (196,'49,48',null,222);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (197,'Casa:::No casa;;;Perro:::No perro;;;Peso:::No peso',null,225);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (198,null,64,223);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (199,null,62,219);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (200,null,39,226);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (201,null,60,227);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (202,'A:::A1;;;B:::B1',null,229);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (203,null,62,228);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (204,'1',null,230);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (205,'Cosa:::con:::techo',null,231);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (206,null,41,232);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (207,null,60,233);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (208,null,46,235);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (209,'Casa:::No casa;;;Perro:::No perro;;;Peso:::No peso',null,236);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (210,null,62,234);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (211,'1',null,237);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (212,null,41,238);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (213,'Cosa:::con:::techo',null,239);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (214,null,60,240);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (215,'Casa:::No casa;;;Perro:::No perro;;;Peso:::No peso',null,242);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (216,null,45,243);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (217,null,62,241);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (218,null,56,244);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (219,'49,48',null,245);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (220,null,60,247);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (221,null,45,249);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (222,'Cosa:::con:::techo',null,250);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (223,'1',null,251);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (224,'A:::A1;;;B:::B1',null,252);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (225,null,39,254);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (226,null,41,255);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (227,null,64,246);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (228,null,62,248);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (100,null,39,109);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (101,null,39,110);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (102,null,41,111);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (103,null,56,112);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (104,null,46,113);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (105,null,43,114);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (106,'49,48',null,115);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (107,null,58,116);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (108,'Respuesta_Relacionar_Conceptos_Placeholder',null,117);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (109,'con:::techo:::Cosa',null,118);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (110,null,44,120);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (111,'49,48',null,121);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (112,null,56,122);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (113,'Cosa:::con:::techo',null,123);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (114,null,58,124);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (115,null,42,125);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (116,null,46,126);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (117,'Perro:::No perro;;;Peso:::No peso;;;Casa:::No casa',null,127);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (120,'49,48',null,131);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (121,null,41,132);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (122,null,45,133);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (123,null,56,134);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (124,null,58,135);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (125,null,43,136);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (126,null,56,137);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (127,'48,49',null,138);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (128,null,46,139);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (129,null,41,141);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (130,'techo:::con:::Cosa',null,142);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (131,null,58,143);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (132,null,60,144);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (133,'Cosa:::con:::techo',null,145);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (134,'Casa:::No casa;;;Perro:::No perro;;;Peso:::No peso',null,146);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (135,'2,1',null,147);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (136,null,46,148);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (137,null,60,149);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (138,null,62,150);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (139,'49,48',null,151);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (140,'Cosa:::techo:::con',null,152);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (141,null,60,153);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (142,null,64,155);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (143,null,63,154);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (144,'1',null,156);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (145,null,46,157);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (148,'Cosa:::con:::techo',null,160);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (149,'Casa:::No casa;;;Perro:::No perro;;;Peso:::No peso',null,161);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (150,null,60,162);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (166,null,39,179);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (167,null,41,180);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (174,'1',null,199);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (229,'A:::A1;;;B:::B1',null,256);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (230,null,46,258);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (231,null,39,259);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (232,null,60,260);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (233,'Cosa:::con:::techo',null,262);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (234,null,56,263);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (235,'48,49',null,264);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (236,'1',null,266);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (237,null,41,267);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (238,null,64,265);
Insert into MIGUEL.RESPUESTAPREGUNTA (ID,RESPUESTA_DADA,OPCION_PREGUNTA_ID,PREGUNTAEXAMENESTUDIANTE_ID) values (239,null,62,261);
REM INSERTING into MIGUEL.TIPOPREGUNTA
SET DEFINE OFF;
Insert into MIGUEL.TIPOPREGUNTA (ID,NOMBRE,DESCRIPCION) values (1,'Selección múltiple','Una respuesta correcta');
Insert into MIGUEL.TIPOPREGUNTA (ID,NOMBRE,DESCRIPCION) values (2,'Verdadero/Falso','Evaluar afirmación');
Insert into MIGUEL.TIPOPREGUNTA (ID,NOMBRE,DESCRIPCION) values (3,'Ordenar conceptos','Texto breve');
Insert into MIGUEL.TIPOPREGUNTA (ID,NOMBRE,DESCRIPCION) values (4,'Relacionar conceptos','Emparejar elementos');
Insert into MIGUEL.TIPOPREGUNTA (ID,NOMBRE,DESCRIPCION) values (5,'Seleccion Unica','Valor numérico exacto o única opción');
REM INSERTING into MIGUEL.UNIDAD
SET DEFINE OFF;
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (1,'Aritmética/Álgebra',1);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (2,'Intro Programación',2);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (3,'Mecánica Newtoniana',3);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (4,'Modelado/Normaliz.',4);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (5,'Comunicación Oral',5);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (6,'Límites/Continuidad',6);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (7,'Ecuaciones Lineales',7);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (8,'Estructuras Lineales',8);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (9,'Prog. Orientada Obj.',9);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (10,'Arquitectura de SO',10);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (11,'Geometria Analitica',1);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (12,'Estructuras Control',2);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (13,'Termodinámica',3);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (14,'Lenguaje SQL',4);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (15,'Comunicacion Escrita',5);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (16,'Derivadas/Aplicac.',6);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (17,'Espacios Vectoriales',7);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (18,'Estruc. No Lineales',8);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (19,'Patrones de Diseño',9);
Insert into MIGUEL.UNIDAD (ID_UNIDAD,NOMBRE,ID_CURSO) values (20,'Gestión de Procesos',10);
REM INSERTING into MIGUEL.VISIBILIDAD
SET DEFINE OFF;
Insert into MIGUEL.VISIBILIDAD (ID,NOMBRE,DESCRIPCION) values (1,'Pública','Visible para todos');
Insert into MIGUEL.VISIBILIDAD (ID,NOMBRE,DESCRIPCION) values (2,'Privada','Solo creador');
--------------------------------------------------------
--  DDL for Index PK_PROFESOR
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_PROFESOR" ON "MIGUEL"."PROFESOR" ("CEDULA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_PROFESOR_NOMBRE
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_PROFESOR_NOMBRE" ON "MIGUEL"."PROFESOR" ("NOMBRE")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PREGUNTA_TIPO
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PREGUNTA_TIPO" ON "MIGUEL"."PREGUNTA" ("TIPO_PREGUNTA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_EXAMEN_CATEGORIA
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_EXAMEN_CATEGORIA" ON "MIGUEL"."EXAMEN" ("CATEGORIA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PREGUNTA_VISIBILIDAD
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PREGUNTA_VISIBILIDAD" ON "MIGUEL"."PREGUNTA" ("VISIBILIDAD_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PREGUNTA_PADRE
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PREGUNTA_PADRE" ON "MIGUEL"."PREGUNTA" ("PREGUNTA_PADRE")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_ESTUDIANTE_LOGIN
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_ESTUDIANTE_LOGIN" ON "MIGUEL"."ESTUDIANTE" ("CORREO", "CONTRASENA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_DETALLE_ESTUDIANTE_CURSO
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_DETALLE_ESTUDIANTE_CURSO" ON "MIGUEL"."DETALLEESTUDIANTECURSO" ("ESTUDIANTE_CEDULA", "CURSO_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_DETALLE_PREGUNTA_EXAMEN
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_DETALLE_PREGUNTA_EXAMEN" ON "MIGUEL"."DETALLEPREGUNTAEXAMEN" ("EXAMEN_ID", "PREGUNTA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_PREGUNTA_EXAMEN_ESTUDIANTE
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_PREGUNTA_EXAMEN_ESTUDIANTE" ON "MIGUEL"."PREGUNTAEXAMENESTUDIANTE" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_DPE_PREGUNTA_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_DPE_PREGUNTA_ID" ON "MIGUEL"."DETALLEPREGUNTAEXAMEN" ("PREGUNTA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_TIPO_PREGUNTA
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_TIPO_PREGUNTA" ON "MIGUEL"."TIPOPREGUNTA" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_CREACION
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_CREACION" ON "MIGUEL"."CREACION" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_OPCION_PREGUNTA
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_OPCION_PREGUNTA" ON "MIGUEL"."OPCIONPREGUNTA" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PRESENTEX_EXAMEN_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PRESENTEX_EXAMEN_ID" ON "MIGUEL"."PRESENTACIONEXAMEN" ("EXAMEN_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_OPCION_PREGUNTA
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_OPCION_PREGUNTA" ON "MIGUEL"."OPCIONPREGUNTA" ("PREGUNTA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_ESTUDIANTE_NOMBRE
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_ESTUDIANTE_NOMBRE" ON "MIGUEL"."ESTUDIANTE" ("NOMBRE")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_RESP_PREG_EXAM_EST_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_RESP_PREG_EXAM_EST_ID" ON "MIGUEL"."RESPUESTAPREGUNTA" ("PREGUNTAEXAMENESTUDIANTE_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_EXAMEN_CURSO
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_EXAMEN_CURSO" ON "MIGUEL"."EXAMEN" ("CURSO_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_NIVEL
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_NIVEL" ON "MIGUEL"."NIVEL" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_EXAMEN
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_EXAMEN" ON "MIGUEL"."EXAMEN" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_EXAMEN_FECHA
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_EXAMEN_FECHA" ON "MIGUEL"."EXAMEN" ("FECHA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PREGUNTA_CONTENIDO
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PREGUNTA_CONTENIDO" ON "MIGUEL"."PREGUNTA" ("CONTENIDO_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_DCH_HORARIO_CLASE_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_DCH_HORARIO_CLASE_ID" ON "MIGUEL"."DETALLECURSOHORARIO" ("HORARIO_CLASE_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_DPE_EXAMEN_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_DPE_EXAMEN_ID" ON "MIGUEL"."DETALLEPREGUNTAEXAMEN" ("EXAMEN_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_UNIDAD
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_UNIDAD" ON "MIGUEL"."UNIDAD" ("ID_UNIDAD")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_RESPUESTA_PREGUNTA
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_RESPUESTA_PREGUNTA" ON "MIGUEL"."RESPUESTAPREGUNTA" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PEXES_DETALLE_PEX
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PEXES_DETALLE_PEX" ON "MIGUEL"."PREGUNTAEXAMENESTUDIANTE" ("DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID", "DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_CURSO_NOMBRE
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_CURSO_NOMBRE" ON "MIGUEL"."CURSO" ("NOMBRE")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_DEC_CURSO_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_DEC_CURSO_ID" ON "MIGUEL"."DETALLEESTUDIANTECURSO" ("CURSO_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_CATEGORIA
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_CATEGORIA" ON "MIGUEL"."CATEGORIA" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_DEC_ESTUDIANTE_CEDULA
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_DEC_ESTUDIANTE_CEDULA" ON "MIGUEL"."DETALLEESTUDIANTECURSO" ("ESTUDIANTE_CEDULA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_CONTENIDO_UNIDAD
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_CONTENIDO_UNIDAD" ON "MIGUEL"."CONTENIDO" ("ID_UNIDAD")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_HORARIO_CLASE
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_HORARIO_CLASE" ON "MIGUEL"."HORARIO_CLASE" ("ID_HORARIO")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_DETALLE_CURSO_HORARIO
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_DETALLE_CURSO_HORARIO" ON "MIGUEL"."DETALLECURSOHORARIO" ("CURSO_ID", "HORARIO_CLASE_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_DCH_CURSO_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_DCH_CURSO_ID" ON "MIGUEL"."DETALLECURSOHORARIO" ("CURSO_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PEXES_PRESENTACION_ID
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PEXES_PRESENTACION_ID" ON "MIGUEL"."PREGUNTAEXAMENESTUDIANTE" ("PRESENTACION_EXAMEN_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_HORARIO_DIA_SEMANA
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_HORARIO_DIA_SEMANA" ON "MIGUEL"."HORARIO_CLASE" ("DIA_SEMANA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_CURSO_PROFESOR
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_CURSO_PROFESOR" ON "MIGUEL"."CURSO" ("PROFESOR_CEDULA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_CURSO
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_CURSO" ON "MIGUEL"."CURSO" ("ID_CURSO")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_CONTENIDO
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_CONTENIDO" ON "MIGUEL"."CONTENIDO" ("ID_CONTENIDO")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_UNIDAD_CURSO
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_UNIDAD_CURSO" ON "MIGUEL"."UNIDAD" ("ID_CURSO")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PREGUNTA_NIVEL
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PREGUNTA_NIVEL" ON "MIGUEL"."PREGUNTA" ("NIVEL_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_ESTUDIANTE
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_ESTUDIANTE" ON "MIGUEL"."ESTUDIANTE" ("CEDULA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_PRESENTACION_EXAMEN
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_PRESENTACION_EXAMEN" ON "MIGUEL"."PRESENTACIONEXAMEN" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_PRESENTACION_ESTUDIANTE
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_PRESENTACION_ESTUDIANTE" ON "MIGUEL"."PRESENTACIONEXAMEN" ("ESTUDIANTE_CEDULA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_RESPUESTA_OPCION
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_RESPUESTA_OPCION" ON "MIGUEL"."RESPUESTAPREGUNTA" ("OPCION_PREGUNTA_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_PREGUNTA_PROF_CREADOR
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_PREGUNTA_PROF_CREADOR" ON "MIGUEL"."PREGUNTA" ("CREADOR_CEDULA_PROFESOR")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_VISIBILIDAD
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_VISIBILIDAD" ON "MIGUEL"."VISIBILIDAD" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_PREGUNTA
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_PREGUNTA" ON "MIGUEL"."PREGUNTA" ("ID_PREGUNTA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index PK_DIA_SEMANA
--------------------------------------------------------

CREATE UNIQUE INDEX "MIGUEL"."PK_DIA_SEMANA" ON "MIGUEL"."DIA_SEMANA" ("ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_FK_EXAMEN_CREACION
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_FK_EXAMEN_CREACION" ON "MIGUEL"."EXAMEN" ("CREACION_ID")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Index IDX_PROFESOR_LOGIN
--------------------------------------------------------

CREATE INDEX "MIGUEL"."IDX_PROFESOR_LOGIN" ON "MIGUEL"."PROFESOR" ("CORREO", "CONTRASENA")
    PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES" ;
--------------------------------------------------------
--  DDL for Trigger TRG_IMPEDIR_MODIFICAR_EXAMEN_CON_PRESENTACIONES
--------------------------------------------------------

CREATE OR REPLACE EDITIONABLE TRIGGER "MIGUEL"."TRG_IMPEDIR_MODIFICAR_EXAMEN_CON_PRESENTACIONES"
BEFORE UPDATE OR DELETE ON EXAMEN
    FOR EACH ROW
DECLARE
v_cant_presentaciones NUMBER;
BEGIN
SELECT COUNT(*)
INTO v_cant_presentaciones
FROM PRESENTACIONEXAMEN PE
WHERE PE.EXAMEN_ID = :OLD.ID; -- Referencia al ID del examen que se está intentando modificar/eliminar

IF v_cant_presentaciones > 0 THEN
        RAISE_APPLICATION_ERROR(-20070, 'No se puede modificar o eliminar el examen ID ' || :OLD.ID ||
                                        ' porque ya tiene ' || v_cant_presentaciones || ' presentación(es) registrada(s).');
END IF;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error en TRG_IMPEDIR_MODIFICAR_EXAMEN_CON_PRESENTACIONES: ' || SQLCODE || ' - ' || SQLERRM);
        RAISE;
END TRG_IMPEDIR_MODIFICAR_EXAMEN_CON_PRESENTACIONES;

/
ALTER TRIGGER "MIGUEL"."TRG_IMPEDIR_MODIFICAR_EXAMEN_CON_PRESENTACIONES" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_VALIDAR_ACTUALIZACION_PREGUNTA
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "MIGUEL"."TRG_VALIDAR_ACTUALIZACION_PREGUNTA"
BEFORE UPDATE ON PREGUNTA
                          FOR EACH ROW
DECLARE
v_conteo_presentaciones NUMBER;
BEGIN
SELECT COUNT(DISTINCT pe.ID) -- Contamos presentaciones distintas
INTO v_conteo_presentaciones
FROM DETALLEPREGUNTAEXAMEN dpe
         JOIN PRESENTACIONEXAMEN pe ON dpe.EXAMEN_ID = pe.EXAMEN_ID
WHERE dpe.PREGUNTA_ID = :OLD.ID_PREGUNTA; -- Usamos :OLD.ID_PREGUNTA para referirnos al ID de la pregunta que se está intentando actualizar.

-- Si el conteo es mayor que 0, significa que la pregunta está en al menos un examen que ya fue presentado.
IF v_conteo_presentaciones > 0 THEN
        RAISE_APPLICATION_ERROR(-20001,
            'Error: No se puede actualizar la pregunta (ID: ' || :OLD.ID_PREGUNTA ||
            '). La pregunta está incluida en uno o más exámenes que ya han sido presentados por estudiantes.');
END IF;

EXCEPTION
    WHEN OTHERS THEN

        DBMS_OUTPUT.PUT_LINE('Error inesperado en TRG_VALIDAR_ACTUALIZACION_PREGUNTA: ' || SQLERRM);
        RAISE; -- Relanza la excepción original
END TRG_VALIDAR_ACTUALIZACION_PREGUNTA;
/
ALTER TRIGGER "MIGUEL"."TRG_VALIDAR_ACTUALIZACION_PREGUNTA" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_VALIDAR_FECHA_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "MIGUEL"."TRG_VALIDAR_FECHA_EXAMEN"
BEFORE INSERT OR UPDATE ON EXAMEN
                                    FOR EACH ROW
DECLARE
v_fecha_hora_examen TIMESTAMP;
    v_fecha_hora_actual TIMESTAMP;
BEGIN
    -- Combinar :NEW.FECHA (que es DATE) y :NEW.HORA (que es DATE pero se usa para la hora)
    -- en un solo valor TIMESTAMP para una comparación precisa.
    v_fecha_hora_examen := TO_TIMESTAMP(
                                TO_CHAR(:NEW.FECHA, 'YYYY-MM-DD') || ' ' || TO_CHAR(:NEW.HORA, 'HH24:MI:SS'),
                                'YYYY-MM-DD HH24:MI:SS'
                           );

    v_fecha_hora_actual := SYSTIMESTAMP; -- Usar SYSTIMESTAMP para comparación precisa con hora y zona horaria

    -- Validar que la fecha y hora del examen no sea anterior al momento actual exacto.
    IF v_fecha_hora_examen < v_fecha_hora_actual THEN
        RAISE_APPLICATION_ERROR(-20010, 'La fecha y hora de presentación del examen (' || TO_CHAR(v_fecha_hora_examen, 'DD/MM/YYYY HH24:MI:SS') || ') no puede ser anterior al momento actual.');
END IF;

    -- Validación para que el peso del curso esté entre 0 y 100 (si es un porcentaje)
    IF :NEW.PESO_CURSO IS NOT NULL AND (:NEW.PESO_CURSO < 0 OR :NEW.PESO_CURSO > 100) THEN
        RAISE_APPLICATION_ERROR(-20011, 'El peso del curso debe estar entre 0 y 100.');
END IF;

    -- Validación para que la calificación mínima aprobatoria sea razonable (ej. entre 0 y la nota máxima del sistema)
    -- Asumiendo una nota máxima de 5 como en otros contextos de tu proyecto:
    IF :NEW.CALIFICACION_MIN_APROBATORIA IS NOT NULL AND (:NEW.CALIFICACION_MIN_APROBATORIA < 0 OR :NEW.CALIFICACION_MIN_APROBATORIA > 5) THEN -- Ajusta 5 si tu escala es diferente
        RAISE_APPLICATION_ERROR(-20012, 'La calificación mínima aprobatoria debe estar en un rango válido (ej. 0-5).');
END IF;

    -- Validación para que el tiempo de duración sea positivo
    IF :NEW.TIEMPO IS NOT NULL AND :NEW.TIEMPO <= 0 THEN
        RAISE_APPLICATION_ERROR(-20013, 'El tiempo de duración del examen debe ser un valor positivo.');
END IF;

    -- Validación para que el número de preguntas sea positivo
    IF :NEW.NUMERO_PREGUNTAS IS NOT NULL AND :NEW.NUMERO_PREGUNTAS <= 0 THEN
        RAISE_APPLICATION_ERROR(-20014, 'El número de preguntas para el estudiante debe ser un valor positivo.');
END IF;

EXCEPTION
    WHEN OTHERS THEN
        -- Loggear el error o simplemente relanzarlo
        RAISE;
END TRG_VALIDAR_FECHA_EXAMEN;

/
ALTER TRIGGER "MIGUEL"."TRG_VALIDAR_FECHA_EXAMEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_VALIDAR_PRESENTACION_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "MIGUEL"."TRG_VALIDAR_PRESENTACION_EXAMEN"
BEFORE INSERT ON PRESENTACIONEXAMEN
FOR EACH ROW
DECLARE
v_examen_fecha EXAMEN.FECHA%TYPE;
    v_examen_hora EXAMEN.HORA%TYPE; -- Almacena fecha y hora de inicio del examen
    v_examen_start_datetime DATE;
    v_curso_id_examen EXAMEN.CURSO_ID%TYPE;
    v_estudiante_en_curso NUMBER;
    -- Para límite de intentos (opcional, descomentar y ajustar si es necesario)
    -- MAX_INTENTOS_PERMITIDOS CONSTANT NUMBER := 1; -- Ejemplo: permitir solo 1 intento
    -- v_intentos_previos NUMBER;
BEGIN
    -- Obtener datos del examen
SELECT E.FECHA, E.HORA, E.CURSO_ID
INTO v_examen_fecha, v_examen_hora, v_curso_id_examen
FROM EXAMEN E
WHERE E.ID = :NEW.EXAMEN_ID;

-- Validar si el estudiante está inscrito en el curso del examen
SELECT COUNT(*)
INTO v_estudiante_en_curso
FROM DETALLEESTUDIANTECURSO DEC
WHERE DEC.ESTUDIANTE_CEDULA = :NEW.ESTUDIANTE_CEDULA AND DEC.CURSO_ID = v_curso_id_examen;

IF v_estudiante_en_curso = 0 THEN
        RAISE_APPLICATION_ERROR(-20001, 'El estudiante con cédula ' || :NEW.ESTUDIANTE_CEDULA || ' no está inscrito en el curso ID ' || v_curso_id_examen || ' para presentar este examen.');
END IF;

    -- Construir la fecha y hora de inicio completa del examen
    -- Asumimos que EXAMEN.FECHA tiene la fecha y EXAMEN.HORA tiene la fecha con la hora de inicio.
    -- Si EXAMEN.HORA solo tuviera la hora (ej. almacenada como intervalo o número), se ajustaría aquí.
    -- Dado que HORA es DATE, ya contiene una fecha, tomamos la hora de EXAMEN.HORA y la fecha de EXAMEN.FECHA
    v_examen_start_datetime := TO_DATE(TO_CHAR(v_examen_fecha, 'YYYY-MM-DD') || ' ' || TO_CHAR(v_examen_hora, 'HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS');

    -- Validar que el examen no se presente antes de tiempo
    IF SYSDATE < v_examen_start_datetime THEN
        RAISE_APPLICATION_ERROR(-20002, 'El examen aún no está disponible. Inicia el: ' || TO_CHAR(v_examen_start_datetime, 'DD/MM/YYYY HH24:MI:SS'));
END IF;

    -- Opcional: Validar si el examen ya expiró (si hay una ventana de finalización)
    -- DECLARE v_duracion_examen EXAMEN.TIEMPO%TYPE; v_ventana_adicional_min NUMBER := 60; -- ej. 1 hora extra de ventana
    -- BEGIN
    --   SELECT TIEMPO INTO v_duracion_examen FROM EXAMEN WHERE ID = :NEW.EXAMEN_ID;
    --   IF SYSDATE > (v_examen_start_datetime + ( (NVL(v_duracion_examen,0) + v_ventana_adicional_min) / (24*60) )) THEN
    --     RAISE_APPLICATION_ERROR(-20005, 'La ventana para presentar este examen ya ha finalizado.');
    --   END IF;
    -- END;

    -- Opcional: Lógica para límite de intentos
    /*
    SELECT COUNT(*)
    INTO v_intentos_previos
    FROM PRESENTACIONEXAMEN
    WHERE EXAMEN_ID = :NEW.EXAMEN_ID AND ESTUDIANTE_CEDULA = :NEW.ESTUDIANTE_CEDULA;

    IF v_intentos_previos >= MAX_INTENTOS_PERMITIDOS THEN
        RAISE_APPLICATION_ERROR(-20003, 'Ha excedido el número máximo de ' || MAX_INTENTOS_PERMITIDOS || ' intento(s) para este examen.');
    END IF;
    */

    -- Asignar la hora de inicio de la presentación actual
    :NEW.HORA_INICIO := SYSDATE;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        RAISE_APPLICATION_ERROR(-20004, 'El examen con ID ' || :NEW.EXAMEN_ID || ' no existe o no se pudo verificar la inscripción al curso.');
WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error en TRG_VALIDAR_PRESENTACION_EXAMEN: ' || SQLCODE || ' - ' || SQLERRM);
        RAISE; -- Relanzar la excepción para que la aplicación la maneje
END TRG_VALIDAR_PRESENTACION_EXAMEN;

/
ALTER TRIGGER "MIGUEL"."TRG_VALIDAR_PRESENTACION_EXAMEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_VALIDAR_TIEMPO_RESPUESTA_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "MIGUEL"."TRG_VALIDAR_TIEMPO_RESPUESTA_EXAMEN"
BEFORE INSERT ON RESPUESTAPREGUNTA
FOR EACH ROW
DECLARE
v_presentacion_hora_inicio PRESENTACIONEXAMEN.HORA_INICIO%TYPE;
    v_examen_duracion_minutos EXAMEN.TIEMPO%TYPE;
    v_examen_id_actual EXAMEN.ID%TYPE;
    v_hora_fin_permitida DATE;
BEGIN
    -- Obtener la hora de inicio de esta presentación y la duración del examen
SELECT PE.HORA_INICIO, E.TIEMPO, E.ID
INTO v_presentacion_hora_inicio, v_examen_duracion_minutos, v_examen_id_actual
FROM PREGUNTAEXAMENESTUDIANTE PEE
         JOIN PRESENTACIONEXAMEN PE ON PEE.PRESENTACION_EXAMEN_ID = PE.ID
         JOIN EXAMEN E ON PE.EXAMEN_ID = E.ID
WHERE PEE.ID = :NEW.PREGUNTAEXAMENESTUDIANTE_ID;

IF v_examen_duracion_minutos IS NOT NULL AND v_examen_duracion_minutos > 0 THEN
        v_hora_fin_permitida := v_presentacion_hora_inicio + (v_examen_duracion_minutos / (24*60.0)); -- Sumar minutos a la fecha/hora

        IF SYSDATE > v_hora_fin_permitida THEN
            RAISE_APPLICATION_ERROR(-20050, 'El tiempo para responder el examen ha finalizado. No se pueden guardar más respuestas.');
END IF;
END IF;
    -- Si v_examen_duracion_minutos es NULL o 0, se asume tiempo ilimitado para el examen.

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        -- Esto no debería ocurrir si la FK de preguntaExamenEstudiante_id es válida
        RAISE_APPLICATION_ERROR(-20051, 'No se pudo encontrar la presentación del examen asociada a esta respuesta.');
WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error en TRG_VALIDAR_TIEMPO_RESPUESTA_EXAMEN: ' || SQLCODE || ' - ' || SQLERRM);
        RAISE;
END TRG_VALIDAR_TIEMPO_RESPUESTA_EXAMEN;

/
ALTER TRIGGER "MIGUEL"."TRG_VALIDAR_TIEMPO_RESPUESTA_EXAMEN" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_VERIFICAR_TEMA_PREGUNTA_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TRIGGER "MIGUEL"."TRG_VERIFICAR_TEMA_PREGUNTA_EXAMEN"
BEFORE INSERT ON DETALLEPREGUNTAEXAMEN
FOR EACH ROW
DECLARE
v_pregunta_contenido_id PREGUNTA.CONTENIDO_ID%TYPE;
    v_examen_curso_id EXAMEN.CURSO_ID%TYPE;
    v_count_contenido_en_curso NUMBER;
BEGIN
    -- Obtener el contenido_id de la pregunta
SELECT P.CONTENIDO_ID
INTO v_pregunta_contenido_id
FROM PREGUNTA P
WHERE P.ID_PREGUNTA = :NEW.PREGUNTA_ID;

-- Obtener el curso_id del examen
SELECT E.CURSO_ID
INTO v_examen_curso_id
FROM EXAMEN E
WHERE E.ID = :NEW.EXAMEN_ID;

IF v_pregunta_contenido_id IS NOT NULL THEN -- Solo validar si la pregunta tiene un tema asignado
        -- Verificar si el contenido de la pregunta pertenece al curso del examen
SELECT COUNT(*)
INTO v_count_contenido_en_curso
FROM CONTENIDO C
         JOIN UNIDAD U ON C.ID_UNIDAD = U.ID_UNIDAD
WHERE C.ID_CONTENIDO = v_pregunta_contenido_id AND U.ID_CURSO = v_examen_curso_id;

IF v_count_contenido_en_curso = 0 THEN
            RAISE_APPLICATION_ERROR(-20060, 'La pregunta ID ' || :NEW.PREGUNTA_ID ||
                                            ' (tema ID ' || v_pregunta_contenido_id ||
                                            ') no pertenece al tema/curso del examen ID ' || :NEW.EXAMEN_ID ||
                                            ' (curso ID ' || v_examen_curso_id || ').');
END IF;
END IF; -- Si la pregunta no tiene contenido_id, se permite (podría ser una pregunta genérica)

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        -- Si la pregunta o el examen no existen, las FKs deberían fallar primero.
        -- Pero si la pregunta no tiene contenido_id, no es un error aquí.
        IF v_pregunta_contenido_id IS NULL THEN
             NULL; -- Permitir preguntas sin tema asignado si es la lógica deseada.
ELSE
            RAISE_APPLICATION_ERROR(-20061, 'No se pudo encontrar la pregunta, el examen o el tema asociado.');
END IF;
WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error en TRG_VERIFICAR_TEMA_PREGUNTA_EXAMEN: ' || SQLCODE || ' - ' || SQLERRM);
        RAISE;
END TRG_VERIFICAR_TEMA_PREGUNTA_EXAMEN;

/
ALTER TRIGGER "MIGUEL"."TRG_VERIFICAR_TEMA_PREGUNTA_EXAMEN" ENABLE;
--------------------------------------------------------
--  DDL for Package PAQUETE_AUTENTICACION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_AUTENTICACION" AS
    FUNCTION VALIDAR_CREDENCIALES (
        p_cedula        IN NUMBER,
        p_contrasena    IN VARCHAR2,
        p_rol           IN VARCHAR2
    ) RETURN BOOLEAN;
END PAQUETE_AUTENTICACION;

/
--------------------------------------------------------
--  DDL for Package PAQUETE_CATALOGOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_CATALOGOS" AS

    FUNCTION LISTAR_TIPOS_PREGUNTA
    RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_NIVELES
    RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_VISIBILIDADES
    RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_CATEGORIAS_EXAMEN
    RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_TIPOS_CREACION_EXAMEN -- Para la tabla CREACION
    RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_DIAS_SEMANA -- Añadido si es necesario
    RETURN SYS_REFCURSOR;

END PAQUETE_CATALOGOS;

/
--------------------------------------------------------
--  DDL for Package PAQUETE_ESTADISTICAS_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_ESTADISTICAS_EXAMEN" AS

  -- Cuenta los exámenes futuros para un estudiante que aún no ha presentado
  FUNCTION CONTAR_PROXIMOS_EXAMENES_EST(
    p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
  ) RETURN NUMBER;

  -- Devuelve una descripción del último resultado de examen de un estudiante
  FUNCTION OBTENER_ULTIMO_RESULTADO_EST(
    p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
  ) RETURN VARCHAR2;

  -- Cuenta cuántos exámenes ha creado un profesor
  FUNCTION CONTAR_EXAMENES_POR_PROFESOR(
    p_cedula_profesor IN PROFESOR.CEDULA%TYPE
  ) RETURN NUMBER;

  -- Devuelve estadísticas para un examen específico
  FUNCTION GENERAR_ESTADISTICAS_POR_EXAMEN(
    p_id_examen IN EXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR;

  -- Devuelve estadísticas de uso y correctitud para una pregunta específica
  FUNCTION GENERAR_ESTADISTICAS_POR_PREGUNTA_GLOBAL(
    p_id_pregunta IN PREGUNTA.ID_PREGUNTA%TYPE
  ) RETURN SYS_REFCURSOR;

END PAQUETE_ESTADISTICAS_EXAMEN;

/
--------------------------------------------------------
--  DDL for Package PAQUETE_GESTION_CURSOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_GESTION_CURSOS" AS

    FUNCTION LISTAR_CURSOS_POR_PROFESOR (
        p_cedula_profesor IN PROFESOR.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_CURSOS_POR_ESTUDIANTE (
        p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR;

    FUNCTION CONTAR_CURSOS_ACTIVOS_ESTUDIANTE (
        p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
    ) RETURN NUMBER;

    FUNCTION OBTENER_UNIDADES_POR_CURSO (
        p_id_curso      IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR;

    FUNCTION OBTENER_CONTENIDOS_POR_UNIDAD (
        p_id_unidad     IN UNIDAD.ID_UNIDAD%TYPE
    ) RETURN SYS_REFCURSOR;

    PROCEDURE CREAR_NUEVO_CURSO (
        p_nombre            IN CURSO.NOMBRE%TYPE,
        p_descripcion       IN CURSO.DESCRIPCION%TYPE,
        p_cedula_profesor   IN CURSO.PROFESOR_CEDULA%TYPE,
        p_id_curso_out      OUT CURSO.ID_CURSO%TYPE
    );

    PROCEDURE ACTUALIZAR_CURSO_EXISTENTE (
        p_id_curso          IN CURSO.ID_CURSO%TYPE,
        p_nombre            IN CURSO.NOMBRE%TYPE,
        p_descripcion       IN CURSO.DESCRIPCION%TYPE,
        p_cedula_profesor   IN CURSO.PROFESOR_CEDULA%TYPE,
        p_filas_afectadas_out OUT NUMBER
    );

    PROCEDURE ELIMINAR_CURSO_POR_ID (
        p_id_curso          IN CURSO.ID_CURSO%TYPE,
        p_filas_afectadas_out OUT NUMBER
    );

    PROCEDURE INSCRIBIR_ESTUDIANTE_EN_CURSO (
        p_cedula_estudiante IN DETALLEESTUDIANTECURSO.ESTUDIANTE_CEDULA%TYPE,
        p_id_curso          IN DETALLEESTUDIANTECURSO.CURSO_ID%TYPE
    );

    FUNCTION OBTENER_CURSO_POR_ID (
        p_id_curso      IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_TODOS_LOS_CURSOS
    RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_CONTENIDOS_POR_CURSO_PARA_FILTRO (
        p_id_curso      IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_TODOS_LOS_CONTENIDOS
    RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_HORARIOS_POR_CURSO (
        p_id_curso IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR;

    FUNCTION LISTAR_PLAN_ESTUDIO_CURSO (
        p_id_curso IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR;

END PAQUETE_GESTION_CURSOS;

/
--------------------------------------------------------
--  DDL for Package PAQUETE_GESTION_EXAMENES
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_GESTION_EXAMENES" AS

  -- Procedimiento para crear un examen completo
  PROCEDURE CREAR_EXAMEN_COMPLETO (
    p_nombre_examen IN EXAMEN.NOMBRE%TYPE,
    p_descripcion_examen IN EXAMEN.DESCRIPCION%TYPE,
    p_curso_id IN EXAMEN.CURSO_ID%TYPE,
    p_categoria_id IN EXAMEN.CATEGORIA_ID%TYPE,
    p_fecha_presentacion IN EXAMEN.FECHA%TYPE,
    p_hora_presentacion IN TIMESTAMP,
    p_tiempo_duracion IN EXAMEN.TIEMPO%TYPE,
    p_num_preguntas_estudiante IN EXAMEN.NUMERO_PREGUNTAS%TYPE,
    p_calif_min_aprobatoria IN EXAMEN.CALIFICACION_MIN_APROBATORIA%TYPE,
    p_peso_curso IN EXAMEN.PESO_CURSO%TYPE,
    p_creacion_id IN EXAMEN.CREACION_ID%TYPE,
    p_cedula_profesor IN PROFESOR.CEDULA%TYPE, -- Para auditoría o lógica interna
    p_preguntas_detalle IN T_ARRAY_PREGUNTA_EXAMEN_TYPE, -- Para preguntas manuales
    p_id_examen_out OUT EXAMEN.ID%TYPE
  );

  -- Procedimiento para actualizar un examen completo
  PROCEDURE ACTUALIZAR_EXAMEN_COMPLETO (
    p_id_examen IN EXAMEN.ID%TYPE,
    p_nombre_examen IN EXAMEN.NOMBRE%TYPE,
    p_descripcion_examen IN EXAMEN.DESCRIPCION%TYPE,
    p_curso_id IN EXAMEN.CURSO_ID%TYPE,
    p_categoria_id IN EXAMEN.CATEGORIA_ID%TYPE,
    p_fecha_presentacion IN EXAMEN.FECHA%TYPE,
    p_hora_presentacion IN TIMESTAMP,
    p_tiempo_duracion IN EXAMEN.TIEMPO%TYPE,
    p_num_preguntas_estudiante IN EXAMEN.NUMERO_PREGUNTAS%TYPE,
    p_calif_min_aprobatoria IN EXAMEN.CALIFICACION_MIN_APROBATORIA%TYPE,
    p_peso_curso IN EXAMEN.PESO_CURSO%TYPE,
    p_creacion_id IN EXAMEN.CREACION_ID%TYPE,
    p_preguntas_detalle IN T_ARRAY_PREGUNTA_EXAMEN_TYPE
);

  -- Función para obtener un examen por su ID
  FUNCTION OBTENER_EXAMEN_POR_ID (
    p_id_examen IN EXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR;

  -- Función para listar exámenes de un profesor
  FUNCTION LISTAR_EXAMENES_POR_PROFESOR (
    p_cedula_profesor IN PROFESOR.CEDULA%TYPE
  ) RETURN SYS_REFCURSOR;

  -- Función para listar exámenes disponibles para un estudiante
  FUNCTION LISTAR_EXAMENES_DISPONIBLES_EST (
    p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE,
    p_id_curso IN CURSO.ID_CURSO%TYPE DEFAULT NULL -- Opcional
  ) RETURN SYS_REFCURSOR;

  -- Procedimiento para eliminar un examen
  PROCEDURE ELIMINAR_EXAMEN_POR_ID (
    p_id_examen IN EXAMEN.ID%TYPE
  );

  -- Función para obtener las preguntas de un examen para el DTO de edición
  FUNCTION OBTENER_PREGUNTAS_EXAMEN_DTO (
    p_id_examen IN EXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR;


END PAQUETE_GESTION_EXAMENES;

/
--------------------------------------------------------
--  DDL for Package PAQUETE_GESTION_PREGUNTAS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_GESTION_PREGUNTAS" AS


  PROCEDURE CREAR_PREGUNTA_COMPLETA(
    p_texto_pregunta            IN PREGUNTA.TEXTO%TYPE,
    p_tiempo_estimado           IN PREGUNTA.TIEMPO_ESTIMADO%TYPE,
    p_porcentaje_defecto        IN PREGUNTA.PORCENTAJE%TYPE,
    p_tipo_pregunta_id          IN PREGUNTA.TIPO_PREGUNTA_ID%TYPE,
    p_visibilidad_id            IN PREGUNTA.VISIBILIDAD_ID%TYPE,
    p_nivel_id                  IN PREGUNTA.NIVEL_ID%TYPE,
    p_pregunta_padre_id         IN PREGUNTA.PREGUNTA_PADRE%TYPE,
    p_contenido_id              IN PREGUNTA.CONTENIDO_ID%TYPE,
    p_cedula_profesor_creador   IN PREGUNTA.CREADOR_CEDULA_PROFESOR%TYPE,
    p_opciones                  IN T_ARRAY_OPCION_PREGUNTA_TYPE, -- Tipo de colección a nivel de esquema
    p_id_pregunta_out           OUT PREGUNTA.ID_PREGUNTA%TYPE
);

  PROCEDURE ACTUALIZAR_PREGUNTA_COMPLETA(
      p_id_pregunta               IN PREGUNTA.ID_PREGUNTA%TYPE,
      p_texto_pregunta            IN PREGUNTA.TEXTO%TYPE,
      p_tiempo_estimado           IN PREGUNTA.TIEMPO_ESTIMADO%TYPE,
      p_porcentaje_defecto        IN PREGUNTA.PORCENTAJE%TYPE,
      p_tipo_pregunta_id          IN PREGUNTA.TIPO_PREGUNTA_ID%TYPE,
      p_visibilidad_id            IN PREGUNTA.VISIBILIDAD_ID%TYPE,
      p_nivel_id                  IN PREGUNTA.NIVEL_ID%TYPE,
      p_pregunta_padre_id         IN PREGUNTA.PREGUNTA_PADRE%TYPE,
      p_contenido_id              IN PREGUNTA.CONTENIDO_ID%TYPE,
      p_cedula_profesor_creador   IN PREGUNTA.CREADOR_CEDULA_PROFESOR%TYPE, -- Se mantiene el creador original
      p_opciones                  IN T_ARRAY_OPCION_PREGUNTA_TYPE,
      p_usuario_modificacion      IN PREGUNTA.USUARIO_MODIFICACION%TYPE
  );

  PROCEDURE ELIMINAR_PREGUNTA_POR_ID(
      p_id_pregunta               IN PREGUNTA.ID_PREGUNTA%TYPE,
      p_filas_afectadas_out       OUT NUMBER
  );

  FUNCTION BUSCAR_PREGUNTAS_BANCO_DTO(
      p_cedula_profesor   IN PROFESOR.CEDULA%TYPE,
      p_texto_busqueda    IN VARCHAR2 DEFAULT NULL,
      p_tipo_pregunta_id  IN NUMBER DEFAULT NULL,
      p_contenido_id      IN NUMBER DEFAULT NULL,
      p_nivel_id          IN NUMBER DEFAULT NULL,
      p_id_curso_contexto IN CURSO.ID_CURSO%TYPE DEFAULT NULL
  ) RETURN SYS_REFCURSOR;

  FUNCTION OBTENER_PREGUNTA_POR_ID_COMPLETA(
      p_id_pregunta IN PREGUNTA.ID_PREGUNTA%TYPE
  ) RETURN SYS_REFCURSOR;

  FUNCTION OBTENER_OPCIONES_POR_PREGUNTA_ID(
      p_id_pregunta IN OPCIONPREGUNTA.PREGUNTA_ID%TYPE
  ) RETURN SYS_REFCURSOR;

  FUNCTION LISTAR_PREGUNTAS_CANDIDATAS_PADRE(
      p_cedula_profesor   IN PROFESOR.CEDULA%TYPE,
      p_id_pregunta_excluir IN PREGUNTA.ID_PREGUNTA%TYPE DEFAULT NULL
  ) RETURN SYS_REFCURSOR;

  -- >> NUEVA FUNCIÓN DECLARADA AQUÍ <<
  FUNCTION OBTENER_SUBPREGUNTAS_CON_PORCENTAJE(
      p_id_pregunta_padre IN PREGUNTA.ID_PREGUNTA%TYPE
  ) RETURN SYS_REFCURSOR;

END PAQUETE_GESTION_PREGUNTAS;

/
--------------------------------------------------------
--  DDL for Package PAQUETE_PRESENTACION_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_PRESENTACION_EXAMEN" AS

    -- Función para iniciar un intento de examen
    FUNCTION INICIAR_PRESENTACION_EXAMEN(
        p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE,
        p_id_examen         IN EXAMEN.ID%TYPE,
        p_direccion_ip      IN PRESENTACIONEXAMEN.DIRECCION_IP%TYPE
    ) RETURN PRESENTACIONEXAMEN.ID%TYPE;

    -- Función para obtener las preguntas de un intento de examen
    FUNCTION OBTENER_PREGUNTAS_PARA_PRESENTACION(
        p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
    ) RETURN SYS_REFCURSOR;

    -- Procedimiento para registrar la respuesta de un estudiante a una pregunta
    PROCEDURE REGISTRAR_RESPUESTA_ESTUDIANTE(
        p_id_pregunta_examen_estudiante IN PREGUNTAEXAMENESTUDIANTE.ID%TYPE,
        p_respuesta_dada                IN RESPUESTAPREGUNTA.RESPUESTA_DADA%TYPE, -- Para Seleccion Multiple (IDs "1,2,3"), Ordenar ("A:::B"), etc.
        p_id_opcion_pregunta            IN RESPUESTAPREGUNTA.OPCION_PREGUNTA_ID%TYPE -- Para Seleccion Unica (ID de opción) y V/F
    );

    -- Procedimiento para finalizar un intento, calcular calificación y devolver resumen
    PROCEDURE FINALIZAR_Y_CALIFICAR_EXAMEN(
        p_id_presentacion_examen    IN PRESENTACIONEXAMEN.ID%TYPE,
        p_calificacion_final_out    OUT PRESENTACIONEXAMEN.CALIFICACION%TYPE,
        p_resp_correctas_out        OUT PRESENTACIONEXAMEN.RESPUESTAS_CORRECTAS%TYPE,
        p_resp_incorrectas_out      OUT PRESENTACIONEXAMEN.RESPUESTAS_INCORRECTAS%TYPE,
        p_preguntas_respondidas_out OUT NUMBER,
        p_total_preguntas_examen_out OUT NUMBER,
        p_mensaje_feedback_out      OUT VARCHAR2,
        p_nombre_examen_out         OUT EXAMEN.NOMBRE%TYPE,
        p_fecha_presentacion_out    OUT VARCHAR2 -- Fecha formateada
    );

    -- Función para obtener los resultados detallados de un intento de examen
    FUNCTION OBTENER_RESULTADOS_DETALLADOS(
        p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
    ) RETURN SYS_REFCURSOR;

    -- Función para verificar si la respuesta a una pregunta es correcta
    FUNCTION ES_PREGUNTA_CORRECTA(
        p_id_pregunta_examen_estudiante IN PREGUNTAEXAMENESTUDIANTE.ID%TYPE
    ) RETURN NUMBER; -- 1 para correcta, 0 para incorrecta

    -- Función para obtener el porcentaje aprobado para una pregunta específica en una presentación
    FUNCTION OBTENER_PORCENTAJE_APROBADO_PREGUNTA(
        p_id_pregunta_examen_estudiante IN PREGUNTAEXAMENESTUDIANTE.ID%TYPE
    ) RETURN NUMBER; -- Porcentaje (0-100)

    -- Función para obtener el porcentaje total aprobado del examen
    FUNCTION OBTENER_PORCENTAJE_TOTAL_APROBADO(
        p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
    ) RETURN NUMBER; -- Porcentaje (0-100)

    -- Función para obtener la nota final del examen en la escala definida
    FUNCTION OBTENER_NOTA_EXAMEN_FINAL(
        p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
    ) RETURN NUMBER; -- Nota final

END PAQUETE_PRESENTACION_EXAMEN;

/
--------------------------------------------------------
--  DDL for Package PAQUETE_USUARIOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE "MIGUEL"."PAQUETE_USUARIOS" AS
    FUNCTION OBTENER_ESTUDIANTE_POR_CEDULA (
        p_cedula IN ESTUDIANTE.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR;

    FUNCTION OBTENER_PROFESOR_POR_CEDULA (
        p_cedula IN PROFESOR.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR;

END PAQUETE_USUARIOS;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_AUTENTICACION
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_AUTENTICACION" AS

    FUNCTION VALIDAR_CREDENCIALES (
        p_cedula IN NUMBER,
        p_contrasena IN VARCHAR2,
        p_rol IN VARCHAR2
    ) RETURN BOOLEAN
    IS
        v_coincidencias NUMBER := 0;
BEGIN
        IF UPPER(p_rol)='PROFESOR' THEN
SELECT COUNT(*)
INTO v_coincidencias
FROM PROFESOR
WHERE CEDULA = p_cedula AND CONTRASENA = p_contrasena;

ELSIF UPPER(p_rol)='ESTUDIANTE' THEN
SELECT COUNT(*)
INTO v_coincidencias
FROM ESTUDIANTE
WHERE CEDULA = p_cedula AND CONTRASENA = p_contrasena;

ELSE
            RAISE_APPLICATION_ERROR (-20001, 'Rol no válido: ' || p_rol);
END IF;

        IF v_coincidencias = 1 THEN
            return TRUE;
ELSE
            return FALSE;
END IF;


EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RETURN FALSE;

WHEN TOO_MANY_ROWS THEN
            RETURN FALSE;

WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR (-20099, 'Error inesperado: ' || SQLERRM);
END VALIDAR_CREDENCIALES;

END PAQUETE_AUTENTICACION;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_CATALOGOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_CATALOGOS" AS

    FUNCTION LISTAR_TIPOS_PREGUNTA
    RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID,
    NOMBRE,
    DESCRIPCION
FROM TIPOPREGUNTA;
RETURN v_cursor;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Error al listar los tipos de pregunta');
END LISTAR_TIPOS_PREGUNTA;


    FUNCTION LISTAR_NIVELES
    RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID,
    NOMBRE,
    DESCRIPCION
FROM NIVEL;

RETURN v_cursor;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Error al listar los niveles de las preguntas');
END LISTAR_NIVELES;


    FUNCTION LISTAR_VISIBILIDADES
    RETURN SYS_REFCURSOR
    IS
       v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID,
    NOMBRE,
    DESCRIPCION
FROM VISIBILIDAD;

RETURN v_cursor;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Error al listar las visibilidades de la pregunta');
END LISTAR_VISIBILIDADES;


    FUNCTION LISTAR_CATEGORIAS_EXAMEN
    RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID,
    NOMBRE,
    DESCRIPCION
FROM CATEGORIA;
RETURN v_cursor;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Error al listar las categorias del examen');
END LISTAR_CATEGORIAS_EXAMEN;


    FUNCTION LISTAR_TIPOS_CREACION_EXAMEN
    RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID,
    NOMBRE,
    DESCRIPCION
FROM CREACION;

RETURN v_cursor;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Error al listar los tipos de creacion del examen');
END LISTAR_TIPOS_CREACION_EXAMEN;

    FUNCTION LISTAR_DIAS_SEMANA
    RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID ,
    NOMBRE ,
    DESCRIPCION
FROM DIA_SEMANA;

RETURN LISTAR_DIAS_SEMANA;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20001, 'Error al listar los dias de la semana');
END LISTAR_DIAS_SEMANA;

END PAQUETE_CATALOGOS;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_ESTADISTICAS_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_ESTADISTICAS_EXAMEN" AS

  FUNCTION CONTAR_PROXIMOS_EXAMENES_EST(
    p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
  ) RETURN NUMBER IS
    v_count NUMBER := 0;
BEGIN
SELECT COUNT(E.ID)
INTO v_count
FROM EXAMEN E
         JOIN DETALLEESTUDIANTECURSO DEC ON E.CURSO_ID = DEC.CURSO_ID
WHERE DEC.ESTUDIANTE_CEDULA = p_cedula_estudiante
  AND E.HORA > SYSTIMESTAMP -- Exámenes cuya hora de inicio es futura
  AND NOT EXISTS ( -- Y que el estudiante no haya finalizado
    SELECT 1
    FROM PRESENTACIONEXAMEN PE
    WHERE PE.EXAMEN_ID = E.ID
  AND PE.ESTUDIANTE_CEDULA = p_cedula_estudiante
  AND PE.HORA_FIN IS NOT NULL
    );
RETURN v_count;
EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error en CONTAR_PROXIMOS_EXAMENES_EST: ' || SQLERRM);
RETURN 0;
END CONTAR_PROXIMOS_EXAMENES_EST;

  FUNCTION OBTENER_ULTIMO_RESULTADO_EST(
    p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
  ) RETURN VARCHAR2 IS
    v_descripcion_resultado VARCHAR2(200);
BEGIN
SELECT E.NOMBRE || ': ' || TO_CHAR(PE.CALIFICACION, '99.99') || '/5.0 (Presentado: ' || TO_CHAR(PE.HORA_FIN, 'DD/MM/YYYY HH24:MI') || ')'
INTO v_descripcion_resultado
FROM PRESENTACIONEXAMEN PE
         JOIN EXAMEN E ON PE.EXAMEN_ID = E.ID
WHERE PE.ESTUDIANTE_CEDULA = p_cedula_estudiante
  AND PE.HORA_FIN IS NOT NULL
ORDER BY PE.HORA_FIN DESC
    FETCH FIRST 1 ROW ONLY;

RETURN NVL(v_descripcion_resultado, 'Aún no tienes resultados de exámenes finalizados.');
EXCEPTION
    WHEN NO_DATA_FOUND THEN
      RETURN 'Aún no tienes resultados de exámenes finalizados.';
WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error en OBTENER_ULTIMO_RESULTADO_EST: ' || SQLERRM);
RETURN 'Error al obtener último resultado.';
END OBTENER_ULTIMO_RESULTADO_EST;

  FUNCTION CONTAR_EXAMENES_POR_PROFESOR(
    p_cedula_profesor IN PROFESOR.CEDULA%TYPE
  ) RETURN NUMBER IS
    v_count NUMBER := 0;
BEGIN
SELECT COUNT(E.ID)
INTO v_count
FROM EXAMEN E
         JOIN CURSO C ON E.CURSO_ID = C.ID_CURSO
WHERE C.PROFESOR_CEDULA = p_cedula_profesor;
RETURN v_count;
EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error en CONTAR_EXAMENES_POR_PROFESOR: ' || SQLERRM);
RETURN 0;
END CONTAR_EXAMENES_POR_PROFESOR;

  FUNCTION GENERAR_ESTADISTICAS_POR_EXAMEN(
    p_id_examen IN EXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR IS
    v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    COUNT(PE.ID) AS NUMERO_PRESENTACIONES,
    AVG(PE.CALIFICACION) AS PROMEDIO_CALIFICACION,
    MAX(PE.CALIFICACION) AS MAXIMA_CALIFICACION,
    MIN(PE.CALIFICACION) AS MINIMA_CALIFICACION,
    AVG( (PE.HORA_FIN - PE.HORA_INICIO) * 24 * 60 ) AS PROMEDIO_TIEMPO_MINUTOS, -- Tiempo promedio en minutos
    (SELECT COUNT(*) FROM DETALLEPREGUNTAEXAMEN DPE WHERE DPE.EXAMEN_ID = p_id_examen) AS TOTAL_PREGUNTAS_EN_EXAMEN
FROM PRESENTACIONEXAMEN PE
WHERE PE.EXAMEN_ID = p_id_examen
  AND PE.HORA_FIN IS NOT NULL;
RETURN v_cursor;
EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error en GENERAR_ESTADISTICAS_POR_EXAMEN: ' || SQLERRM);
      RAISE; -- O devuelve un cursor vacío o un error específico
END GENERAR_ESTADISTICAS_POR_EXAMEN;

  FUNCTION GENERAR_ESTADISTICAS_POR_PREGUNTA_GLOBAL(
    p_id_pregunta IN PREGUNTA.ID_PREGUNTA%TYPE
  ) RETURN SYS_REFCURSOR IS
    v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    P.ID_PREGUNTA,
    P.TEXTO AS TEXTO_PREGUNTA,
    COUNT(DISTINCT PEE.PRESENTACION_EXAMEN_ID) AS VECES_PRESENTADA_EN_EXAMENES,
    SUM(CASE WHEN PAQUETE_PRESENTACION_EXAMEN.ES_PREGUNTA_CORRECTA(PEE.ID) = 1 THEN 1 ELSE 0 END) AS VECES_RESPONDIDA_CORRECTAMENTE,
    SUM(CASE WHEN RP.ID IS NOT NULL THEN 1 ELSE 0 END) AS VECES_RESPONDIDA_TOTAL,
    CASE
        WHEN SUM(CASE WHEN RP.ID IS NOT NULL THEN 1 ELSE 0 END) > 0 THEN
            ROUND((SUM(CASE WHEN PAQUETE_PRESENTACION_EXAMEN.ES_PREGUNTA_CORRECTA(PEE.ID) = 1 THEN 1 ELSE 0 END) / SUM(CASE WHEN RP.ID IS NOT NULL THEN 1 ELSE 0 END)) * 100, 2)
        ELSE 0
        END AS PORCENTAJE_CORRECTITUD
FROM PREGUNTA P
         LEFT JOIN DETALLEPREGUNTAEXAMEN DPE ON P.ID_PREGUNTA = DPE.PREGUNTA_ID
         LEFT JOIN PREGUNTAEXAMENESTUDIANTE PEE ON DPE.PREGUNTA_ID = PEE.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID AND DPE.EXAMEN_ID = PEE.DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID
         LEFT JOIN RESPUESTAPREGUNTA RP ON PEE.ID = RP.PREGUNTAEXAMENESTUDIANTE_ID
WHERE P.ID_PREGUNTA = p_id_pregunta
GROUP BY P.ID_PREGUNTA, P.TEXTO;
RETURN v_cursor;
EXCEPTION
    WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error en GENERAR_ESTADISTICAS_POR_PREGUNTA_GLOBAL: ' || SQLERRM);
      RAISE;
END GENERAR_ESTADISTICAS_POR_PREGUNTA_GLOBAL;

END PAQUETE_ESTADISTICAS_EXAMEN;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_GESTION_CURSOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_GESTION_CURSOS" AS

    FUNCTION LISTAR_CURSOS_POR_PROFESOR (
        p_cedula_profesor IN PROFESOR.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT ID_CURSO, NOMBRE, DESCRIPCION, PROFESOR_CEDULA
FROM CURSO
WHERE PROFESOR_CEDULA = p_cedula_profesor;

RETURN v_cursor;

EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR (-20099, 'Error al obtener los cursos por profesor: ' || SQLERRM);
END LISTAR_CURSOS_POR_PROFESOR;


    FUNCTION LISTAR_CURSOS_POR_ESTUDIANTE (
        p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    cur.ID_CURSO,
    cur.NOMBRE AS NOMBRE_CURSO,
    cur.DESCRIPCION AS DESCRIPCION_CURSO,
    cur.PROFESOR_CEDULA,
    pro.NOMBRE AS NOMBRE_PROFESOR
FROM CURSO cur
         JOIN DETALLEESTUDIANTECURSO est_cur ON est_cur.CURSO_ID = cur.ID_CURSO
         JOIN PROFESOR pro ON pro.CEDULA = cur.PROFESOR_CEDULA
WHERE est_cur.ESTUDIANTE_CEDULA = p_cedula_estudiante;

RETURN v_cursor;

EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR (-20099, 'Error al obtener los cursos por estudiante: ' || SQLERRM);
END LISTAR_CURSOS_POR_ESTUDIANTE;


    FUNCTION CONTAR_CURSOS_ACTIVOS_ESTUDIANTE (
        p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE
    ) RETURN NUMBER
    IS
        v_cant_cursos_activos NUMBER := 0;
BEGIN
SELECT COUNT(*)
INTO v_cant_cursos_activos
FROM DETALLEESTUDIANTECURSO est_cur
WHERE est_cur.ESTUDIANTE_CEDULA = p_cedula_estudiante;

RETURN v_cant_cursos_activos;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR (-20099, 'Error al contar los cursos del estudiante: ' || SQLERRM);
END CONTAR_CURSOS_ACTIVOS_ESTUDIANTE;


    FUNCTION OBTENER_UNIDADES_POR_CURSO (
        p_id_curso      IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor_unidades SYS_REFCURSOR;
BEGIN
OPEN v_cursor_unidades FOR
SELECT
    u.ID_UNIDAD,
    u.NOMBRE AS NOMBRE_UNIDAD,
    u.ID_CURSO
FROM UNIDAD u
WHERE u.ID_CURSO = p_id_curso
ORDER BY u.ID_UNIDAD;
RETURN v_cursor_unidades;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20099, 'Error al obtener las unidades por curso: ' || SQLERRM);
END OBTENER_UNIDADES_POR_CURSO;


    FUNCTION OBTENER_CONTENIDOS_POR_UNIDAD (
        p_id_unidad IN UNIDAD.ID_UNIDAD%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor_contenidos SYS_REFCURSOR;
BEGIN
OPEN v_cursor_contenidos FOR
SELECT
    con.ID_CONTENIDO,
    con.NOMBRE AS NOMBRE_CONTENIDO,
    uni.NOMBRE AS NOMBRE_UNIDAD,
    uni.ID_CURSO AS ID_CURSO_DE_UNIDAD
FROM CONTENIDO con
         JOIN UNIDAD uni ON con.ID_UNIDAD = uni.ID_UNIDAD
WHERE con.ID_UNIDAD = p_id_unidad
ORDER BY con.ID_CONTENIDO;

RETURN v_cursor_contenidos;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20099, 'Error al obtener los contenidos por unidad: ' || SQLERRM);
END OBTENER_CONTENIDOS_POR_UNIDAD;


    PROCEDURE CREAR_NUEVO_CURSO (
        p_nombre            IN CURSO.NOMBRE%TYPE,
        p_descripcion       IN CURSO.DESCRIPCION%TYPE,
        p_cedula_profesor   IN CURSO.PROFESOR_CEDULA%TYPE,
        p_id_curso_out      OUT CURSO.ID_CURSO%TYPE
    )
IS
        v_profesor_existe NUMBER;
BEGIN
SELECT COUNT(*) INTO v_profesor_existe FROM PROFESOR WHERE CEDULA = p_cedula_profesor;
IF v_profesor_existe = 0 THEN
            RAISE_APPLICATION_ERROR(-20010, 'El profesor con cédula ' || p_cedula_profesor || ' no existe.');
END IF;

SELECT SEQ_CURSO.NEXTVAL INTO p_id_curso_out FROM DUAL;

INSERT INTO CURSO (
    ID_CURSO,
    NOMBRE,
    DESCRIPCION,
    PROFESOR_CEDULA
) VALUES (
             p_id_curso_out,
             p_nombre,
             p_descripcion,
             p_cedula_profesor);

COMMIT;

EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20011, 'Error al crear el curso: Ya existe un curso con datos conflictivos (ej. nombre duplicado). ' || SQLERRM);
WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20100, 'Error inesperado al crear el curso: ' || SQLERRM);

END CREAR_NUEVO_CURSO;


    PROCEDURE ACTUALIZAR_CURSO_EXISTENTE (
        p_id_curso          IN CURSO.ID_CURSO%TYPE,
        p_nombre            IN CURSO.NOMBRE%TYPE,
        p_descripcion       IN CURSO.DESCRIPCION%TYPE,
        p_cedula_profesor   IN CURSO.PROFESOR_CEDULA%TYPE,
        p_filas_afectadas_out OUT NUMBER
    )
IS
        v_curso_existe NUMBER := 0;
        v_profesor_existe NUMBER :=0;
BEGIN
SELECT COUNT(*)
INTO v_curso_existe
FROM CURSO
WHERE ID_CURSO = p_id_curso;

IF v_curso_existe = 0 THEN
            RAISE_APPLICATION_ERROR (-20001, 'No existe un curso con el ID especificado: ' || p_id_curso);
END IF;

SELECT COUNT(*) INTO v_profesor_existe FROM PROFESOR WHERE CEDULA = p_cedula_profesor;
IF v_profesor_existe = 0 THEN
            RAISE_APPLICATION_ERROR(-20010, 'El profesor asignado con cédula ' || p_cedula_profesor || ' no existe.');
END IF;

UPDATE CURSO
SET
    NOMBRE = p_nombre,
    DESCRIPCION = p_descripcion,
    PROFESOR_CEDULA = p_cedula_profesor
WHERE ID_CURSO = p_id_curso;

p_filas_afectadas_out := SQL%ROWCOUNT;

        IF p_filas_afectadas_out = 0 THEN
            RAISE_APPLICATION_ERROR(-20012, 'No se actualizó el curso, ID no encontrado a pesar de la verificación previa: ' || p_id_curso);
END IF;

COMMIT;

EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20011, 'Error al actualizar el curso: Conflicto de datos (ej. nombre duplicado). ' || SQLERRM);
WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20099, 'Error inesperado al actualizar el curso: ' || SQLERRM);
END ACTUALIZAR_CURSO_EXISTENTE;


    PROCEDURE ELIMINAR_CURSO_POR_ID (
        p_id_curso          IN CURSO.ID_CURSO%TYPE,
        p_filas_afectadas_out OUT NUMBER
    )
IS
        v_count_dependencias_unidad NUMBER;
        v_count_dependencias_horario NUMBER;
        v_count_dependencias_examen NUMBER;
        v_count_dependencias_estudiantes NUMBER; -- Añadido
        v_curso_existe NUMBER;
BEGIN
SELECT COUNT(*) INTO v_curso_existe FROM CURSO WHERE ID_CURSO = p_id_curso;
IF v_curso_existe = 0 THEN
            p_filas_afectadas_out := 0;
            RAISE_APPLICATION_ERROR(-20001, 'No se puede eliminar: Curso con ID ' || p_id_curso || ' no existe.');
            RETURN;
END IF;

SELECT COUNT(*)
INTO v_count_dependencias_unidad
FROM UNIDAD
WHERE ID_CURSO = p_id_curso;

SELECT COUNT(*)
INTO v_count_dependencias_horario
FROM DETALLECURSOHORARIO
WHERE CURSO_ID = p_id_curso;

SELECT COUNT(*)
INTO v_count_dependencias_examen
FROM EXAMEN
WHERE CURSO_ID = p_id_curso;

SELECT COUNT(*)
INTO v_count_dependencias_estudiantes
FROM DETALLEESTUDIANTECURSO
WHERE CURSO_ID = p_id_curso;

IF v_count_dependencias_unidad > 0 THEN
            RAISE_APPLICATION_ERROR (-20021, 'No se puede eliminar el curso: Tiene unidades asignadas.');
        ELSIF v_count_dependencias_horario > 0 THEN
            RAISE_APPLICATION_ERROR (-20022, 'No se puede eliminar el curso: Tiene horarios asignados.');
        ELSIF v_count_dependencias_examen > 0 THEN
            RAISE_APPLICATION_ERROR (-20023, 'No se puede eliminar el curso: Tiene exámenes asignados.');
        ELSIF v_count_dependencias_estudiantes > 0 THEN -- Añadido
            RAISE_APPLICATION_ERROR (-20024, 'No se puede eliminar el curso: Tiene estudiantes inscritos.');
END IF;

DELETE FROM CURSO
WHERE ID_CURSO = p_id_curso;

p_filas_afectadas_out := SQL%ROWCOUNT;

COMMIT;

EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20099, 'Error inesperado al eliminar el curso: ' || SQLERRM);
END ELIMINAR_CURSO_POR_ID;


    PROCEDURE INSCRIBIR_ESTUDIANTE_EN_CURSO (
        p_cedula_estudiante IN DETALLEESTUDIANTECURSO.ESTUDIANTE_CEDULA%TYPE,
        p_id_curso          IN DETALLEESTUDIANTECURSO.CURSO_ID%TYPE
    )
IS
        v_estudiante_existe NUMBER;
        v_curso_existe NUMBER;
BEGIN
SELECT COUNT(*) INTO v_estudiante_existe FROM ESTUDIANTE WHERE CEDULA = p_cedula_estudiante;
IF v_estudiante_existe = 0 THEN
            RAISE_APPLICATION_ERROR(-20030, 'El estudiante con cédula ' || p_cedula_estudiante || ' no existe.');
END IF;

SELECT COUNT(*) INTO v_curso_existe FROM CURSO WHERE ID_CURSO = p_id_curso;
IF v_curso_existe = 0 THEN
            RAISE_APPLICATION_ERROR(-20031, 'El curso con ID ' || p_id_curso || ' no existe.');
END IF;

INSERT INTO DETALLEESTUDIANTECURSO (
    ESTUDIANTE_CEDULA,
    CURSO_ID
) VALUES (
             p_cedula_estudiante,
             p_id_curso
         );

COMMIT;

EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20032, 'El estudiante (' || p_cedula_estudiante || ') ya se encuentra inscrito en el curso (' || p_id_curso || ').');
WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20099, 'Error inesperado al inscribir estudiante al curso: ' || SQLERRM);
END INSCRIBIR_ESTUDIANTE_EN_CURSO;


    FUNCTION OBTENER_CURSO_POR_ID (
        p_id_curso      IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor_curso SYS_REFCURSOR;
BEGIN
OPEN v_cursor_curso FOR
SELECT
    ID_CURSO,
    NOMBRE,
    DESCRIPCION,
    PROFESOR_CEDULA
FROM CURSO
WHERE ID_CURSO = p_id_curso;

RETURN v_cursor_curso;
EXCEPTION
        WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20099, 'Error al obtener el curso por ID: ' || SQLERRM);
END OBTENER_CURSO_POR_ID;


    FUNCTION LISTAR_TODOS_LOS_CURSOS
    RETURN SYS_REFCURSOR
    IS
        v_cursor_cursos SYS_REFCURSOR;
BEGIN
OPEN v_cursor_cursos FOR
SELECT
    ID_CURSO ,
    NOMBRE ,
    DESCRIPCION ,
    PROFESOR_CEDULA
FROM CURSO
ORDER BY NOMBRE;

RETURN v_cursor_cursos;
EXCEPTION
        WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR(-20099, 'Error al listar todos los cursos: ' || SQLERRM);
END LISTAR_TODOS_LOS_CURSOS;


    FUNCTION LISTAR_CONTENIDOS_POR_CURSO_PARA_FILTRO (
        p_id_curso      IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor_contenido SYS_REFCURSOR;
BEGIN
OPEN v_cursor_contenido FOR
SELECT
    con.ID_CONTENIDO,
    con.NOMBRE AS NOMBRE_CONTENIDO,
    con.ID_UNIDAD,
    cur.ID_CURSO,
    cur.NOMBRE AS NOMBRE_CURSO
FROM CONTENIDO con
         JOIN UNIDAD uni ON con.ID_UNIDAD = uni.ID_UNIDAD
         JOIN CURSO cur ON uni.ID_CURSO = cur.ID_CURSO
WHERE uni.ID_CURSO = p_id_curso
ORDER BY con.NOMBRE; -- Opcional

RETURN v_cursor_contenido;
EXCEPTION
        WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20099, 'Error al listar contenidos por curso para filtro: ' || SQLERRM);
END LISTAR_CONTENIDOS_POR_CURSO_PARA_FILTRO;


    FUNCTION LISTAR_TODOS_LOS_CONTENIDOS
    RETURN SYS_REFCURSOR
    IS
        v_cursor_contenidos SYS_REFCURSOR;
BEGIN
OPEN v_cursor_contenidos FOR
SELECT
    ID_CONTENIDO ,
    NOMBRE AS NOMBRE_CONTENIDO,
    ID_UNIDAD
FROM CONTENIDO
ORDER BY NOMBRE;

RETURN v_cursor_contenidos;
EXCEPTION
        WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20099, 'Error al obtener todos los contenidos: ' || SQLERRM);
END LISTAR_TODOS_LOS_CONTENIDOS;


    FUNCTION LISTAR_HORARIOS_POR_CURSO (
        p_id_curso IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor_horarios SYS_REFCURSOR;
BEGIN
OPEN v_cursor_horarios FOR
SELECT
    hc.ID_HORARIO,
    hc.HORA_INICIO,
    hc.HORA_FIN,
    hc.DIA_SEMANA_ID,
    ds.NOMBRE AS NOMBRE_DIA_SEMANA,
    cur.NOMBRE AS NOMBRE_CURSO
FROM HORARIO_CLASE hc
         JOIN DETALLECURSOHORARIO detch ON hc.ID_HORARIO = detch.HORARIO_CLASE_ID
         JOIN DIA_SEMANA ds ON hc.DIA_SEMANA_ID = ds.ID
         JOIN CURSO cur ON detch.CURSO_ID = cur.ID_CURSO
WHERE detch.CURSO_ID = p_id_curso
ORDER BY ds.ID, hc.HORA_INICIO;

RETURN v_cursor_horarios;
EXCEPTION
        WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20099, 'Error al obtener los horarios por curso: ' || SQLERRM);
END LISTAR_HORARIOS_POR_CURSO;


    FUNCTION LISTAR_PLAN_ESTUDIO_CURSO (
        p_id_curso IN CURSO.ID_CURSO%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor_plan SYS_REFCURSOR;
BEGIN
OPEN v_cursor_plan FOR
SELECT
    uni.ID_UNIDAD,
    uni.NOMBRE AS NOMBRE_UNIDAD,
    con.ID_CONTENIDO,
    con.NOMBRE AS NOMBRE_CONTENIDO
FROM UNIDAD uni
         JOIN CONTENIDO con ON uni.ID_UNIDAD = con.ID_UNIDAD
WHERE uni.ID_CURSO = p_id_curso
ORDER BY uni.ID_UNIDAD, con.ID_CONTENIDO;

RETURN v_cursor_plan;
EXCEPTION
        WHEN OTHERS THEN
                RAISE_APPLICATION_ERROR(-20099, 'Error al obtener el plan de estudios: ' || SQLERRM);
END LISTAR_PLAN_ESTUDIO_CURSO;


END PAQUETE_GESTION_CURSOS;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_GESTION_EXAMENES
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_GESTION_EXAMENES" AS

  -- Procedimiento auxiliar (privado al paquete) para asignar una pregunta principal
  -- y toda su jerarquía de subpreguntas a la tabla DETALLEPREGUNTAEXAMEN.
  PROCEDURE ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE (
    p_id_examen IN DETALLEPREGUNTAEXAMEN.EXAMEN_ID%TYPE,
    p_id_pregunta_principal IN DETALLEPREGUNTAEXAMEN.PREGUNTA_ID%TYPE,
    p_peso_pregunta_principal IN DETALLEPREGUNTAEXAMEN.PORCENTAJE%TYPE -- Este es el PESO de la principal en el banco del examen
  ) IS
    CURSOR c_jerarquia_preguntas (cp_id_padre_actual PREGUNTA.ID_PREGUNTA%TYPE) IS
SELECT
    P.id_pregunta,
    P.porcentaje AS porcentaje_relativo_subpregunta -- Porcentaje de la subpregunta relativo a su padre
FROM Pregunta P
    START WITH P.id_pregunta = cp_id_padre_actual
CONNECT BY PRIOR P.id_pregunta = P.pregunta_padre;
BEGIN
FOR r_pregunta_en_jerarquia IN c_jerarquia_preguntas(p_id_pregunta_principal) LOOP
        DECLARE
v_count NUMBER;
            v_porcentaje_a_insertar DETALLEPREGUNTAEXAMEN.PORCENTAJE%TYPE;
BEGIN
SELECT COUNT(*) INTO v_count FROM DETALLEPREGUNTAEXAMEN
WHERE EXAMEN_ID = p_id_examen AND PREGUNTA_ID = r_pregunta_en_jerarquia.id_pregunta;

IF v_count = 0 THEN
                IF r_pregunta_en_jerarquia.id_pregunta = p_id_pregunta_principal THEN
                    -- Es la pregunta principal que se está añadiendo, usar el peso dado.
                    v_porcentaje_a_insertar := p_peso_pregunta_principal;
ELSE
                    -- Es una subpregunta, usar su porcentaje relativo al padre.
                    v_porcentaje_a_insertar := NVL(r_pregunta_en_jerarquia.porcentaje_relativo_subpregunta, 0);
END IF;

INSERT INTO DetallePreguntaExamen (examen_id, pregunta_id, porcentaje)
VALUES (p_id_examen, r_pregunta_en_jerarquia.id_pregunta, v_porcentaje_a_insertar);
END IF;
EXCEPTION
            WHEN DUP_VAL_ON_INDEX THEN
                DBMS_OUTPUT.PUT_LINE('Advertencia (ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE): Pregunta duplicada (' || r_pregunta_en_jerarquia.id_pregunta || ') en examen (' || p_id_examen || ').');
WHEN OTHERS THEN
                DBMS_OUTPUT.PUT_LINE('Error (ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE) para pregunta ' || r_pregunta_en_jerarquia.id_pregunta || ': ' || SQLERRM);
                RAISE;
END;
END LOOP;
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error general en ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE para principal ' || p_id_pregunta_principal || ': ' || SQLERRM);
        RAISE;
END ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE;


  -- Procedimiento auxiliar para añadir preguntas principales automáticamente al banco del examen (DETALLEPREGUNTAEXAMEN)
  -- hasta alcanzar una cantidad deseada o agotar candidatas.
  PROCEDURE COMPLETAR_BANCO_EXAMEN_AUTO (
    p_id_examen IN EXAMEN.ID%TYPE,
    p_cantidad_preguntas_principales_a_anadir IN NUMBER, -- Cuántas MÁS preguntas principales se necesitan
    p_curso_id_del_examen IN CURSO.ID_CURSO%TYPE,
    p_contenido_id_prioritario IN PREGUNTA.CONTENIDO_ID%TYPE DEFAULT NULL
  ) IS
    v_preguntas_anadidas PLS_INTEGER := 0;
    v_id_visibilidad_publica VISIBILIDAD.ID%TYPE;
    v_peso_por_defecto_pregunta PREGUNTA.PORCENTAJE%TYPE := 10; -- Un peso base si la pregunta no tiene uno

CURSOR c_candidatas (cp_curso_id CURSO.ID_CURSO%TYPE, cp_contenido_id PREGUNTA.CONTENIDO_ID%TYPE) IS
SELECT P.ID_PREGUNTA, NVL(P.PORCENTAJE, v_peso_por_defecto_pregunta) AS PESO_PREGUNTA
FROM PREGUNTA P
WHERE
    (
        (cp_contenido_id IS NOT NULL AND P.CONTENIDO_ID = cp_contenido_id) OR
        (cp_contenido_id IS NULL AND P.CONTENIDO_ID IN (
            SELECT C.ID_CONTENIDO FROM CONTENIDO C JOIN UNIDAD U ON C.ID_UNIDAD = U.ID_UNIDAD WHERE U.ID_CURSO = cp_curso_id
        ))
        )
  AND P.VISIBILIDAD_ID = v_id_visibilidad_publica
  AND P.PREGUNTA_PADRE IS NULL -- Solo preguntas principales
  AND P.ID_PREGUNTA NOT IN (SELECT DPE.PREGUNTA_ID FROM DETALLEPREGUNTAEXAMEN DPE WHERE DPE.EXAMEN_ID = p_id_examen) -- Que no estén ya en el examen
ORDER BY DBMS_RANDOM.VALUE;
BEGIN
    IF p_cantidad_preguntas_principales_a_anadir <= 0 THEN
        RETURN;
END IF;

BEGIN
SELECT ID INTO v_id_visibilidad_publica FROM VISIBILIDAD WHERE UPPER(NOMBRE) = 'PÚBLICA';
EXCEPTION
        WHEN NO_DATA_FOUND THEN RAISE_APPLICATION_ERROR(-20100, 'Visibilidad "Pública" no encontrada.');
END;

    -- Intento 1: Con contenido prioritario
    IF p_contenido_id_prioritario IS NOT NULL THEN
        FOR rec IN c_candidatas(p_curso_id_del_examen, p_contenido_id_prioritario) LOOP
            EXIT WHEN v_preguntas_anadidas >= p_cantidad_preguntas_principales_a_anadir;
            ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE(
                p_id_examen                   => p_id_examen,
                p_id_pregunta_principal       => rec.ID_PREGUNTA,
                p_peso_pregunta_principal     => rec.PESO_PREGUNTA
            );
            v_preguntas_anadidas := v_preguntas_anadidas + 1;
END LOOP;
END IF;

    -- Intento 2: Si aún faltan, buscar en todos los contenidos del curso
    IF v_preguntas_anadidas < p_cantidad_preguntas_principales_a_anadir THEN
        FOR rec IN c_candidatas(p_curso_id_del_examen, NULL) LOOP
            EXIT WHEN v_preguntas_anadidas >= p_cantidad_preguntas_principales_a_anadir;
             ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE(
                p_id_examen                   => p_id_examen,
                p_id_pregunta_principal       => rec.ID_PREGUNTA,
                p_peso_pregunta_principal     => rec.PESO_PREGUNTA
            );
            v_preguntas_anadidas := v_preguntas_anadidas + 1;
END LOOP;
END IF;

    IF v_preguntas_anadidas < p_cantidad_preguntas_principales_a_anadir THEN
      DBMS_OUTPUT.PUT_LINE('Advertencia (COMPLETAR_BANCO_EXAMEN_AUTO): No se pudieron añadir todas las ' ||
                           p_cantidad_preguntas_principales_a_anadir || ' preguntas solicitadas. Añadidas: ' || v_preguntas_anadidas);
      -- No se lanza error, se continúa con las que se pudieron añadir. La validación final estará en EQUILIBRAR_PRESENTACION.
END IF;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error en COMPLETAR_BANCO_EXAMEN_AUTO: ' || SQLERRM);
        RAISE;
END COMPLETAR_BANCO_EXAMEN_AUTO;


  PROCEDURE CREAR_EXAMEN_COMPLETO (
    p_nombre_examen IN EXAMEN.NOMBRE%TYPE,
    p_descripcion_examen IN EXAMEN.DESCRIPCION%TYPE,
    p_curso_id IN EXAMEN.CURSO_ID%TYPE,
    p_categoria_id IN EXAMEN.CATEGORIA_ID%TYPE,
    p_fecha_presentacion IN EXAMEN.FECHA%TYPE,
    p_hora_presentacion IN TIMESTAMP,
    p_tiempo_duracion IN EXAMEN.TIEMPO%TYPE,
    p_num_preguntas_estudiante IN EXAMEN.NUMERO_PREGUNTAS%TYPE, -- N que verá el estudiante
    p_calif_min_aprobatoria IN EXAMEN.CALIFICACION_MIN_APROBATORIA%TYPE,
    p_peso_curso IN EXAMEN.PESO_CURSO%TYPE,
    p_creacion_id IN EXAMEN.CREACION_ID%TYPE,
    p_cedula_profesor IN PROFESOR.CEDULA%TYPE,
    p_preguntas_detalle IN T_ARRAY_PREGUNTA_EXAMEN_TYPE, -- Preguntas principales con sus PESOS para el banco
    p_id_examen_out OUT EXAMEN.ID%TYPE
  ) IS
    v_new_examen_id EXAMEN.ID%TYPE;
    v_contenido_id_prioritario PREGUNTA.CONTENIDO_ID%TYPE;
    v_num_preg_manuales_principales NUMBER;
    v_preguntas_a_completar_auto NUMBER;
    ID_CREACION_MANUAL CONSTANT NUMBER := 1;
    ID_CREACION_AUTOMATICA CONSTANT NUMBER := 2;
BEGIN
SELECT SEQ_EXAMEN_ID.NEXTVAL INTO v_new_examen_id FROM DUAL;
p_id_examen_out := v_new_examen_id;

INSERT INTO EXAMEN (
    ID, NOMBRE, DESCRIPCION, CURSO_ID, CATEGORIA_ID, FECHA, HORA,
    TIEMPO, NUMERO_PREGUNTAS, CALIFICACION_MIN_APROBATORIA, PESO_CURSO, CREACION_ID
) VALUES (
             v_new_examen_id, p_nombre_examen, p_descripcion_examen, p_curso_id, p_categoria_id,
             p_fecha_presentacion, p_hora_presentacion,
             p_tiempo_duracion, p_num_preguntas_estudiante, p_calif_min_aprobatoria, p_peso_curso, p_creacion_id
         );

IF p_num_preguntas_estudiante <= 0 THEN
        RAISE_APPLICATION_ERROR(-20110, 'El número de preguntas para el estudiante debe ser mayor que cero.');
END IF;

    -- Determinar contenido prioritario para selección automática (si es necesaria)
BEGIN
SELECT MIN(C.ID_CONTENIDO) INTO v_contenido_id_prioritario
FROM CONTENIDO C JOIN UNIDAD U ON C.ID_UNIDAD = U.ID_UNIDAD
WHERE U.ID_CURSO = p_curso_id;
EXCEPTION
        WHEN NO_DATA_FOUND THEN v_contenido_id_prioritario := NULL;
END;

    IF p_creacion_id = ID_CREACION_MANUAL THEN
        v_num_preg_manuales_principales := 0;
        IF p_preguntas_detalle IS NOT NULL AND p_preguntas_detalle.COUNT > 0 THEN
            FOR i IN 1..p_preguntas_detalle.COUNT LOOP
                -- Asumimos que p_preguntas_detalle(i).id_pregunta es una pregunta principal
                ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE(
                    p_id_examen                   => v_new_examen_id,
                    p_id_pregunta_principal       => p_preguntas_detalle(i).id_pregunta,
                    p_peso_pregunta_principal     => p_preguntas_detalle(i).porcentaje -- Este es el PESO en el banco
                );
                v_num_preg_manuales_principales := v_num_preg_manuales_principales + 1;
END LOOP;
END IF;

        IF v_num_preg_manuales_principales < p_num_preguntas_estudiante THEN
            v_preguntas_a_completar_auto := p_num_preguntas_estudiante - v_num_preg_manuales_principales;
            DBMS_OUTPUT.PUT_LINE('Creación manual: Faltan ' || v_preguntas_a_completar_auto || ' preguntas principales. Completando automáticamente...');
            COMPLETAR_BANCO_EXAMEN_AUTO(
                p_id_examen                               => v_new_examen_id,
                p_cantidad_preguntas_principales_a_anadir => v_preguntas_a_completar_auto,
                p_curso_id_del_examen                     => p_curso_id,
                p_contenido_id_prioritario                => v_contenido_id_prioritario
            );
END IF;

    ELSIF p_creacion_id = ID_CREACION_AUTOMATICA THEN
        COMPLETAR_BANCO_EXAMEN_AUTO(
            p_id_examen                               => v_new_examen_id,
            p_cantidad_preguntas_principales_a_anadir => p_num_preguntas_estudiante,
            p_curso_id_del_examen                     => p_curso_id,
            p_contenido_id_prioritario                => v_contenido_id_prioritario
        );
END IF;

    -- Validar que el banco del examen (DETALLEPREGUNTAEXAMEN) tenga suficientes preguntas principales
    DECLARE
v_total_principales_en_banco NUMBER;
BEGIN
SELECT COUNT(DISTINCT P.ID_PREGUNTA) INTO v_total_principales_en_banco
FROM DETALLEPREGUNTAEXAMEN DPE
         JOIN PREGUNTA P ON DPE.PREGUNTA_ID = P.ID_PREGUNTA
WHERE DPE.EXAMEN_ID = v_new_examen_id AND P.PREGUNTA_PADRE IS NULL;

IF v_total_principales_en_banco < p_num_preguntas_estudiante THEN
             RAISE_APPLICATION_ERROR(-20111, 'No se pudieron reunir suficientes preguntas principales (' || v_total_principales_en_banco ||
                                     ') para el examen. Se requieren ' || p_num_preguntas_estudiante || '. Revise el banco de preguntas del curso.');
END IF;
END;

COMMIT;
EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Error en CREAR_EXAMEN_COMPLETO: ' || SQLERRM);
      RAISE;
END CREAR_EXAMEN_COMPLETO;


  PROCEDURE ACTUALIZAR_EXAMEN_COMPLETO (
    p_id_examen IN EXAMEN.ID%TYPE,
    p_nombre_examen IN EXAMEN.NOMBRE%TYPE,
    p_descripcion_examen IN EXAMEN.DESCRIPCION%TYPE,
    p_curso_id IN EXAMEN.CURSO_ID%TYPE,
    p_categoria_id IN EXAMEN.CATEGORIA_ID%TYPE,
    p_fecha_presentacion IN EXAMEN.FECHA%TYPE,
    p_hora_presentacion IN TIMESTAMP,
    p_tiempo_duracion IN EXAMEN.TIEMPO%TYPE,
    p_num_preguntas_estudiante IN EXAMEN.NUMERO_PREGUNTAS%TYPE,
    p_calif_min_aprobatoria IN EXAMEN.CALIFICACION_MIN_APROBATORIA%TYPE,
    p_peso_curso IN EXAMEN.PESO_CURSO%TYPE,
    p_creacion_id IN EXAMEN.CREACION_ID%TYPE,
    p_preguntas_detalle IN T_ARRAY_PREGUNTA_EXAMEN_TYPE
  ) IS
    v_contenido_id_prioritario PREGUNTA.CONTENIDO_ID%TYPE;
    v_num_preg_manuales_principales NUMBER;
    v_preguntas_a_completar_auto NUMBER;
    ID_CREACION_MANUAL CONSTANT NUMBER := 1;
    ID_CREACION_AUTOMATICA CONSTANT NUMBER := 2;
BEGIN
UPDATE EXAMEN SET
                  NOMBRE = p_nombre_examen, DESCRIPCION = p_descripcion_examen, CURSO_ID = p_curso_id,
                  CATEGORIA_ID = p_categoria_id, FECHA = p_fecha_presentacion, HORA = p_hora_presentacion,
                  TIEMPO = p_tiempo_duracion, NUMERO_PREGUNTAS = p_num_preguntas_estudiante,
                  CALIFICACION_MIN_APROBATORIA = p_calif_min_aprobatoria, PESO_CURSO = p_peso_curso,
                  CREACION_ID = p_creacion_id
WHERE ID = p_id_examen;

IF SQL%NOTFOUND THEN
        RAISE_APPLICATION_ERROR(-20104, 'Examen ID ' || p_id_examen || ' no encontrado para actualizar.');
END IF;

DELETE FROM DETALLEPREGUNTAEXAMEN WHERE EXAMEN_ID = p_id_examen; -- Limpiar detalles antiguos

IF p_num_preguntas_estudiante <= 0 THEN
        RAISE_APPLICATION_ERROR(-20110, 'El número de preguntas para el estudiante debe ser mayor que cero.');
END IF;

BEGIN
SELECT MIN(C.ID_CONTENIDO) INTO v_contenido_id_prioritario
FROM CONTENIDO C JOIN UNIDAD U ON C.ID_UNIDAD = U.ID_UNIDAD WHERE U.ID_CURSO = p_curso_id;
EXCEPTION WHEN NO_DATA_FOUND THEN v_contenido_id_prioritario := NULL; END;

    IF p_creacion_id = ID_CREACION_MANUAL THEN
        v_num_preg_manuales_principales := 0;
        IF p_preguntas_detalle IS NOT NULL AND p_preguntas_detalle.COUNT > 0 THEN
            FOR i IN 1..p_preguntas_detalle.COUNT LOOP
                ASIGNAR_PREGUNTA_Y_SUBPREGUNTAS_A_DETALLE(
                    p_id_examen                   => p_id_examen,
                    p_id_pregunta_principal       => p_preguntas_detalle(i).id_pregunta,
                    p_peso_pregunta_principal     => p_preguntas_detalle(i).porcentaje
                );
                v_num_preg_manuales_principales := v_num_preg_manuales_principales + 1;
END LOOP;
END IF;

        IF v_num_preg_manuales_principales < p_num_preguntas_estudiante THEN
            v_preguntas_a_completar_auto := p_num_preguntas_estudiante - v_num_preg_manuales_principales;
            COMPLETAR_BANCO_EXAMEN_AUTO(
                p_id_examen                               => p_id_examen,
                p_cantidad_preguntas_principales_a_anadir => v_preguntas_a_completar_auto,
                p_curso_id_del_examen                     => p_curso_id,
                p_contenido_id_prioritario                => v_contenido_id_prioritario
            );
END IF;
    ELSIF p_creacion_id = ID_CREACION_AUTOMATICA THEN
        COMPLETAR_BANCO_EXAMEN_AUTO(
            p_id_examen                               => p_id_examen,
            p_cantidad_preguntas_principales_a_anadir => p_num_preguntas_estudiante,
            p_curso_id_del_examen                     => p_curso_id,
            p_contenido_id_prioritario                => v_contenido_id_prioritario
        );
END IF;

    DECLARE
v_total_principales_en_banco NUMBER;
BEGIN
SELECT COUNT(DISTINCT P.ID_PREGUNTA) INTO v_total_principales_en_banco
FROM DETALLEPREGUNTAEXAMEN DPE
         JOIN PREGUNTA P ON DPE.PREGUNTA_ID = P.ID_PREGUNTA
WHERE DPE.EXAMEN_ID = p_id_examen AND P.PREGUNTA_PADRE IS NULL;

IF v_total_principales_en_banco < p_num_preguntas_estudiante THEN
             RAISE_APPLICATION_ERROR(-20111, 'No se pudieron reunir suficientes preguntas principales (' || v_total_principales_en_banco ||
                                     ') para el examen. Se requieren ' || p_num_preguntas_estudiante || '. Revise el banco de preguntas del curso.');
END IF;
END;
COMMIT;
EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Error en ACTUALIZAR_EXAMEN_COMPLETO: ' || SQLERRM);
      RAISE;
END ACTUALIZAR_EXAMEN_COMPLETO;

  -- Las funciones OBTENER_EXAMEN_POR_ID, LISTAR_EXAMENES_POR_PROFESOR,
  -- LISTAR_EXAMENES_DISPONIBLES_EST, ELIMINAR_EXAMEN_POR_ID,
  -- y OBTENER_PREGUNTAS_EXAMEN_DTO se mantienen como estaban en tu versión anterior,
  -- ya que su lógica principal no se ve afectada directamente por la nueva estrategia de
  -- "número de preguntas para estudiante", excepto que OBTENER_PREGUNTAS_EXAMEN_DTO
  -- ya devolvía solo principales, lo cual es consistente.

  FUNCTION OBTENER_EXAMEN_POR_ID (
    p_id_examen IN EXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR IS
    v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT ID, NOMBRE, DESCRIPCION, CURSO_ID, CATEGORIA_ID, FECHA, HORA,
       TIEMPO, NUMERO_PREGUNTAS, CALIFICACION_MIN_APROBATORIA, PESO_CURSO, CREACION_ID
FROM EXAMEN
WHERE ID = p_id_examen;
RETURN v_cursor;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error en OBTENER_EXAMEN_POR_ID: ' || SQLERRM); RAISE;
END OBTENER_EXAMEN_POR_ID;

  FUNCTION LISTAR_EXAMENES_POR_PROFESOR (
    p_cedula_profesor IN PROFESOR.CEDULA%TYPE
  ) RETURN SYS_REFCURSOR IS
    v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT E.ID AS ID_EXAMEN, E.NOMBRE AS NOMBRE_EXAMEN, E.DESCRIPCION AS DESCRIPCION_EXAMEN,
       C.ID_CURSO AS ID_CURSO, CAT.ID AS ID_CATEGORIA,
       E.FECHA AS FECHA_EXAMEN, E.HORA AS HORA_EXAMEN, E.TIEMPO AS TIEMPO_EXAMEN, E.NUMERO_PREGUNTAS AS NUM_PREGUNTAS
FROM EXAMEN E
         JOIN CURSO C ON E.CURSO_ID = C.ID_CURSO
         JOIN CATEGORIA CAT ON E.CATEGORIA_ID = CAT.ID
WHERE C.PROFESOR_CEDULA = p_cedula_profesor
ORDER BY E.FECHA DESC, E.HORA DESC;
RETURN v_cursor;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error en LISTAR_EXAMENES_POR_PROFESOR: ' || SQLERRM); RAISE;
END LISTAR_EXAMENES_POR_PROFESOR;

  FUNCTION LISTAR_EXAMENES_DISPONIBLES_EST (
    p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE,
    p_id_curso IN CURSO.ID_CURSO%TYPE DEFAULT NULL
  ) RETURN SYS_REFCURSOR IS
    v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT E.ID, E.NOMBRE, E.DESCRIPCION, CR.NOMBRE AS NOMBRE_CURSO,
       E.FECHA, E.HORA, E.TIEMPO, E.NUMERO_PREGUNTAS,
       E.CURSO_ID, E.CATEGORIA_ID, E.CREACION_ID,
       E.CALIFICACION_MIN_APROBATORIA, E.PESO_CURSO
FROM EXAMEN E
         JOIN CURSO CR ON E.CURSO_ID = CR.ID_CURSO
         JOIN DETALLEESTUDIANTECURSO DEC ON E.CURSO_ID = DEC.CURSO_ID
WHERE DEC.ESTUDIANTE_CEDULA = p_cedula_estudiante
  AND (p_id_curso IS NULL OR E.CURSO_ID = p_id_curso)
  AND E.HORA <= SYSTIMESTAMP
  AND (E.HORA + NUMTODSINTERVAL(E.TIEMPO, 'MINUTE')) >= SYSTIMESTAMP
  AND NOT EXISTS (SELECT 1
    FROM PRESENTACIONEXAMEN PE
    WHERE PE.EXAMEN_ID = E.ID
  AND PE.ESTUDIANTE_CEDULA = p_cedula_estudiante
  AND PE.HORA_FIN IS NOT NULL)
ORDER BY E.FECHA ASC, E.HORA ASC;
RETURN v_cursor;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error en LISTAR_EXAMENES_DISPONIBLES_EST: ' || SQLERRM); RAISE;
END LISTAR_EXAMENES_DISPONIBLES_EST;

  PROCEDURE ELIMINAR_EXAMEN_POR_ID (
    p_id_examen IN EXAMEN.ID%TYPE
  ) IS
    v_count_presentaciones NUMBER;
BEGIN
SELECT COUNT(*) INTO v_count_presentaciones
FROM PRESENTACIONEXAMEN
WHERE EXAMEN_ID = p_id_examen;

IF v_count_presentaciones > 0 THEN
        RAISE_APPLICATION_ERROR(-20105, 'El examen ID ' || p_id_examen || ' tiene ' || v_count_presentaciones || ' presentaciones y no puede ser eliminado.');
END IF;

DELETE FROM DETALLEPREGUNTAEXAMEN WHERE EXAMEN_ID = p_id_examen;
DELETE FROM EXAMEN WHERE ID = p_id_examen;

COMMIT;
EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK;
      DBMS_OUTPUT.PUT_LINE('Error en ELIMINAR_EXAMEN_POR_ID: ' || SQLERRM);
      RAISE;
END ELIMINAR_EXAMEN_POR_ID;

  FUNCTION OBTENER_PREGUNTAS_EXAMEN_DTO (
    p_id_examen IN EXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR IS
    v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    DPE.PREGUNTA_ID AS ID_PREGUNTA,
    P.TEXTO AS TEXTO_PREGUNTA,
    TP.NOMBRE AS NOMBRE_TIPO_PREGUNTA,
    DPE.PORCENTAJE -- Este es el PESO de la pregunta principal en el banco del examen
FROM DETALLEPREGUNTAEXAMEN DPE
         JOIN PREGUNTA P ON DPE.PREGUNTA_ID = P.ID_PREGUNTA
         LEFT JOIN TIPOPREGUNTA TP ON P.TIPO_PREGUNTA_ID = TP.ID
WHERE DPE.EXAMEN_ID = p_id_examen
  AND P.PREGUNTA_PADRE IS NULL
ORDER BY P.ID_PREGUNTA;
RETURN v_cursor;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error en OBTENER_PREGUNTAS_EXAMEN_DTO: ' || SQLERRM); RAISE;
END OBTENER_PREGUNTAS_EXAMEN_DTO;

END PAQUETE_GESTION_EXAMENES;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_GESTION_PREGUNTAS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_GESTION_PREGUNTAS" AS

    -- Constantes para nombres de tipos de pregunta (para lógica interna)
    C_TIPO_SELECCION_MULTIPLE CONSTANT VARCHAR2(50) := 'Selección Múltiple';
    C_TIPO_VERDADERO_FALSO    CONSTANT VARCHAR2(50) := 'Verdadero/Falso';
    C_TIPO_ORDENAR_CONCEPTOS  CONSTANT VARCHAR2(50) := 'Ordenar conceptos';
    C_TIPO_RELACIONAR_CONCEPTOS CONSTANT VARCHAR2(50) := 'Relacionar conceptos';
    C_TIPO_SELECCION_UNICA    CONSTANT VARCHAR2(50) := 'Seleccion Unica';

    ------------------------------------------------------------------------------------
    PROCEDURE CREAR_PREGUNTA_COMPLETA(
        p_texto_pregunta            IN PREGUNTA.TEXTO%TYPE,
        p_tiempo_estimado           IN PREGUNTA.TIEMPO_ESTIMADO%TYPE,
        p_porcentaje_defecto        IN PREGUNTA.PORCENTAJE%TYPE,
        p_tipo_pregunta_id          IN PREGUNTA.TIPO_PREGUNTA_ID%TYPE,
        p_visibilidad_id            IN PREGUNTA.VISIBILIDAD_ID%TYPE,
        p_nivel_id                  IN PREGUNTA.NIVEL_ID%TYPE,
        p_pregunta_padre_id         IN PREGUNTA.PREGUNTA_PADRE%TYPE,
        p_contenido_id              IN PREGUNTA.CONTENIDO_ID%TYPE,
        p_cedula_profesor_creador   IN PREGUNTA.CREADOR_CEDULA_PROFESOR%TYPE,
        p_opciones                  IN T_ARRAY_OPCION_PREGUNTA_TYPE,
        p_id_pregunta_out           OUT PREGUNTA.ID_PREGUNTA%TYPE
    ) AS
        v_nombre_tipo_pregunta TIPOPREGUNTA.NOMBRE%TYPE;
        v_opcion_id_seq NUMBER;
        v_nombre_profesor PROFESOR.NOMBRE%TYPE;
BEGIN
SELECT NVL(MAX(ID_PREGUNTA),0) + 1 INTO p_id_pregunta_out FROM PREGUNTA;

BEGIN
SELECT NOMBRE INTO v_nombre_profesor FROM PROFESOR WHERE CEDULA = p_cedula_profesor_creador;
EXCEPTION
            WHEN NO_DATA_FOUND THEN
                v_nombre_profesor := 'Profesor ' || p_cedula_profesor_creador; -- Fallback
END;

INSERT INTO PREGUNTA (
    ID_PREGUNTA, TEXTO, TIEMPO_ESTIMADO, PORCENTAJE, TIPO_PREGUNTA_ID,
    VISIBILIDAD_ID, NIVEL_ID, PREGUNTA_PADRE, CONTENIDO_ID,
    CREADOR_CEDULA_PROFESOR, FECHA_CREACION, FECHA_MODIFICACION, USUARIO_MODIFICACION
) VALUES (
             p_id_pregunta_out, p_texto_pregunta, p_tiempo_estimado, p_porcentaje_defecto, p_tipo_pregunta_id,
             p_visibilidad_id, p_nivel_id, p_pregunta_padre_id, p_contenido_id,
             p_cedula_profesor_creador, SYSDATE, NULL, v_nombre_profesor
         );

BEGIN
SELECT NOMBRE INTO v_nombre_tipo_pregunta FROM TIPOPREGUNTA WHERE ID = p_tipo_pregunta_id;
EXCEPTION
            WHEN NO_DATA_FOUND THEN
                RAISE_APPLICATION_ERROR(-20001, 'Tipo de pregunta ID ' || p_tipo_pregunta_id || ' no encontrado.');
END;

        IF p_opciones IS NOT NULL AND p_opciones.COUNT > 0 THEN
            FOR i IN 1..p_opciones.COUNT LOOP
SELECT NVL(MAX(ID),0) + 1 INTO v_opcion_id_seq FROM OPCIONPREGUNTA;

IF v_nombre_tipo_pregunta = C_TIPO_ORDENAR_CONCEPTOS THEN
                    INSERT INTO OPCIONPREGUNTA (ID, RESPUESTA, ES_CORRECTA, PREGUNTA_ID, SECUENCIA)
                    VALUES (v_opcion_id_seq, p_opciones(i).TEXTO_OPCION, p_opciones(i).ES_CORRECTA, p_id_pregunta_out, i);
ELSE
                    INSERT INTO OPCIONPREGUNTA (ID, RESPUESTA, ES_CORRECTA, PREGUNTA_ID, SECUENCIA)
                    VALUES (v_opcion_id_seq, p_opciones(i).TEXTO_OPCION, p_opciones(i).ES_CORRECTA, p_id_pregunta_out, NULL);
END IF;
END LOOP;
END IF;

COMMIT;
EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE;
END CREAR_PREGUNTA_COMPLETA;

    ------------------------------------------------------------------------------------
    PROCEDURE ACTUALIZAR_PREGUNTA_COMPLETA(
        p_id_pregunta               IN PREGUNTA.ID_PREGUNTA%TYPE,
        p_texto_pregunta            IN PREGUNTA.TEXTO%TYPE,
        p_tiempo_estimado           IN PREGUNTA.TIEMPO_ESTIMADO%TYPE,
        p_porcentaje_defecto        IN PREGUNTA.PORCENTAJE%TYPE,
        p_tipo_pregunta_id          IN PREGUNTA.TIPO_PREGUNTA_ID%TYPE,
        p_visibilidad_id            IN PREGUNTA.VISIBILIDAD_ID%TYPE,
        p_nivel_id                  IN PREGUNTA.NIVEL_ID%TYPE,
        p_pregunta_padre_id         IN PREGUNTA.PREGUNTA_PADRE%TYPE,
        p_contenido_id              IN PREGUNTA.CONTENIDO_ID%TYPE,
        p_cedula_profesor_creador   IN PREGUNTA.CREADOR_CEDULA_PROFESOR%TYPE, -- Se mantiene el creador original
        p_opciones                  IN T_ARRAY_OPCION_PREGUNTA_TYPE,
        p_usuario_modificacion      IN PREGUNTA.USUARIO_MODIFICACION%TYPE
    ) AS
        v_nombre_tipo_pregunta TIPOPREGUNTA.NOMBRE%TYPE;
        v_opcion_id_seq NUMBER;
BEGIN
UPDATE PREGUNTA
SET
    TEXTO = p_texto_pregunta,
    TIEMPO_ESTIMADO = p_tiempo_estimado,
    PORCENTAJE = p_porcentaje_defecto,
    TIPO_PREGUNTA_ID = p_tipo_pregunta_id,
    VISIBILIDAD_ID = p_visibilidad_id,
    NIVEL_ID = p_nivel_id,
    PREGUNTA_PADRE = p_pregunta_padre_id,
    CONTENIDO_ID = p_contenido_id,
    FECHA_MODIFICACION = SYSDATE,
    USUARIO_MODIFICACION = p_usuario_modificacion
WHERE ID_PREGUNTA = p_id_pregunta;

IF SQL%NOTFOUND THEN
            RAISE_APPLICATION_ERROR(-20002, 'Pregunta ID ' || p_id_pregunta || ' no encontrada para actualizar.');
END IF;

DELETE FROM OPCIONPREGUNTA WHERE PREGUNTA_ID = p_id_pregunta;

BEGIN
SELECT NOMBRE INTO v_nombre_tipo_pregunta FROM TIPOPREGUNTA WHERE ID = p_tipo_pregunta_id;
EXCEPTION
            WHEN NO_DATA_FOUND THEN
                RAISE_APPLICATION_ERROR(-20001, 'Tipo de pregunta ID ' || p_tipo_pregunta_id || ' no encontrado.');
END;

        IF p_opciones IS NOT NULL AND p_opciones.COUNT > 0 THEN
            FOR i IN 1..p_opciones.COUNT LOOP
SELECT NVL(MAX(ID),0) + 1 INTO v_opcion_id_seq FROM OPCIONPREGUNTA;
IF v_nombre_tipo_pregunta = C_TIPO_ORDENAR_CONCEPTOS THEN
                    INSERT INTO OPCIONPREGUNTA (ID, RESPUESTA, ES_CORRECTA, PREGUNTA_ID, SECUENCIA)
                    VALUES (v_opcion_id_seq, p_opciones(i).TEXTO_OPCION, p_opciones(i).ES_CORRECTA, p_id_pregunta, i);
ELSE
                    INSERT INTO OPCIONPREGUNTA (ID, RESPUESTA, ES_CORRECTA, PREGUNTA_ID, SECUENCIA)
                    VALUES (v_opcion_id_seq, p_opciones(i).TEXTO_OPCION, p_opciones(i).ES_CORRECTA, p_id_pregunta, NULL);
END IF;
END LOOP;
END IF;

COMMIT;
EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE;
END ACTUALIZAR_PREGUNTA_COMPLETA;

    ------------------------------------------------------------------------------------
    PROCEDURE ELIMINAR_PREGUNTA_POR_ID(
        p_id_pregunta               IN PREGUNTA.ID_PREGUNTA%TYPE,
        p_filas_afectadas_out       OUT NUMBER
    ) AS
        v_count_uso NUMBER;
BEGIN
        p_filas_afectadas_out := 0;

SELECT COUNT(*)
INTO v_count_uso
FROM DETALLEPREGUNTAEXAMEN
WHERE PREGUNTA_ID = p_id_pregunta;

IF v_count_uso > 0 THEN
            RAISE_APPLICATION_ERROR(-20003, 'La pregunta ID ' || p_id_pregunta || ' está actualmente en uso en ' || v_count_uso || ' examen(es) y no puede ser eliminada.');
END IF;

SELECT COUNT(*)
INTO v_count_uso
FROM PREGUNTA
WHERE PREGUNTA_PADRE = p_id_pregunta;

IF v_count_uso > 0 THEN
             RAISE_APPLICATION_ERROR(-20004, 'La pregunta ID ' || p_id_pregunta || ' es padre de ' || v_count_uso || ' subpregunta(s) y no puede ser eliminada directamente. Elimine primero las subpreguntas.');
END IF;

DELETE FROM OPCIONPREGUNTA WHERE PREGUNTA_ID = p_id_pregunta;
p_filas_afectadas_out := p_filas_afectadas_out + SQL%ROWCOUNT;

DELETE FROM PREGUNTA WHERE ID_PREGUNTA = p_id_pregunta;
p_filas_afectadas_out := p_filas_afectadas_out + SQL%ROWCOUNT;

        IF p_filas_afectadas_out = 0 AND SQL%ROWCOUNT = 0 THEN
             RAISE_APPLICATION_ERROR(-20005, 'Pregunta ID ' || p_id_pregunta || ' no encontrada para eliminar.');
END IF;

COMMIT;
EXCEPTION
        WHEN OTHERS THEN
            ROLLBACK;
            p_filas_afectadas_out := -1;
            RAISE;
END ELIMINAR_PREGUNTA_POR_ID;

    ------------------------------------------------------------------------------------
    FUNCTION BUSCAR_PREGUNTAS_BANCO_DTO(
        p_cedula_profesor   IN PROFESOR.CEDULA%TYPE,
        p_texto_busqueda    IN VARCHAR2 DEFAULT NULL,
        p_tipo_pregunta_id  IN NUMBER DEFAULT NULL,
        p_contenido_id      IN NUMBER DEFAULT NULL,
        p_nivel_id          IN NUMBER DEFAULT NULL,
        p_id_curso_contexto IN CURSO.ID_CURSO%TYPE DEFAULT NULL -- Usado para filtrar por temas de un curso específico
    ) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
        v_id_visibilidad_publica VISIBILIDAD.ID%TYPE;
BEGIN
BEGIN
SELECT ID INTO v_id_visibilidad_publica FROM VISIBILIDAD WHERE UPPER(NOMBRE) = 'PÚBLICA';
EXCEPTION
            WHEN NO_DATA_FOUND THEN
                v_id_visibilidad_publica := -1;
END;

OPEN v_cursor FOR
SELECT
    P.ID_PREGUNTA,
    P.TEXTO AS TEXTO_PREGUNTA,
    TO_CHAR(P.TIEMPO_ESTIMADO) || ' min' AS TIEMPO_ESTIMADO, -- Concatenar ' min'
    P.PORCENTAJE AS PORCENTAJE_DEFECTO, -- Este es el porcentaje relativo al padre si es subpregunta
    TP.NOMBRE AS NOMBRE_TIPO_PREGUNTA,
    C.NOMBRE AS NOMBRE_CONTENIDO,
    N.NOMBRE AS NOMBRE_NIVEL,
    V.NOMBRE AS NOMBRE_VISIBILIDAD,
    P.PREGUNTA_PADRE -- Devolver el ID de la pregunta padre
FROM PREGUNTA P
         LEFT JOIN TIPOPREGUNTA TP ON P.TIPO_PREGUNTA_ID = TP.ID
         LEFT JOIN CONTENIDO C ON P.CONTENIDO_ID = C.ID_CONTENIDO
         LEFT JOIN NIVEL N ON P.NIVEL_ID = N.ID
         LEFT JOIN VISIBILIDAD V ON P.VISIBILIDAD_ID = V.ID
         LEFT JOIN UNIDAD U ON C.ID_UNIDAD = U.ID_UNIDAD
WHERE
    (P.CREADOR_CEDULA_PROFESOR = p_cedula_profesor OR P.VISIBILIDAD_ID = v_id_visibilidad_publica)
  AND (p_texto_busqueda IS NULL OR UPPER(P.TEXTO) LIKE '%' || UPPER(p_texto_busqueda) || '%')
  AND (p_tipo_pregunta_id IS NULL OR P.TIPO_PREGUNTA_ID = p_tipo_pregunta_id)
  AND (p_nivel_id IS NULL OR P.NIVEL_ID = p_nivel_id)
  AND (
    (p_contenido_id IS NOT NULL AND P.CONTENIDO_ID = p_contenido_id)
        OR
    (p_contenido_id IS NULL AND p_id_curso_contexto IS NOT NULL AND U.ID_CURSO = p_id_curso_contexto)
        OR
    (p_contenido_id IS NULL AND p_id_curso_contexto IS NULL)
    )
ORDER BY P.ID_PREGUNTA DESC;
RETURN v_cursor;
END BUSCAR_PREGUNTAS_BANCO_DTO;
    ------------------------------------------------------------------------------------
    FUNCTION OBTENER_PREGUNTA_POR_ID_COMPLETA(
        p_id_pregunta IN PREGUNTA.ID_PREGUNTA%TYPE
    ) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID_PREGUNTA, TEXTO, TIEMPO_ESTIMADO, PORCENTAJE, TIPO_PREGUNTA_ID,
    VISIBILIDAD_ID, NIVEL_ID, PREGUNTA_PADRE, CONTENIDO_ID,
    CREADOR_CEDULA_PROFESOR, FECHA_CREACION, FECHA_MODIFICACION, USUARIO_MODIFICACION
FROM PREGUNTA
WHERE ID_PREGUNTA = p_id_pregunta;
RETURN v_cursor;
END OBTENER_PREGUNTA_POR_ID_COMPLETA;

    ------------------------------------------------------------------------------------
    FUNCTION OBTENER_OPCIONES_POR_PREGUNTA_ID(
        p_id_pregunta IN OPCIONPREGUNTA.PREGUNTA_ID%TYPE
    ) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT
    ID, RESPUESTA, ES_CORRECTA, PREGUNTA_ID, SECUENCIA
FROM OPCIONPREGUNTA
WHERE PREGUNTA_ID = p_id_pregunta
ORDER BY SECUENCIA ASC NULLS LAST, ID ASC;
RETURN v_cursor;
END OBTENER_OPCIONES_POR_PREGUNTA_ID;

    FUNCTION LISTAR_PREGUNTAS_CANDIDATAS_PADRE(
        p_cedula_profesor   IN PROFESOR.CEDULA%TYPE,
        p_id_pregunta_excluir IN PREGUNTA.ID_PREGUNTA%TYPE DEFAULT NULL
    ) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
        v_id_visibilidad_publica VISIBILIDAD.ID%TYPE;
BEGIN
BEGIN
SELECT ID INTO v_id_visibilidad_publica FROM VISIBILIDAD WHERE UPPER(NOMBRE) = 'PÚBLICA';
EXCEPTION
            WHEN NO_DATA_FOUND THEN
                v_id_visibilidad_publica := -1;
END;

OPEN v_cursor FOR
SELECT
    P.ID_PREGUNTA,
    P.TEXTO
FROM PREGUNTA P
WHERE
    P.PREGUNTA_PADRE IS NULL
  AND (P.CREADOR_CEDULA_PROFESOR = p_cedula_profesor OR P.VISIBILIDAD_ID = v_id_visibilidad_publica)
  AND (p_id_pregunta_excluir IS NULL OR P.ID_PREGUNTA != p_id_pregunta_excluir)
-- Adicionalmente, una pregunta no puede ser padre de sí misma o de sus ancestros (implícito por PREGUNTA_PADRE IS NULL aquí)
-- y una pregunta que ya es subpregunta no puede ser padre.
ORDER BY P.ID_PREGUNTA DESC;
RETURN v_cursor;
END LISTAR_PREGUNTAS_CANDIDATAS_PADRE;

    FUNCTION OBTENER_SUBPREGUNTAS_CON_PORCENTAJE(
        p_id_pregunta_padre IN PREGUNTA.ID_PREGUNTA%TYPE
    ) RETURN SYS_REFCURSOR AS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT ID_PREGUNTA, TEXTO, PORCENTAJE -- PORCENTAJE es el peso relativo al padre
FROM PREGUNTA
WHERE PREGUNTA_PADRE = p_id_pregunta_padre
ORDER BY ID_PREGUNTA; -- O por algún otro criterio si es necesario
RETURN v_cursor;
END OBTENER_SUBPREGUNTAS_CON_PORCENTAJE;


END PAQUETE_GESTION_PREGUNTAS;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_PRESENTACION_EXAMEN
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_PRESENTACION_EXAMEN" AS

  C_TIPO_SELECCION_MULTIPLE_VARIAS_CORRECTAS CONSTANT VARCHAR2(50) := 'Selección múltiple';
  C_TIPO_VERDADERO_FALSO    CONSTANT VARCHAR2(50) := 'Verdadero/Falso';
  C_TIPO_ORDENAR_CONCEPTOS  CONSTANT VARCHAR2(50) := 'Ordenar conceptos';
  C_TIPO_RELACIONAR_CONCEPTOS CONSTANT VARCHAR2(50) := 'Relacionar conceptos';
  C_TIPO_SELECCION_UNICA_UNA_CORRECTA CONSTANT VARCHAR2(50) := 'Seleccion Unica';

  ------------------------------------------------------------------------------------
   PROCEDURE EQUILIBRAR_PRESENTACION_EXAMEN (
      p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
    ) IS
      v_id_examen EXAMEN.ID%TYPE;
      v_num_preguntas_a_mostrar EXAMEN.NUMERO_PREGUNTAS%TYPE;
      v_id_preg_exa_est PREGUNTAEXAMENESTUDIANTE.ID%TYPE;

      TYPE rec_pregunta_seleccionada IS RECORD (
          pregunta_id DETALLEPREGUNTAEXAMEN.PREGUNTA_ID%TYPE,
          peso_en_banco DETALLEPREGUNTAEXAMEN.PORCENTAJE%TYPE, -- Peso original de DETALLEPREGUNTAEXAMEN
          porcentaje_normalizado PREGUNTAEXAMENESTUDIANTE.PORCENTAJE_EN_PRESENTACION%TYPE
      );
      TYPE tab_preguntas_seleccionadas IS TABLE OF rec_pregunta_seleccionada;

      v_preguntas_principales_para_estudiante tab_preguntas_seleccionadas := tab_preguntas_seleccionadas();
      v_suma_pesos_seleccionados NUMBER := 0;
      v_total_normalizado_acumulado NUMBER := 0;
      v_idx_ajuste PLS_INTEGER;

CURSOR c_candidatas_principales (cp_id_examen EXAMEN.ID%TYPE) IS
SELECT DPE.PREGUNTA_ID, NVL(DPE.PORCENTAJE, 1) AS PESO_EN_BANCO
FROM DETALLEPREGUNTAEXAMEN DPE
         JOIN PREGUNTA P ON DPE.PREGUNTA_ID = P.ID_PREGUNTA
WHERE DPE.EXAMEN_ID = cp_id_examen AND P.PREGUNTA_PADRE IS NULL
ORDER BY DBMS_RANDOM.VALUE;

BEGIN
SELECT EXAMEN_ID INTO v_id_examen FROM PRESENTACIONEXAMEN WHERE ID = p_id_presentacion_examen;
SELECT NUMERO_PREGUNTAS INTO v_num_preguntas_a_mostrar FROM EXAMEN WHERE ID = v_id_examen;

IF v_num_preguntas_a_mostrar IS NULL OR v_num_preguntas_a_mostrar <= 0 THEN
          RAISE_APPLICATION_ERROR(-20212, 'Examen ID ' || v_id_examen || ' no tiene configurado un NUMERO_PREGUNTAS válido para el estudiante.');
END IF;

      -- 1. Seleccionar N_estudiante preguntas principales aleatoriamente y sumar sus pesos
FOR rec_cand IN c_candidatas_principales(v_id_examen) LOOP
          EXIT WHEN v_preguntas_principales_para_estudiante.COUNT >= v_num_preguntas_a_mostrar;
          v_preguntas_principales_para_estudiante.EXTEND;
          v_preguntas_principales_para_estudiante(v_preguntas_principales_para_estudiante.LAST).pregunta_id := rec_cand.PREGUNTA_ID;
          v_preguntas_principales_para_estudiante(v_preguntas_principales_para_estudiante.LAST).peso_en_banco := rec_cand.PESO_EN_BANCO;
          v_suma_pesos_seleccionados := v_suma_pesos_seleccionados + rec_cand.PESO_EN_BANCO;
END LOOP;

      IF v_preguntas_principales_para_estudiante.COUNT < v_num_preguntas_a_mostrar THEN
          RAISE_APPLICATION_ERROR(-20211, 'No hay suficientes preguntas principales ('|| v_preguntas_principales_para_estudiante.COUNT ||') en el banco del examen para las ' || v_num_preguntas_a_mostrar || ' requeridas.');
END IF;

      IF v_suma_pesos_seleccionados = 0 AND v_num_preguntas_a_mostrar > 0 THEN
          v_suma_pesos_seleccionados := v_num_preguntas_a_mostrar;
FOR i IN 1..v_preguntas_principales_para_estudiante.COUNT LOOP
              v_preguntas_principales_para_estudiante(i).peso_en_banco := 1;
END LOOP;
END IF;

      -- 2. Calcular porcentajes normalizados para las preguntas principales seleccionadas
FOR i IN 1..v_preguntas_principales_para_estudiante.COUNT LOOP
          IF v_suma_pesos_seleccionados > 0 THEN
              v_preguntas_principales_para_estudiante(i).porcentaje_normalizado :=
                  ROUND((v_preguntas_principales_para_estudiante(i).peso_en_banco / v_suma_pesos_seleccionados) * 100, 2);
ELSE
              v_preguntas_principales_para_estudiante(i).porcentaje_normalizado := ROUND(100 / v_num_preguntas_a_mostrar, 2); -- Distribución equitativa si todos los pesos son 0
END IF;
          v_total_normalizado_acumulado := v_total_normalizado_acumulado + v_preguntas_principales_para_estudiante(i).porcentaje_normalizado;
END LOOP;

      IF v_preguntas_principales_para_estudiante.COUNT > 0 THEN
          IF ABS(v_total_normalizado_acumulado - 100) > 0.01 THEN -- Si hay diferencia por redondeo
              v_idx_ajuste := v_preguntas_principales_para_estudiante.LAST;
              v_preguntas_principales_para_estudiante(v_idx_ajuste).porcentaje_normalizado :=
                  v_preguntas_principales_para_estudiante(v_idx_ajuste).porcentaje_normalizado + (100 - v_total_normalizado_acumulado);
END IF;
END IF;

      -- 3. Insertar las preguntas seleccionadas (principales y sus hijas) en PREGUNTAEXAMENESTUDIANTE
FOR i IN 1..v_preguntas_principales_para_estudiante.COUNT LOOP
          DECLARE
v_id_principal_actual PREGUNTA.ID_PREGUNTA%TYPE := v_preguntas_principales_para_estudiante(i).pregunta_id;
              v_porc_norm_principal PREGUNTAEXAMENESTUDIANTE.PORCENTAJE_EN_PRESENTACION%TYPE := v_preguntas_principales_para_estudiante(i).porcentaje_normalizado;

CURSOR c_jerarquia_completa (cp_id_padre_actual PREGUNTA.ID_PREGUNTA%TYPE) IS
SELECT P.ID_PREGUNTA, P.PORCENTAJE AS PORCENTAJE_RELATIVO_HIJA_EN_BANCO
FROM PREGUNTA P
    START WITH P.ID_PREGUNTA = cp_id_padre_actual
CONNECT BY PRIOR P.ID_PREGUNTA = P.PREGUNTA_PADRE;
BEGIN
FOR rec_jer IN c_jerarquia_completa(v_id_principal_actual) LOOP
SELECT SEQ_PREGEXAEST_ID.NEXTVAL INTO v_id_preg_exa_est FROM DUAL;
INSERT INTO PREGUNTAEXAMENESTUDIANTE (
    ID, TIEMPO, PRESENTACION_EXAMEN_ID,
    DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID, DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID,
    PORCENTAJE_EN_PRESENTACION
) VALUES (
             v_id_preg_exa_est, NULL, p_id_presentacion_examen,
             v_id_examen, rec_jer.ID_PREGUNTA,
             CASE
                 WHEN rec_jer.ID_PREGUNTA = v_id_principal_actual THEN v_porc_norm_principal
                 ELSE NVL(rec_jer.PORCENTAJE_RELATIVO_HIJA_EN_BANCO, 0)
                 END
         );
END LOOP;
END;
END LOOP;
EXCEPTION
      WHEN OTHERS THEN
          DBMS_OUTPUT.PUT_LINE('Error en EQUILIBRAR_PRESENTACION_EXAMEN: ' || SQLERRM);
          RAISE;
END EQUILIBRAR_PRESENTACION_EXAMEN;

  ------------------------------------------------------------------------------------
  FUNCTION INICIAR_PRESENTACION_EXAMEN(
      p_cedula_estudiante IN ESTUDIANTE.CEDULA%TYPE,
      p_id_examen         IN EXAMEN.ID%TYPE,
      p_direccion_ip      IN PRESENTACIONEXAMEN.DIRECCION_IP%TYPE
  ) RETURN PRESENTACIONEXAMEN.ID%TYPE IS
      v_id_presentacion PRESENTACIONEXAMEN.ID%TYPE;
      v_count_inscrito NUMBER;
      v_examen_activo_count NUMBER;
      v_presentacion_existente_id PRESENTACIONEXAMEN.ID%TYPE;
BEGIN
SELECT COUNT(*) INTO v_count_inscrito
FROM DETALLEESTUDIANTECURSO DEC JOIN EXAMEN E ON DEC.CURSO_ID = E.CURSO_ID
WHERE E.ID = p_id_examen AND DEC.ESTUDIANTE_CEDULA = p_cedula_estudiante;
IF v_count_inscrito = 0 THEN RAISE_APPLICATION_ERROR(-20201, 'Estudiante no inscrito en el curso del examen.'); END IF;

SELECT COUNT(*) INTO v_examen_activo_count
FROM EXAMEN E WHERE E.ID = p_id_examen AND E.HORA <= SYSTIMESTAMP AND (E.HORA + NUMTODSINTERVAL(E.TIEMPO, 'MINUTE')) >= SYSTIMESTAMP;
IF v_examen_activo_count = 0 THEN RAISE_APPLICATION_ERROR(-20202, 'Examen no disponible en este momento.'); END IF;

BEGIN
SELECT ID INTO v_presentacion_existente_id FROM PRESENTACIONEXAMEN
WHERE EXAMEN_ID = p_id_examen AND ESTUDIANTE_CEDULA = p_cedula_estudiante AND HORA_FIN IS NULL;
RAISE_APPLICATION_ERROR(-20203, 'Ya tiene una presentación en curso para este examen.');
EXCEPTION WHEN NO_DATA_FOUND THEN NULL; END;

BEGIN
SELECT ID INTO v_presentacion_existente_id FROM PRESENTACIONEXAMEN
WHERE EXAMEN_ID = p_id_examen AND ESTUDIANTE_CEDULA = p_cedula_estudiante AND HORA_FIN IS NOT NULL;
RAISE_APPLICATION_ERROR(-20204, 'Ya ha finalizado este examen y no puede presentarlo de nuevo.');
EXCEPTION WHEN NO_DATA_FOUND THEN NULL; END;

SELECT SEQ_PRESENTACION_EXAMEN_ID.NEXTVAL INTO v_id_presentacion FROM DUAL;
INSERT INTO PRESENTACIONEXAMEN (ID, HORA_INICIO, DIRECCION_IP, EXAMEN_ID, ESTUDIANTE_CEDULA)
VALUES (v_id_presentacion, SYSTIMESTAMP, p_direccion_ip, p_id_examen, p_cedula_estudiante);
EQUILIBRAR_PRESENTACION_EXAMEN(p_id_presentacion_examen => v_id_presentacion);
COMMIT;
RETURN v_id_presentacion;
EXCEPTION WHEN OTHERS THEN ROLLBACK; DBMS_OUTPUT.PUT_LINE('Error en INICIAR_PRESENTACION_EXAMEN: ' || SQLERRM); RAISE;
END INICIAR_PRESENTACION_EXAMEN;

  ------------------------------------------------------------------------------------
  FUNCTION OBTENER_PREGUNTAS_PARA_PRESENTACION(
      p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR IS
      v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT PEE.ID AS ID_PREGUNTA_EXAMEN_ESTUDIANTE,
       P.ID_PREGUNTA AS ID_PREGUNTA_ORIGINAL, -- << NUEVO CAMPO
       P.TEXTO AS TEXTO_PREGUNTA,
       TP.NOMBRE AS NOMBRE_TIPO_PREGUNTA,
       P.TIPO_PREGUNTA_ID,
       P.TIEMPO_ESTIMADO AS TIEMPO_SUGERIDO_PREGUNTA,
       P.PREGUNTA_PADRE AS ID_PREGUNTA_PADRE_ORIGINAL,
    CURSOR(SELECT OP.ID AS ID_OPCION, OP.RESPUESTA AS TEXTO_OPCION, OP.SECUENCIA
    FROM OPCIONPREGUNTA OP WHERE OP.PREGUNTA_ID = P.ID_PREGUNTA
    ORDER BY OP.SECUENCIA ASC NULLS LAST, DBMS_RANDOM.VALUE ) AS OPCIONES_CURSOR
FROM PREGUNTAEXAMENESTUDIANTE PEE
    JOIN DETALLEPREGUNTAEXAMEN DPE ON PEE.DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID = DPE.EXAMEN_ID AND PEE.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID = DPE.PREGUNTA_ID
    JOIN PREGUNTA P ON DPE.PREGUNTA_ID = P.ID_PREGUNTA
    LEFT JOIN TIPOPREGUNTA TP ON P.TIPO_PREGUNTA_ID = TP.ID
WHERE PEE.PRESENTACION_EXAMEN_ID = p_id_presentacion_examen
ORDER BY P.PREGUNTA_PADRE ASC NULLS FIRST, PEE.ID;
RETURN v_cursor;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error en OBTENER_PREGUNTAS_PARA_PRESENTACION: ' || SQLERRM); RAISE;
END OBTENER_PREGUNTAS_PARA_PRESENTACION;

  ------------------------------------------------------------------------------------
  PROCEDURE REGISTRAR_RESPUESTA_ESTUDIANTE(
      p_id_pregunta_examen_estudiante IN PREGUNTAEXAMENESTUDIANTE.ID%TYPE,
      p_respuesta_dada                IN RESPUESTAPREGUNTA.RESPUESTA_DADA%TYPE,
      p_id_opcion_pregunta            IN RESPUESTAPREGUNTA.OPCION_PREGUNTA_ID%TYPE
  ) IS
      v_id_respuesta RESPUESTAPREGUNTA.ID%TYPE;
      PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
UPDATE RESPUESTAPREGUNTA SET RESPUESTA_DADA = p_respuesta_dada, OPCION_PREGUNTA_ID = p_id_opcion_pregunta
WHERE PREGUNTAEXAMENESTUDIANTE_ID = p_id_pregunta_examen_estudiante;

IF SQL%NOTFOUND THEN
SELECT SEQ_RESPUESTA_PREGUNTA_ID.NEXTVAL INTO v_id_respuesta FROM DUAL;
INSERT INTO RESPUESTAPREGUNTA (ID, RESPUESTA_DADA, OPCION_PREGUNTA_ID, PREGUNTAEXAMENESTUDIANTE_ID)
VALUES (v_id_respuesta, p_respuesta_dada, p_id_opcion_pregunta, p_id_pregunta_examen_estudiante);
END IF;
COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK; DBMS_OUTPUT.PUT_LINE('Error en REGISTRAR_RESPUESTA_ESTUDIANTE: ' || SQLERRM); RAISE;
END REGISTRAR_RESPUESTA_ESTUDIANTE;

  ------------------------------------------------------------------------------------
  FUNCTION ES_PREGUNTA_CORRECTA(
      p_id_pregunta_examen_estudiante IN PREGUNTAEXAMENESTUDIANTE.ID%TYPE
  ) RETURN NUMBER IS
      v_resp_est_texto RESPUESTAPREGUNTA.RESPUESTA_DADA%TYPE;
      v_resp_est_op_id RESPUESTAPREGUNTA.OPCION_PREGUNTA_ID%TYPE;
      v_id_preg_original PREGUNTA.ID_PREGUNTA%TYPE;
      v_nombre_tipo_preg TIPOPREGUNTA.NOMBRE%TYPE;
      v_es_correcta NUMBER := 0;

CURSOR c_op_correctas(cp_id_preg PREGUNTA.ID_PREGUNTA%TYPE) IS
SELECT ID, RESPUESTA, SECUENCIA FROM OPCIONPREGUNTA
WHERE PREGUNTA_ID = cp_id_preg AND ES_CORRECTA = 'S' ORDER BY SECUENCIA ASC NULLS LAST, ID ASC;

TYPE t_array_varchar IS TABLE OF VARCHAR2(255) INDEX BY PLS_INTEGER;
      TYPE t_array_number  IS TABLE OF NUMBER INDEX BY PLS_INTEGER;

      v_op_correctas_texto t_array_varchar;
      v_op_correctas_ids t_array_number;
      v_resp_est_texto_array t_array_varchar;
      v_resp_est_ids_array t_array_number;

      v_idx PLS_INTEGER;
      v_temp_str VARCHAR2(32767);
      v_pos NUMBER;
      v_item VARCHAR2(255);
      v_match_count NUMBER;

BEGIN
BEGIN
SELECT RP.RESPUESTA_DADA, RP.OPCION_PREGUNTA_ID INTO v_resp_est_texto, v_resp_est_op_id
FROM RESPUESTAPREGUNTA RP WHERE RP.PREGUNTAEXAMENESTUDIANTE_ID = p_id_pregunta_examen_estudiante;
EXCEPTION WHEN NO_DATA_FOUND THEN RETURN 0; END;

SELECT P.ID_PREGUNTA, TP.NOMBRE INTO v_id_preg_original, v_nombre_tipo_preg
FROM PREGUNTAEXAMENESTUDIANTE PEE
         JOIN DETALLEPREGUNTAEXAMEN DPE ON PEE.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID = DPE.PREGUNTA_ID AND PEE.DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID = DPE.EXAMEN_ID
         JOIN PREGUNTA P ON DPE.PREGUNTA_ID = P.ID_PREGUNTA
         LEFT JOIN TIPOPREGUNTA TP ON P.TIPO_PREGUNTA_ID = TP.ID
WHERE PEE.ID = p_id_pregunta_examen_estudiante;

v_idx := 0;
FOR rec_op IN c_op_correctas(v_id_preg_original) LOOP
          v_idx := v_idx + 1;
          v_op_correctas_texto(v_idx) := rec_op.RESPUESTA;
          v_op_correctas_ids(v_idx) := rec_op.ID;
END LOOP;

      IF v_nombre_tipo_preg = C_TIPO_SELECCION_UNICA_UNA_CORRECTA OR v_nombre_tipo_preg = C_TIPO_VERDADERO_FALSO THEN
          IF v_resp_est_op_id IS NOT NULL AND v_op_correctas_ids.COUNT = 1 AND v_resp_est_op_id = v_op_correctas_ids(1) THEN
              v_es_correcta := 1;
END IF;
      ELSIF v_nombre_tipo_preg = C_TIPO_SELECCION_MULTIPLE_VARIAS_CORRECTAS THEN
          IF v_resp_est_texto IS NOT NULL THEN
              v_idx := 0;
              v_temp_str := v_resp_est_texto || ',';
              WHILE LENGTH(v_temp_str) > 0 LOOP
                  v_pos := INSTR(v_temp_str, ',');
                  IF v_pos > 0 THEN
                      v_item := TRIM(SUBSTR(v_temp_str, 1, v_pos - 1));
                      IF LENGTH(v_item) > 0 THEN
                          v_idx := v_idx + 1;
BEGIN v_resp_est_ids_array(v_idx) := TO_NUMBER(v_item); EXCEPTION WHEN OTHERS THEN v_resp_est_ids_array(v_idx) := -999; END;
END IF;
                      v_temp_str := SUBSTR(v_temp_str, v_pos + 1);
ELSE
                      v_temp_str := NULL;
END IF;
END LOOP;

              IF v_op_correctas_ids.COUNT = v_resp_est_ids_array.COUNT AND v_op_correctas_ids.COUNT > 0 THEN
                  v_match_count := 0;
FOR i IN 1..v_op_correctas_ids.COUNT LOOP
                      FOR j IN 1..v_resp_est_ids_array.COUNT LOOP
                          IF v_op_correctas_ids(i) = v_resp_est_ids_array(j) THEN
                              v_match_count := v_match_count + 1;
                              EXIT;
END IF;
END LOOP;
END LOOP;
                  IF v_match_count = v_op_correctas_ids.COUNT THEN
                      v_es_correcta := 1;
END IF;
END IF;
END IF;
      ELSIF v_nombre_tipo_preg = C_TIPO_ORDENAR_CONCEPTOS THEN
          IF v_resp_est_texto IS NOT NULL THEN
              v_idx := 0;
              v_temp_str := v_resp_est_texto || ':::';
              WHILE LENGTH(v_temp_str) > 0 LOOP
                  v_pos := INSTR(v_temp_str, ':::');
                  IF v_pos > 0 THEN
                      v_item := TRIM(SUBSTR(v_temp_str, 1, v_pos - 1));
                      IF LENGTH(v_item) > 0 THEN v_idx := v_idx + 1; v_resp_est_texto_array(v_idx) := v_item; END IF;
                      v_temp_str := SUBSTR(v_temp_str, v_pos + 3);
                      IF v_temp_str = ':::' THEN v_temp_str := NULL; END IF;
ELSE
                      v_item := TRIM(v_temp_str);
                      IF LENGTH(v_item) > 0 AND v_item != ':::' THEN v_idx := v_idx + 1; v_resp_est_texto_array(v_idx) := v_item; END IF;
                      v_temp_str := NULL;
END IF;
END LOOP;

              IF v_op_correctas_texto.COUNT > 0 AND v_op_correctas_texto.COUNT = v_resp_est_texto_array.COUNT THEN
                  v_es_correcta := 1;
FOR i IN 1..v_op_correctas_texto.COUNT LOOP
                      IF TRIM(UPPER(v_op_correctas_texto(i))) != TRIM(UPPER(v_resp_est_texto_array(i))) THEN
                          v_es_correcta := 0; EXIT;
END IF;
END LOOP;
ELSE v_es_correcta := 0; END IF;
ELSE v_es_correcta := 0; END IF;
      ELSIF v_nombre_tipo_preg = C_TIPO_RELACIONAR_CONCEPTOS THEN
          IF v_resp_est_texto IS NOT NULL AND v_op_correctas_texto.COUNT > 0 THEN
              DECLARE
TYPE t_map_pares IS TABLE OF VARCHAR2(255) INDEX BY VARCHAR2(255);
                  v_pares_correctos_map t_map_pares;
                  v_pares_estudiante_map t_map_pares;
                  v_temp_str_rel VARCHAR2(32767) := v_resp_est_texto;
                  v_par_delimitador CONSTANT VARCHAR2(3) := ':::';
                  v_pares_delimitador CONSTANT VARCHAR2(3) := ';;;';
                  v_pos_par_interno NUMBER;
                  v_pos_concepto_interno NUMBER;
                  v_un_par_estudiante VARCHAR2(512);
                  v_concepto_a_est VARCHAR2(255);
                  v_concepto_b_est VARCHAR2(255);
                  v_un_par_correcto VARCHAR2(512);
                  v_concepto_a_corr VARCHAR2(255);
                  v_concepto_b_corr VARCHAR2(255);
                  v_num_pares_correctos_encontrados NUMBER := 0;
                  v_num_pares_estudiante_contados NUMBER := 0;
BEGIN
FOR i IN 1..v_op_correctas_texto.COUNT LOOP
                      v_un_par_correcto := v_op_correctas_texto(i);
                      v_pos_concepto_interno := INSTR(v_un_par_correcto, v_par_delimitador);
                      IF v_pos_concepto_interno > 0 THEN
                          v_concepto_a_corr := TRIM(SUBSTR(v_un_par_correcto, 1, v_pos_concepto_interno - 1));
                          v_concepto_b_corr := TRIM(SUBSTR(v_un_par_correcto, v_pos_concepto_interno + LENGTH(v_par_delimitador)));
                          v_pares_correctos_map(UPPER(v_concepto_a_corr)) := UPPER(v_concepto_b_corr);
END IF;
END LOOP;

                  v_temp_str_rel := v_temp_str_rel || v_pares_delimitador;
                  WHILE LENGTH(v_temp_str_rel) > 0 LOOP
                      v_pos_par_interno := INSTR(v_temp_str_rel, v_pares_delimitador);
                      IF v_pos_par_interno > 0 THEN
                          v_un_par_estudiante := TRIM(SUBSTR(v_temp_str_rel, 1, v_pos_par_interno - 1));
                          IF LENGTH(v_un_par_estudiante) > 0 THEN
                              v_pos_concepto_interno := INSTR(v_un_par_estudiante, v_par_delimitador);
                              IF v_pos_concepto_interno > 0 THEN
                                  v_concepto_a_est := TRIM(SUBSTR(v_un_par_estudiante, 1, v_pos_concepto_interno - 1));
                                  v_concepto_b_est := TRIM(SUBSTR(v_un_par_estudiante, v_pos_concepto_interno + LENGTH(v_par_delimitador)));
                                  v_pares_estudiante_map(UPPER(v_concepto_a_est)) := UPPER(v_concepto_b_est);
                                  v_num_pares_estudiante_contados := v_num_pares_estudiante_contados + 1;
END IF;
END IF;
                          v_temp_str_rel := SUBSTR(v_temp_str_rel, v_pos_par_interno + LENGTH(v_pares_delimitador));
                            IF v_temp_str_rel = v_pares_delimitador THEN v_temp_str_rel := NULL; END IF;
ELSE
                          v_un_par_estudiante := TRIM(v_temp_str_rel);
                            IF LENGTH(v_un_par_estudiante) > 0 AND v_un_par_estudiante != v_pares_delimitador THEN
                                v_pos_concepto_interno := INSTR(v_un_par_estudiante, v_par_delimitador);
                                IF v_pos_concepto_interno > 0 THEN
                                    v_concepto_a_est := TRIM(SUBSTR(v_un_par_estudiante, 1, v_pos_concepto_interno - 1));
                                    v_concepto_b_est := TRIM(SUBSTR(v_un_par_estudiante, v_pos_concepto_interno + LENGTH(v_par_delimitador)));
                                    v_pares_estudiante_map(UPPER(v_concepto_a_est)) := UPPER(v_concepto_b_est);
                                    v_num_pares_estudiante_contados := v_num_pares_estudiante_contados + 1;
END IF;
END IF;
                          v_temp_str_rel := NULL;
END IF;
END LOOP;

                  IF v_pares_correctos_map.COUNT > 0 AND v_num_pares_estudiante_contados = v_pares_correctos_map.COUNT THEN
                      v_concepto_a_corr := v_pares_correctos_map.FIRST;
                      WHILE v_concepto_a_corr IS NOT NULL LOOP
                          IF v_pares_estudiante_map.EXISTS(v_concepto_a_corr) AND
                             v_pares_estudiante_map(v_concepto_a_corr) = v_pares_correctos_map(v_concepto_a_corr) THEN
                              v_num_pares_correctos_encontrados := v_num_pares_correctos_encontrados + 1;
ELSE
                              v_num_pares_correctos_encontrados := -1;
                              EXIT;
END IF;
                          v_concepto_a_corr := v_pares_correctos_map.NEXT(v_concepto_a_corr);
END LOOP;

                      IF v_num_pares_correctos_encontrados = v_pares_correctos_map.COUNT THEN
                          v_es_correcta := 1;
END IF;
END IF;
EXCEPTION
                  WHEN OTHERS THEN
                      DBMS_OUTPUT.PUT_LINE('Error parseando respuesta de Relacionar Conceptos PEE_ID ' || p_id_pregunta_examen_estudiante || ': ' || SQLERRM);
                      v_es_correcta := 0;
END;
ELSE
              v_es_correcta := 0;
END IF;
END IF;
RETURN v_es_correcta;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error en ES_PREGUNTA_CORRECTA PEE_ID ' || p_id_pregunta_examen_estudiante || ': ' || SQLERRM); RETURN 0;
END ES_PREGUNTA_CORRECTA;

  ------------------------------------------------------------------------------------

    FUNCTION OBTENER_PORCENTAJE_APROBADO_PREGUNTA(
    p_id_pregunta_examen_estudiante IN PREGUNTAEXAMENESTUDIANTE.ID%TYPE
) RETURN NUMBER IS
    v_id_pregunta_original PREGUNTA.ID_PREGUNTA%TYPE;
    v_count_subpreguntas NUMBER;
    v_porcentaje_pee_en_presentacion PREGUNTAEXAMENESTUDIANTE.PORCENTAJE_EN_PRESENTACION%TYPE; -- % definido para esta PEE

    -- Variables para el cálculo de subpreguntas
    v_suma_porcentajes_definidos_subpreguntas NUMBER := 0; -- Suma de los % definidos de todas las subpreguntas
    v_suma_porcentajes_obtenidos_subpreguntas NUMBER := 0; -- Suma de los % definidos de las subpreguntas *correctas*

    v_porcentaje_final_pregunta NUMBER := 0; -- El valor porcentual real que esta pregunta contribuye

    -- Se asume la existencia de una función ES_PREGUNTA_CORRECTA(p_id_pee IN NUMBER) RETURN NUMBER (1 si correcta, 0 si no)
BEGIN
    -- Obtener el ID de la pregunta original y su porcentaje definido en esta presentación de examen
SELECT PEE.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID, NVL(PEE.PORCENTAJE_EN_PRESENTACION, 0)
INTO v_id_pregunta_original, v_porcentaje_pee_en_presentacion
FROM PREGUNTAEXAMENESTUDIANTE PEE
WHERE PEE.ID = p_id_pregunta_examen_estudiante;

-- Contar cuántas subpreguntas tiene la pregunta original
SELECT COUNT(*)
INTO v_count_subpreguntas
FROM PREGUNTA
WHERE PREGUNTA_PADRE = v_id_pregunta_original;

IF v_count_subpreguntas = 0 THEN
        -- Caso base: La pregunta no tiene subpreguntas
        IF ES_PREGUNTA_CORRECTA(p_id_pregunta_examen_estudiante) = 1 THEN
            v_porcentaje_final_pregunta := v_porcentaje_pee_en_presentacion; -- Devuelve su porcentaje definido si es correcta
ELSE
            v_porcentaje_final_pregunta := 0; -- Devuelve 0 si es incorrecta
END IF;
ELSE
        -- Caso recursivo: La pregunta tiene subpreguntas
        -- Iterar sobre las PREGUNTAEXAMENESTUDIANTE de las subpreguntas
        FOR rec_sub_pee IN (
            SELECT PEE_SUB.ID AS ID_PEE_HIJA,
                   NVL(PEE_SUB.PORCENTAJE_EN_PRESENTACION, 0) AS PORCENTAJE_DEFINIDO_HIJA
            FROM PREGUNTAEXAMENESTUDIANTE PEE_SUB
            JOIN PREGUNTA P_SUB ON PEE_SUB.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID = P_SUB.ID_PREGUNTA
            WHERE P_SUB.PREGUNTA_PADRE = v_id_pregunta_original -- P_SUB es hija de v_id_pregunta_original
              AND PEE_SUB.PRESENTACION_EXAMEN_ID = (SELECT PRESENTACION_EXAMEN_ID FROM PREGUNTAEXAMENESTUDIANTE WHERE ID = p_id_pregunta_examen_estudiante)
        ) LOOP
            -- Acumular el porcentaje definido de TODAS las subpreguntas
            v_suma_porcentajes_definidos_subpreguntas := v_suma_porcentajes_definidos_subpreguntas + rec_sub_pee.PORCENTAJE_DEFINIDO_HIJA;

            -- Si la subpregunta es correcta, sumar su porcentaje definido a los obtenidos
            IF ES_PREGUNTA_CORRECTA(rec_sub_pee.ID_PEE_HIJA) = 1 THEN
                v_suma_porcentajes_obtenidos_subpreguntas := v_suma_porcentajes_obtenidos_subpreguntas + rec_sub_pee.PORCENTAJE_DEFINIDO_HIJA;
END IF;
END LOOP;

        IF v_suma_porcentajes_definidos_subpreguntas > 0 THEN
            -- Aplicar la regla de tres para subpreguntas:
            -- (porcentaje hijas aprobado / porcentaje hijas total) * porcentaje de la pregunta padre
            -- Ejemplo: Si subpreguntas suman 50%, se obtuvieron 30% de ellas, y la padre vale 40%:
            -- (30 / 50) * 40 = 24. Este es el valor que aporta la pregunta padre.
            v_porcentaje_final_pregunta := (v_suma_porcentajes_obtenidos_subpreguntas / v_suma_porcentajes_definidos_subpreguntas) * v_porcentaje_pee_en_presentacion;
ELSE
            -- Si las subpreguntas no tienen porcentaje definido (caso anómalo), esta pregunta padre aporta 0.
            v_porcentaje_final_pregunta := 0;
END IF;
END IF;

RETURN NVL(v_porcentaje_final_pregunta, 0);
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error en OBTENER_PORCENTAJE_APROBADO_PREGUNTA PEE_ID ' || p_id_pregunta_examen_estudiante || ': ' || SQLERRM);
RETURN 0;
END OBTENER_PORCENTAJE_APROBADO_PREGUNTA;



  ------------------------------------------------------------------------------------
  FUNCTION OBTENER_PORCENTAJE_TOTAL_APROBADO(
    p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
    ) RETURN NUMBER IS
        v_suma_porcentajes_obtenidos_reales NUMBER := 0; -- Suma de los porcentajes reales obtenidos por cada pregunta principal
        v_suma_porcentajes_definidos_reales NUMBER := 0; -- Suma de los porcentajes definidos para cada pregunta principal
        v_porcentaje_obtenido_pregunta_actual NUMBER;
        v_resultado_porcentaje NUMBER;

        -- Cursor para iterar sobre las preguntas principales de la presentación del examen
CURSOR c_preguntas_principales_presentacion IS
SELECT PEE.ID,
       NVL(PEE.PORCENTAJE_EN_PRESENTACION, 0) AS PORCENTAJE_DEFINIDO
FROM PREGUNTAEXAMENESTUDIANTE PEE
         JOIN PREGUNTA P ON PEE.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID = P.ID_PREGUNTA
WHERE PEE.PRESENTACION_EXAMEN_ID = p_id_presentacion_examen
  AND P.PREGUNTA_PADRE IS NULL; -- Solo preguntas principales (sin padre)
BEGIN
FOR rec_pee IN c_preguntas_principales_presentacion LOOP
            -- Acumular el porcentaje definido de la pregunta principal actual
            v_suma_porcentajes_definidos_reales := v_suma_porcentajes_definidos_reales + rec_pee.PORCENTAJE_DEFINIDO;

            -- Obtener el porcentaje real obtenido para esta pregunta principal.
            -- Esta función maneja internamente la lógica de subpreguntas y su regla de tres.
            v_porcentaje_obtenido_pregunta_actual := OBTENER_PORCENTAJE_APROBADO_PREGUNTA(rec_pee.ID);
            v_suma_porcentajes_obtenidos_reales := v_suma_porcentajes_obtenidos_reales + v_porcentaje_obtenido_pregunta_actual;
END LOOP;

        IF v_suma_porcentajes_definidos_reales > 0 THEN
            -- Aplicar la regla de tres para normalizar el porcentaje total del examen a una escala de 0-100
            -- Ejemplo: Si se obtuvieron 70 puntos de un total posible de 110, el resultado es (70/110)*100
            v_resultado_porcentaje := (v_suma_porcentajes_obtenidos_reales / v_suma_porcentajes_definidos_reales) * 100;
ELSE
            v_resultado_porcentaje := 0; -- No hay preguntas o no tienen porcentajes definidos
END IF;

RETURN NVL(v_resultado_porcentaje, 0);
EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error en OBTENER_PORCENTAJE_TOTAL_APROBADO: ' || SQLERRM);
RETURN 0;
END OBTENER_PORCENTAJE_TOTAL_APROBADO;

  ------------------------------------------------------------------------------------
  FUNCTION OBTENER_NOTA_EXAMEN_FINAL(
    p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
    ) RETURN NUMBER IS
        v_porcentaje_total_aprobado NUMBER;
        v_nota_maxima CONSTANT NUMBER := 5.0;
BEGIN
        v_porcentaje_total_aprobado := OBTENER_PORCENTAJE_TOTAL_APROBADO(p_id_presentacion_examen);
        -- Si v_porcentaje_total_aprobado es, por ejemplo, (70/110)*100 = 63.63
        -- La nota será (63.63/100) * 5.0 = 3.18
RETURN ROUND((v_porcentaje_total_aprobado / 100) * v_nota_maxima, 2);
EXCEPTION
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('Error en OBTENER_NOTA_EXAMEN_FINAL: ' || SQLERRM);
RETURN 0;
END OBTENER_NOTA_EXAMEN_FINAL;

  ------------------------------------------------------------------------------------
  PROCEDURE FINALIZAR_Y_CALIFICAR_EXAMEN(
      p_id_presentacion_examen    IN PRESENTACIONEXAMEN.ID%TYPE,
      p_calificacion_final_out    OUT PRESENTACIONEXAMEN.CALIFICACION%TYPE,
      p_resp_correctas_out        OUT PRESENTACIONEXAMEN.RESPUESTAS_CORRECTAS%TYPE,
      p_resp_incorrectas_out      OUT PRESENTACIONEXAMEN.RESPUESTAS_INCORRECTAS%TYPE,
      p_preguntas_respondidas_out OUT NUMBER, -- Número de PEE respondidas
      p_total_preguntas_examen_out OUT NUMBER, -- EXAMEN.NUMERO_PREGUNTAS (las que vio el estudiante)
      p_mensaje_feedback_out      OUT VARCHAR2,
      p_nombre_examen_out         OUT EXAMEN.NOMBRE%TYPE,
      p_fecha_presentacion_out    OUT VARCHAR2
  ) IS
      v_nota_final NUMBER;
      v_id_examen EXAMEN.ID%TYPE;
      v_tiempo_empleado_seg NUMBER;
      v_resp_correctas_hojas NUMBER := 0; -- Contar solo preguntas hoja correctas
      v_resp_incorrectas_hojas NUMBER := 0; -- Contar solo preguntas hoja incorrectas
      v_preg_respondidas_total NUMBER := 0; -- Total de PEE con respuesta
      v_calif_min_aprobatoria EXAMEN.CALIFICACION_MIN_APROBATORIA%TYPE;
      v_hora_inicio PRESENTACIONEXAMEN.HORA_INICIO%TYPE;
      v_hora_fin PRESENTACIONEXAMEN.HORA_FIN%TYPE;
      v_num_preguntas_config_examen EXAMEN.NUMERO_PREGUNTAS%TYPE;
BEGIN
UPDATE PRESENTACIONEXAMEN SET HORA_FIN = SYSTIMESTAMP
WHERE ID = p_id_presentacion_examen
    RETURNING EXAMEN_ID, HORA_INICIO, HORA_FIN INTO v_id_examen, v_hora_inicio, v_hora_fin;

IF v_hora_inicio IS NOT NULL AND v_hora_fin IS NOT NULL THEN
            -- La resta de dos DATEs da el número de días. Multiplicar por segundos en un día.
            v_tiempo_empleado_seg := (v_hora_fin - v_hora_inicio) * 24 * 60 * 60;
ELSE
            v_tiempo_empleado_seg := 0;
END IF;

        -- Luego, si necesitas actualizar la columna TIEMPO en PRESENTACIONEXAMEN (que es NUMBER):
UPDATE PRESENTACIONEXAMEN
SET TIEMPO = ROUND(NVL(v_tiempo_empleado_seg,0)) -- Almacenar en segundos
WHERE ID = p_id_presentacion_examen;

v_nota_final := OBTENER_NOTA_EXAMEN_FINAL(p_id_presentacion_examen);
      p_calificacion_final_out := v_nota_final;

      -- Contar respuestas correctas/incorrectas a nivel de PREGUNTAEXAMENESTUDIANTE (todas las que vio)
FOR rec IN (
          SELECT PEE.ID AS PEE_ID, P.PREGUNTA_PADRE
          FROM PREGUNTAEXAMENESTUDIANTE PEE
          JOIN PREGUNTA P ON PEE.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID = P.ID_PREGUNTA
          WHERE PEE.PRESENTACION_EXAMEN_ID = p_id_presentacion_examen
      ) LOOP
          DECLARE
v_respondio NUMBER;
            v_es_correcta_actual NUMBER;
BEGIN
SELECT COUNT(*) INTO v_respondio FROM RESPUESTAPREGUNTA WHERE PREGUNTAEXAMENESTUDIANTE_ID = rec.PEE_ID;
IF v_respondio > 0 THEN
                  v_preg_respondidas_total := v_preg_respondidas_total + 1;
                  -- Contar correctas/incorrectas solo para preguntas hoja (sin hijos en ESTA presentación)
                  -- O si la pregunta NO es padre de ninguna otra pregunta EN GENERAL.
                  -- Para simplificar, contamos todas las evaluadas por ES_PREGUNTA_CORRECTA.
                  -- La calificación real se basa en el porcentaje, este conteo es más informativo.
                  v_es_correcta_actual := ES_PREGUNTA_CORRECTA(rec.PEE_ID);
                  IF v_es_correcta_actual = 1 THEN
                      v_resp_correctas_hojas := v_resp_correctas_hojas + 1;
ELSE
                      v_resp_incorrectas_hojas := v_resp_incorrectas_hojas + 1;
END IF;
END IF;
END;
END LOOP;

      p_resp_correctas_out := v_resp_correctas_hojas;
      p_resp_incorrectas_out := v_resp_incorrectas_hojas;
      p_preguntas_respondidas_out := v_preg_respondidas_total;

UPDATE PRESENTACIONEXAMEN
SET CALIFICACION = v_nota_final,
    RESPUESTAS_CORRECTAS = p_resp_correctas_out, -- Usar el conteo de hojas o el total de PEE evaluadas
    RESPUESTAS_INCORRECTAS = p_resp_incorrectas_out
WHERE ID = p_id_presentacion_examen;

SELECT E.NOMBRE, E.NUMERO_PREGUNTAS, TO_CHAR(PE.HORA_INICIO, 'DD/MM/YYYY HH24:MI:SS'), E.CALIFICACION_MIN_APROBATORIA
INTO p_nombre_examen_out, v_num_preguntas_config_examen, p_fecha_presentacion_out, v_calif_min_aprobatoria
FROM EXAMEN E JOIN PRESENTACIONEXAMEN PE ON E.ID = PE.EXAMEN_ID
WHERE PE.ID = p_id_presentacion_examen;

p_total_preguntas_examen_out := v_num_preguntas_config_examen; -- Este es el N que vio el estudiante

      IF v_nota_final >= v_calif_min_aprobatoria THEN
          p_mensaje_feedback_out := '¡Felicidades! Has aprobado el examen.';
ELSE
          p_mensaje_feedback_out := 'Necesitas mejorar. Revisa los temas del examen.';
END IF;

COMMIT;
EXCEPTION WHEN OTHERS THEN ROLLBACK; DBMS_OUTPUT.PUT_LINE('Error en FINALIZAR_Y_CALIFICAR_EXAMEN: ' || SQLERRM); RAISE;
END FINALIZAR_Y_CALIFICAR_EXAMEN;

  ------------------------------------------------------------------------------------
  FUNCTION OBTENER_RESULTADOS_DETALLADOS(
      p_id_presentacion_examen IN PRESENTACIONEXAMEN.ID%TYPE
  ) RETURN SYS_REFCURSOR IS
      v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT PEE.ID AS ID_PREGUNTA_EXAMEN_ESTUDIANTE,
       P.ID_PREGUNTA AS ID_PREGUNTA_ORIGINAL_PROPIA,
       P.TEXTO AS TEXTO_PREGUNTA,
       TP.NOMBRE AS NOMBRE_TIPO_PREGUNTA,
       RP.RESPUESTA_DADA AS RESPUESTA_ESTUDIANTE,
       (SELECT LISTAGG(OP_CORR.RESPUESTA, '; ') WITHIN GROUP (ORDER BY OP_CORR.SECUENCIA ASC NULLS LAST, OP_CORR.ID ASC)
FROM OPCIONPREGUNTA OP_CORR WHERE OP_CORR.PREGUNTA_ID = P.ID_PREGUNTA AND OP_CORR.ES_CORRECTA = 'S') AS OPCIONES_CORRECTAS_TEXTO,
                                (SELECT LISTAGG(OP_CORR.ID, ',') WITHIN GROUP (ORDER BY OP_CORR.SECUENCIA ASC NULLS LAST, OP_CORR.ID ASC)
FROM OPCIONPREGUNTA OP_CORR WHERE OP_CORR.PREGUNTA_ID = P.ID_PREGUNTA AND OP_CORR.ES_CORRECTA = 'S') AS OPCIONES_CORRECTAS_ID,
    PAQUETE_PRESENTACION_EXAMEN.ES_PREGUNTA_CORRECTA(PEE.ID) AS ES_CORRECTA_LA_RESPUESTA,
    P.PREGUNTA_PADRE AS ID_PREGUNTA_PADRE_ORIGINAL, -- Añadido para reconstruir jerarquía
    NULL AS FEEDBACK_ESPECIFICO_PREGUNTA
FROM PREGUNTAEXAMENESTUDIANTE PEE
    JOIN DETALLEPREGUNTAEXAMEN DPE ON PEE.DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID = DPE.EXAMEN_ID AND PEE.DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID = DPE.PREGUNTA_ID
    JOIN PREGUNTA P ON DPE.PREGUNTA_ID = P.ID_PREGUNTA
    LEFT JOIN TIPOPREGUNTA TP ON P.TIPO_PREGUNTA_ID = TP.ID
    LEFT JOIN RESPUESTAPREGUNTA RP ON PEE.ID = RP.PREGUNTAEXAMENESTUDIANTE_ID
WHERE PEE.PRESENTACION_EXAMEN_ID = p_id_presentacion_examen
ORDER BY P.PREGUNTA_PADRE ASC NULLS FIRST, PEE.ID; -- Ordenar para agrupar
RETURN v_cursor;
EXCEPTION WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error en OBTENER_RESULTADOS_DETALLADOS: ' || SQLERRM); RAISE;
END OBTENER_RESULTADOS_DETALLADOS;

END PAQUETE_PRESENTACION_EXAMEN;

/
--------------------------------------------------------
--  DDL for Package Body PAQUETE_USUARIOS
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE PACKAGE BODY "MIGUEL"."PAQUETE_USUARIOS" AS
    FUNCTION OBTENER_ESTUDIANTE_POR_CEDULA (
        p_cedula IN ESTUDIANTE.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT CEDULA, NOMBRE, CORREO
FROM ESTUDIANTE
WHERE CEDULA = p_cedula;
RETURN v_cursor;
EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20001, 'No se encontró ningún estudiante con la cédula: ' || p_cedula);
WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR (-20099, 'Error al obtener el estudiante: ' || SQLERRM);
END OBTENER_ESTUDIANTE_POR_CEDULA;


    FUNCTION OBTENER_PROFESOR_POR_CEDULA (
        p_cedula IN PROFESOR.CEDULA%TYPE
    ) RETURN SYS_REFCURSOR
    IS
        v_cursor SYS_REFCURSOR;
BEGIN
OPEN v_cursor FOR
SELECT CEDULA, NOMBRE, CORREO
FROM PROFESOR
WHERE CEDULA = p_cedula;
RETURN v_cursor;
EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20001, 'No se encontró ningún profesor con la cédula: ' || p_cedula);
WHEN OTHERS THEN
            RAISE_APPLICATION_ERROR (-20099, 'Error al obtener el profesor: ' || SQLERRM);
END OBTENER_PROFESOR_POR_CEDULA;
END PAQUETE_USUARIOS;

/
--------------------------------------------------------
--  Constraints for Table CREACION
--------------------------------------------------------

ALTER TABLE "MIGUEL"."CREACION" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."CREACION" ADD CONSTRAINT "PK_CREACION" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLEPREGUNTAEXAMEN
--------------------------------------------------------

ALTER TABLE "MIGUEL"."DETALLEPREGUNTAEXAMEN" ADD CONSTRAINT "PK_DETALLE_PREGUNTA_EXAMEN" PRIMARY KEY ("EXAMEN_ID", "PREGUNTA_ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
ALTER TABLE "MIGUEL"."DETALLEPREGUNTAEXAMEN" ADD CONSTRAINT "CHK_PORCENTAJE_DETALLE" CHECK (PORCENTAJE >= 0 AND PORCENTAJE <= 100) ENABLE;
--------------------------------------------------------
--  Constraints for Table PREGUNTAEXAMENESTUDIANTE
--------------------------------------------------------

ALTER TABLE "MIGUEL"."PREGUNTAEXAMENESTUDIANTE" ADD CONSTRAINT "PK_PREGUNTA_EXAMEN_ESTUDIANTE" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table RESPUESTAPREGUNTA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."RESPUESTAPREGUNTA" MODIFY ("PREGUNTAEXAMENESTUDIANTE_ID" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."RESPUESTAPREGUNTA" ADD CONSTRAINT "PK_RESPUESTA_PREGUNTA" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLEESTUDIANTECURSO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."DETALLEESTUDIANTECURSO" MODIFY ("ESTUDIANTE_CEDULA" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."DETALLEESTUDIANTECURSO" MODIFY ("CURSO_ID" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."DETALLEESTUDIANTECURSO" ADD CONSTRAINT "PK_DETALLE_ESTUDIANTE_CURSO" PRIMARY KEY ("ESTUDIANTE_CEDULA", "CURSO_ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DIA_SEMANA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."DIA_SEMANA" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."DIA_SEMANA" ADD CONSTRAINT "PK_DIA_SEMANA" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table HORARIO_CLASE
--------------------------------------------------------

ALTER TABLE "MIGUEL"."HORARIO_CLASE" MODIFY ("HORA_INICIO" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."HORARIO_CLASE" MODIFY ("HORA_FIN" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."HORARIO_CLASE" MODIFY ("DIA_SEMANA_ID" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."HORARIO_CLASE" ADD CONSTRAINT "PK_HORARIO_CLASE" PRIMARY KEY ("ID_HORARIO")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PREGUNTA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."PREGUNTA" MODIFY ("TEXTO" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "PK_PREGUNTA" PRIMARY KEY ("ID_PREGUNTA")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "CHK_PORCENTAJE_PREGUNTA" CHECK (PORCENTAJE >= 0 AND PORCENTAJE <= 100) ENABLE;
--------------------------------------------------------
--  Constraints for Table PROFESOR
--------------------------------------------------------

ALTER TABLE "MIGUEL"."PROFESOR" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."PROFESOR" MODIFY ("CORREO" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."PROFESOR" MODIFY ("CONTRASENA" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."PROFESOR" ADD CONSTRAINT "PK_PROFESOR" PRIMARY KEY ("CEDULA")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table VISIBILIDAD
--------------------------------------------------------

ALTER TABLE "MIGUEL"."VISIBILIDAD" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."VISIBILIDAD" ADD CONSTRAINT "PK_VISIBILIDAD" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table PRESENTACIONEXAMEN
--------------------------------------------------------

ALTER TABLE "MIGUEL"."PRESENTACIONEXAMEN" ADD CONSTRAINT "PK_PRESENTACION_EXAMEN" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table NIVEL
--------------------------------------------------------

ALTER TABLE "MIGUEL"."NIVEL" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."NIVEL" ADD CONSTRAINT "PK_NIVEL" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table UNIDAD
--------------------------------------------------------

ALTER TABLE "MIGUEL"."UNIDAD" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."UNIDAD" MODIFY ("ID_CURSO" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."UNIDAD" ADD CONSTRAINT "PK_UNIDAD" PRIMARY KEY ("ID_UNIDAD")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table TIPOPREGUNTA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."TIPOPREGUNTA" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."TIPOPREGUNTA" ADD CONSTRAINT "PK_TIPO_PREGUNTA" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CONTENIDO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."CONTENIDO" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."CONTENIDO" MODIFY ("ID_UNIDAD" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."CONTENIDO" ADD CONSTRAINT "PK_CONTENIDO" PRIMARY KEY ("ID_CONTENIDO")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CURSO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."CURSO" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."CURSO" MODIFY ("PROFESOR_CEDULA" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."CURSO" ADD CONSTRAINT "PK_CURSO" PRIMARY KEY ("ID_CURSO")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table CATEGORIA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."CATEGORIA" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."CATEGORIA" ADD CONSTRAINT "PK_CATEGORIA" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table OPCIONPREGUNTA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."OPCIONPREGUNTA" MODIFY ("RESPUESTA" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."OPCIONPREGUNTA" MODIFY ("ES_CORRECTA" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."OPCIONPREGUNTA" MODIFY ("PREGUNTA_ID" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."OPCIONPREGUNTA" ADD CHECK (es_correcta IN ('S', 'N')) ENABLE;
ALTER TABLE "MIGUEL"."OPCIONPREGUNTA" ADD CONSTRAINT "PK_OPCION_PREGUNTA" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table DETALLECURSOHORARIO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."DETALLECURSOHORARIO" MODIFY ("CURSO_ID" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."DETALLECURSOHORARIO" MODIFY ("HORARIO_CLASE_ID" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."DETALLECURSOHORARIO" ADD CONSTRAINT "PK_DETALLE_CURSO_HORARIO" PRIMARY KEY ("CURSO_ID", "HORARIO_CLASE_ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ESTUDIANTE
--------------------------------------------------------

ALTER TABLE "MIGUEL"."ESTUDIANTE" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."ESTUDIANTE" MODIFY ("CORREO" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."ESTUDIANTE" MODIFY ("CONTRASENA" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."ESTUDIANTE" ADD CONSTRAINT "PK_ESTUDIANTE" PRIMARY KEY ("CEDULA")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Constraints for Table EXAMEN
--------------------------------------------------------

ALTER TABLE "MIGUEL"."EXAMEN" MODIFY ("NOMBRE" NOT NULL ENABLE);
ALTER TABLE "MIGUEL"."EXAMEN" ADD CONSTRAINT "PK_EXAMEN" PRIMARY KEY ("ID")
    USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TS_INDICES"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CONTENIDO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."CONTENIDO" ADD CONSTRAINT "FK_CONTENIDO_UNIDAD" FOREIGN KEY ("ID_UNIDAD")
    REFERENCES "MIGUEL"."UNIDAD" ("ID_UNIDAD") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table CURSO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."CURSO" ADD CONSTRAINT "FK_PROFESOR" FOREIGN KEY ("PROFESOR_CEDULA")
    REFERENCES "MIGUEL"."PROFESOR" ("CEDULA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLECURSOHORARIO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."DETALLECURSOHORARIO" ADD CONSTRAINT "FK_DCH_CURSO" FOREIGN KEY ("CURSO_ID")
    REFERENCES "MIGUEL"."CURSO" ("ID_CURSO") ENABLE;
ALTER TABLE "MIGUEL"."DETALLECURSOHORARIO" ADD CONSTRAINT "FK_DCH_HORARIO" FOREIGN KEY ("HORARIO_CLASE_ID")
    REFERENCES "MIGUEL"."HORARIO_CLASE" ("ID_HORARIO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLEESTUDIANTECURSO
--------------------------------------------------------

ALTER TABLE "MIGUEL"."DETALLEESTUDIANTECURSO" ADD CONSTRAINT "FK_DETALLE_ESTUDIANTE" FOREIGN KEY ("ESTUDIANTE_CEDULA")
    REFERENCES "MIGUEL"."ESTUDIANTE" ("CEDULA") ENABLE;
ALTER TABLE "MIGUEL"."DETALLEESTUDIANTECURSO" ADD CONSTRAINT "FK_DETALLE_CURSO" FOREIGN KEY ("CURSO_ID")
    REFERENCES "MIGUEL"."CURSO" ("ID_CURSO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table DETALLEPREGUNTAEXAMEN
--------------------------------------------------------

ALTER TABLE "MIGUEL"."DETALLEPREGUNTAEXAMEN" ADD CONSTRAINT "FK_DETALLEPEX_EXAMEN" FOREIGN KEY ("EXAMEN_ID")
    REFERENCES "MIGUEL"."EXAMEN" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."DETALLEPREGUNTAEXAMEN" ADD CONSTRAINT "FK_DETALLEPEX_PREGUNTA" FOREIGN KEY ("PREGUNTA_ID")
    REFERENCES "MIGUEL"."PREGUNTA" ("ID_PREGUNTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EXAMEN
--------------------------------------------------------

ALTER TABLE "MIGUEL"."EXAMEN" ADD CONSTRAINT "FK_EXAMEN_CREACION" FOREIGN KEY ("CREACION_ID")
    REFERENCES "MIGUEL"."CREACION" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."EXAMEN" ADD CONSTRAINT "FK_EXAMEN_CATEGORIA" FOREIGN KEY ("CATEGORIA_ID")
    REFERENCES "MIGUEL"."CATEGORIA" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."EXAMEN" ADD CONSTRAINT "FK_EXAMEN_CURSO" FOREIGN KEY ("CURSO_ID")
    REFERENCES "MIGUEL"."CURSO" ("ID_CURSO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table HORARIO_CLASE
--------------------------------------------------------

ALTER TABLE "MIGUEL"."HORARIO_CLASE" ADD CONSTRAINT "FK_DIA_SEMANA" FOREIGN KEY ("DIA_SEMANA_ID")
    REFERENCES "MIGUEL"."DIA_SEMANA" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table OPCIONPREGUNTA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."OPCIONPREGUNTA" ADD CONSTRAINT "FK_PREGUNTA_OPCION" FOREIGN KEY ("PREGUNTA_ID")
    REFERENCES "MIGUEL"."PREGUNTA" ("ID_PREGUNTA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PREGUNTA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "FK_TIPO_PREGUNTA" FOREIGN KEY ("TIPO_PREGUNTA_ID")
    REFERENCES "MIGUEL"."TIPOPREGUNTA" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "FK_VISIBILIDAD" FOREIGN KEY ("VISIBILIDAD_ID")
    REFERENCES "MIGUEL"."VISIBILIDAD" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "FK_NIVEL" FOREIGN KEY ("NIVEL_ID")
    REFERENCES "MIGUEL"."NIVEL" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "FK_PREGUNTA_PADRE" FOREIGN KEY ("PREGUNTA_PADRE")
    REFERENCES "MIGUEL"."PREGUNTA" ("ID_PREGUNTA") ENABLE;
ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "FK_CONTENIDO" FOREIGN KEY ("CONTENIDO_ID")
    REFERENCES "MIGUEL"."CONTENIDO" ("ID_CONTENIDO") ENABLE;
ALTER TABLE "MIGUEL"."PREGUNTA" ADD CONSTRAINT "FK_PREGUNTA_PROFESOR_CREADOR" FOREIGN KEY ("CREADOR_CEDULA_PROFESOR")
    REFERENCES "MIGUEL"."PROFESOR" ("CEDULA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PREGUNTAEXAMENESTUDIANTE
--------------------------------------------------------

ALTER TABLE "MIGUEL"."PREGUNTAEXAMENESTUDIANTE" ADD CONSTRAINT "FK_PEXES_PRESENTACION_EXAMEN" FOREIGN KEY ("PRESENTACION_EXAMEN_ID")
    REFERENCES "MIGUEL"."PRESENTACIONEXAMEN" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."PREGUNTAEXAMENESTUDIANTE" ADD CONSTRAINT "FK_PEXES_DETALLE_EXAMEN_PREGUNTA" FOREIGN KEY ("DETALLE_PREGUNTA_EXAMEN_EXAMEN_ID", "DETALLE_PREGUNTA_EXAMEN_PREGUNTA_ID")
    REFERENCES "MIGUEL"."DETALLEPREGUNTAEXAMEN" ("EXAMEN_ID", "PREGUNTA_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table PRESENTACIONEXAMEN
--------------------------------------------------------

ALTER TABLE "MIGUEL"."PRESENTACIONEXAMEN" ADD CONSTRAINT "FK_PRESENTEX_EXAMEN" FOREIGN KEY ("EXAMEN_ID")
    REFERENCES "MIGUEL"."EXAMEN" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."PRESENTACIONEXAMEN" ADD CONSTRAINT "FK_PRESENTEX_ESTUDIANTE" FOREIGN KEY ("ESTUDIANTE_CEDULA")
    REFERENCES "MIGUEL"."ESTUDIANTE" ("CEDULA") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RESPUESTAPREGUNTA
--------------------------------------------------------

ALTER TABLE "MIGUEL"."RESPUESTAPREGUNTA" ADD CONSTRAINT "FK_RESP_OPCION_PREGUNTA" FOREIGN KEY ("OPCION_PREGUNTA_ID")
    REFERENCES "MIGUEL"."OPCIONPREGUNTA" ("ID") ENABLE;
ALTER TABLE "MIGUEL"."RESPUESTAPREGUNTA" ADD CONSTRAINT "FK_RESP_PREGUNTA_EXAMEN_EST" FOREIGN KEY ("PREGUNTAEXAMENESTUDIANTE_ID")
    REFERENCES "MIGUEL"."PREGUNTAEXAMENESTUDIANTE" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table UNIDAD
--------------------------------------------------------

ALTER TABLE "MIGUEL"."UNIDAD" ADD CONSTRAINT "FK_UNIDAD_CURSO" FOREIGN KEY ("ID_CURSO")
    REFERENCES "MIGUEL"."CURSO" ("ID_CURSO") ENABLE;
